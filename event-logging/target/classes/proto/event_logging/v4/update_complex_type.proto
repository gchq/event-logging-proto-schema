// event_logging/v4/update_complex_type.proto at 0:0
syntax = "proto3";
package event_logging.v4;

import "event_logging/v4/data_complex_type.proto";
import "event_logging/v4/multi_object_complex_type.proto";
import "event_logging/v4/outcome_complex_type.proto";
import "buf/validate/validate.proto";

// Describes the update/modification/change to a file, object, entity, piece of data, etc.
message UpdateComplexType {
  // Describes the state of one or more object properties before it was changed.
  MultiObjectComplexType before = 1;
  // Describes the state of one or more object properties after it was changed.
  MultiObjectComplexType after = 2 [
    (buf.validate.field).required = true
  ];
  // Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
  OutcomeComplexType outcome = 3;
  // Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
  repeated DataComplexType data = 4 [
    (buf.validate.field).repeated = {
      min_items: 0
    }
  ];
}
