// event_logging/v4/print_complex_type.proto at 0:0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: event_logging/v4/print_complex_type.proto

package event_loggingv4

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes an event relating to a printer, e.g. printing a document.
type PrintComplexType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The print action that was performed, e.g. CreateJob.
	Action PrintActionSimpleType `protobuf:"varint,1,opt,name=action,proto3,enum=event_logging.v4.PrintActionSimpleType" json:"action,omitempty"`
	// Describes the print job that the event relates to.
	PrintJob *PrintComplexType_PrintJobType `protobuf:"bytes,2,opt,name=print_job,json=printJob,proto3" json:"print_job,omitempty"`
	// The printer settings that are to be used for the print job.
	PrintSettings *PrintComplexType_PrintSettingsType `protobuf:"bytes,3,opt,name=print_settings,json=printSettings,proto3" json:"print_settings,omitempty"`
	// Describes the printer to use for the print job.
	Printer *DeviceComplexType `protobuf:"bytes,4,opt,name=printer,proto3" json:"printer,omitempty"`
	// Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
	Outcome *OutcomeComplexType `protobuf:"bytes,5,opt,name=outcome,proto3" json:"outcome,omitempty"`
	// Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
	Data []*DataComplexType `protobuf:"bytes,6,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PrintComplexType) Reset() {
	*x = PrintComplexType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_logging_v4_print_complex_type_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrintComplexType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrintComplexType) ProtoMessage() {}

func (x *PrintComplexType) ProtoReflect() protoreflect.Message {
	mi := &file_event_logging_v4_print_complex_type_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrintComplexType.ProtoReflect.Descriptor instead.
func (*PrintComplexType) Descriptor() ([]byte, []int) {
	return file_event_logging_v4_print_complex_type_proto_rawDescGZIP(), []int{0}
}

func (x *PrintComplexType) GetAction() PrintActionSimpleType {
	if x != nil {
		return x.Action
	}
	return PrintActionSimpleType_PRINT_ACTION_SIMPLE_TYPE_UNSPECIFIED
}

func (x *PrintComplexType) GetPrintJob() *PrintComplexType_PrintJobType {
	if x != nil {
		return x.PrintJob
	}
	return nil
}

func (x *PrintComplexType) GetPrintSettings() *PrintComplexType_PrintSettingsType {
	if x != nil {
		return x.PrintSettings
	}
	return nil
}

func (x *PrintComplexType) GetPrinter() *DeviceComplexType {
	if x != nil {
		return x.Printer
	}
	return nil
}

func (x *PrintComplexType) GetOutcome() *OutcomeComplexType {
	if x != nil {
		return x.Outcome
	}
	return nil
}

func (x *PrintComplexType) GetData() []*DataComplexType {
	if x != nil {
		return x.Data
	}
	return nil
}

// Describes the print job that the event relates to.
type PrintComplexType_PrintJobType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Describes the document being printed.
	Document *DocumentComplexType `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
	// The number of pages being printed.
	Pages uint32 `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
	// The size of the print job in bytes.
	Size uint32 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	// The time that the print job was submitted.
	Submitted *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=submitted,proto3" json:"submitted,omitempty"`
}

func (x *PrintComplexType_PrintJobType) Reset() {
	*x = PrintComplexType_PrintJobType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_logging_v4_print_complex_type_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrintComplexType_PrintJobType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrintComplexType_PrintJobType) ProtoMessage() {}

func (x *PrintComplexType_PrintJobType) ProtoReflect() protoreflect.Message {
	mi := &file_event_logging_v4_print_complex_type_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrintComplexType_PrintJobType.ProtoReflect.Descriptor instead.
func (*PrintComplexType_PrintJobType) Descriptor() ([]byte, []int) {
	return file_event_logging_v4_print_complex_type_proto_rawDescGZIP(), []int{0, 0}
}

func (x *PrintComplexType_PrintJobType) GetDocument() *DocumentComplexType {
	if x != nil {
		return x.Document
	}
	return nil
}

func (x *PrintComplexType_PrintJobType) GetPages() uint32 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *PrintComplexType_PrintJobType) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PrintComplexType_PrintJobType) GetSubmitted() *timestamppb.Timestamp {
	if x != nil {
		return x.Submitted
	}
	return nil
}

// The printer settings that are to be used for the print job.
type PrintComplexType_PrintSettingsType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The paper size, e.g. A4.
	PaperSize string `protobuf:"bytes,1,opt,name=paper_size,json=paperSize,proto3" json:"paper_size,omitempty"`
	// The paper orientation, e.g. Portrait, Landscape.
	Orientation PrintSettingsOrientationSimpleType `protobuf:"varint,2,opt,name=orientation,proto3,enum=event_logging.v4.PrintSettingsOrientationSimpleType" json:"orientation,omitempty"`
	// True if printing in colour. Most printing is performed in black and white so this defaults to false and can therefore be omitted if printing in black and white.
	Colour bool `protobuf:"varint,3,opt,name=colour,proto3" json:"colour,omitempty"`
	// True if fonts are to be used on the printing device. Using device fonts reduces the size of the print job as no font information needs to be supplied to the printer. However, using device fonts will result in different output on different printers. Most print jobs will not use device fonts so this defaults to false and can therefore be omitted if device fonts are not being used.
	DeviceFonts bool `protobuf:"varint,4,opt,name=device_fonts,json=deviceFonts,proto3" json:"device_fonts,omitempty"`
	// Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
	Data []*DataComplexType `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PrintComplexType_PrintSettingsType) Reset() {
	*x = PrintComplexType_PrintSettingsType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_logging_v4_print_complex_type_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrintComplexType_PrintSettingsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrintComplexType_PrintSettingsType) ProtoMessage() {}

func (x *PrintComplexType_PrintSettingsType) ProtoReflect() protoreflect.Message {
	mi := &file_event_logging_v4_print_complex_type_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrintComplexType_PrintSettingsType.ProtoReflect.Descriptor instead.
func (*PrintComplexType_PrintSettingsType) Descriptor() ([]byte, []int) {
	return file_event_logging_v4_print_complex_type_proto_rawDescGZIP(), []int{0, 1}
}

func (x *PrintComplexType_PrintSettingsType) GetPaperSize() string {
	if x != nil {
		return x.PaperSize
	}
	return ""
}

func (x *PrintComplexType_PrintSettingsType) GetOrientation() PrintSettingsOrientationSimpleType {
	if x != nil {
		return x.Orientation
	}
	return PrintSettingsOrientationSimpleType_PRINT_SETTINGS_ORIENTATION_SIMPLE_TYPE_UNSPECIFIED
}

func (x *PrintComplexType_PrintSettingsType) GetColour() bool {
	if x != nil {
		return x.Colour
	}
	return false
}

func (x *PrintComplexType_PrintSettingsType) GetDeviceFonts() bool {
	if x != nil {
		return x.DeviceFonts
	}
	return false
}

func (x *PrintComplexType_PrintSettingsType) GetData() []*DataComplexType {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_event_logging_v4_print_complex_type_proto protoreflect.FileDescriptor

var file_event_logging_v4_print_complex_type_proto_rawDesc = []byte{
	0x0a, 0x29, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f,
	0x76, 0x34, 0x2f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x1a, 0x28, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x34, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c,
	0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x34, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69,
	0x6e, 0x67, 0x2f, 0x76, 0x34, 0x2f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x2f, 0x76, 0x34, 0x2f, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x78, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x34,
	0x2f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x3d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x76,
	0x34, 0x2f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x5f, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb3, 0x07, 0x0a,
	0x10, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x47, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x27, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x34, 0x2e, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x09, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34,
	0x2e, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x79, 0x70,
	0x65, 0x2e, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x42, 0x06,
	0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x4a, 0x6f, 0x62,
	0x12, 0x5b, 0x0a, 0x0e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x50, 0x72, 0x69, 0x6e,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x50, 0x72, 0x69,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3d, 0x0a,
	0x07, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x34, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x07,
	0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34,
	0x2e, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0xba,
	0x48, 0x05, 0x92, 0x01, 0x02, 0x08, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xcf, 0x01,
	0x0a, 0x0c, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x49,
	0x0a, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x34, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52,
	0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xba, 0x48, 0x04, 0x2a, 0x02, 0x28,
	0x00, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xba, 0x48, 0x04, 0x2a, 0x02, 0x28, 0x00, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x1a,
	0x90, 0x02, 0x0a, 0x11, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x70, 0x65, 0x72,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x60, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x50, 0x72, 0x69,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x08, 0xba, 0x48, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x6f, 0x6e, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x6f, 0x6e, 0x74,
	0x73, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x34, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x08, 0xba, 0x48, 0x05, 0x92, 0x01, 0x02, 0x08, 0x00, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x42, 0xd9, 0x01, 0x0a, 0x1c, 0x75, 0x6b, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x67, 0x63,
	0x68, 0x71, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x34, 0x42, 0x15, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x78, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x45, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x63, 0x68, 0x71, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2d, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2d, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x2f, 0x76, 0x34, 0x3b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e,
	0x67, 0x76, 0x34, 0xa2, 0x02, 0x03, 0x45, 0x58, 0x58, 0xaa, 0x02, 0x0f, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x34, 0xca, 0x02, 0x0f, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x34, 0xe2, 0x02, 0x1b,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x34, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x3a, 0x3a, 0x56, 0x34, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_event_logging_v4_print_complex_type_proto_rawDescOnce sync.Once
	file_event_logging_v4_print_complex_type_proto_rawDescData = file_event_logging_v4_print_complex_type_proto_rawDesc
)

func file_event_logging_v4_print_complex_type_proto_rawDescGZIP() []byte {
	file_event_logging_v4_print_complex_type_proto_rawDescOnce.Do(func() {
		file_event_logging_v4_print_complex_type_proto_rawDescData = protoimpl.X.CompressGZIP(file_event_logging_v4_print_complex_type_proto_rawDescData)
	})
	return file_event_logging_v4_print_complex_type_proto_rawDescData
}

var file_event_logging_v4_print_complex_type_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_event_logging_v4_print_complex_type_proto_goTypes = []interface{}{
	(*PrintComplexType)(nil),                   // 0: event_logging.v4.PrintComplexType
	(*PrintComplexType_PrintJobType)(nil),      // 1: event_logging.v4.PrintComplexType.PrintJobType
	(*PrintComplexType_PrintSettingsType)(nil), // 2: event_logging.v4.PrintComplexType.PrintSettingsType
	(PrintActionSimpleType)(0),                 // 3: event_logging.v4.PrintActionSimpleType
	(*DeviceComplexType)(nil),                  // 4: event_logging.v4.DeviceComplexType
	(*OutcomeComplexType)(nil),                 // 5: event_logging.v4.OutcomeComplexType
	(*DataComplexType)(nil),                    // 6: event_logging.v4.DataComplexType
	(*DocumentComplexType)(nil),                // 7: event_logging.v4.DocumentComplexType
	(*timestamppb.Timestamp)(nil),              // 8: google.protobuf.Timestamp
	(PrintSettingsOrientationSimpleType)(0),    // 9: event_logging.v4.PrintSettingsOrientationSimpleType
}
var file_event_logging_v4_print_complex_type_proto_depIdxs = []int32{
	3,  // 0: event_logging.v4.PrintComplexType.action:type_name -> event_logging.v4.PrintActionSimpleType
	1,  // 1: event_logging.v4.PrintComplexType.print_job:type_name -> event_logging.v4.PrintComplexType.PrintJobType
	2,  // 2: event_logging.v4.PrintComplexType.print_settings:type_name -> event_logging.v4.PrintComplexType.PrintSettingsType
	4,  // 3: event_logging.v4.PrintComplexType.printer:type_name -> event_logging.v4.DeviceComplexType
	5,  // 4: event_logging.v4.PrintComplexType.outcome:type_name -> event_logging.v4.OutcomeComplexType
	6,  // 5: event_logging.v4.PrintComplexType.data:type_name -> event_logging.v4.DataComplexType
	7,  // 6: event_logging.v4.PrintComplexType.PrintJobType.document:type_name -> event_logging.v4.DocumentComplexType
	8,  // 7: event_logging.v4.PrintComplexType.PrintJobType.submitted:type_name -> google.protobuf.Timestamp
	9,  // 8: event_logging.v4.PrintComplexType.PrintSettingsType.orientation:type_name -> event_logging.v4.PrintSettingsOrientationSimpleType
	6,  // 9: event_logging.v4.PrintComplexType.PrintSettingsType.data:type_name -> event_logging.v4.DataComplexType
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_event_logging_v4_print_complex_type_proto_init() }
func file_event_logging_v4_print_complex_type_proto_init() {
	if File_event_logging_v4_print_complex_type_proto != nil {
		return
	}
	file_event_logging_v4_data_complex_type_proto_init()
	file_event_logging_v4_device_complex_type_proto_init()
	file_event_logging_v4_document_complex_type_proto_init()
	file_event_logging_v4_outcome_complex_type_proto_init()
	file_event_logging_v4_print_action_simple_type_proto_init()
	file_event_logging_v4_print_settings_orientation_simple_type_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_event_logging_v4_print_complex_type_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrintComplexType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_logging_v4_print_complex_type_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrintComplexType_PrintJobType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_logging_v4_print_complex_type_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrintComplexType_PrintSettingsType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_event_logging_v4_print_complex_type_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_event_logging_v4_print_complex_type_proto_goTypes,
		DependencyIndexes: file_event_logging_v4_print_complex_type_proto_depIdxs,
		MessageInfos:      file_event_logging_v4_print_complex_type_proto_msgTypes,
	}.Build()
	File_event_logging_v4_print_complex_type_proto = out.File
	file_event_logging_v4_print_complex_type_proto_rawDesc = nil
	file_event_logging_v4_print_complex_type_proto_goTypes = nil
	file_event_logging_v4_print_complex_type_proto_depIdxs = nil
}
