// event_logging/v4/purpose_complex_type.proto at 0:0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: event_logging/v4/purpose_complex_type.proto

package event_loggingv4

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes the purpose and justification for the event along with details of any authorisations that were required for the event to happen.
type PurposeComplexType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The classification of this task.
	Classification *ClassificationComplexType `protobuf:"bytes,1,opt,name=classification,proto3" json:"classification,omitempty"`
	// A description of the task.
	Subject string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	// Names of stakeholders.
	Stakeholders string `protobuf:"bytes,3,opt,name=stakeholders,proto3" json:"stakeholders,omitempty"`
	// Business case supporting task.
	Justification string `protobuf:"bytes,4,opt,name=justification,proto3" json:"justification,omitempty"`
	// Expected outcome from task.
	ExpectedOutcome string `protobuf:"bytes,5,opt,name=expected_outcome,json=expectedOutcome,proto3" json:"expected_outcome,omitempty"`
	// The authorisations that were granted to allow this event action to take place.
	Authorisations *PurposeComplexType_AuthorisationsType `protobuf:"bytes,6,opt,name=authorisations,proto3" json:"authorisations,omitempty"`
	// Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
	Data []*DataComplexType `protobuf:"bytes,7,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PurposeComplexType) Reset() {
	*x = PurposeComplexType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_logging_v4_purpose_complex_type_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurposeComplexType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurposeComplexType) ProtoMessage() {}

func (x *PurposeComplexType) ProtoReflect() protoreflect.Message {
	mi := &file_event_logging_v4_purpose_complex_type_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurposeComplexType.ProtoReflect.Descriptor instead.
func (*PurposeComplexType) Descriptor() ([]byte, []int) {
	return file_event_logging_v4_purpose_complex_type_proto_rawDescGZIP(), []int{0}
}

func (x *PurposeComplexType) GetClassification() *ClassificationComplexType {
	if x != nil {
		return x.Classification
	}
	return nil
}

func (x *PurposeComplexType) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *PurposeComplexType) GetStakeholders() string {
	if x != nil {
		return x.Stakeholders
	}
	return ""
}

func (x *PurposeComplexType) GetJustification() string {
	if x != nil {
		return x.Justification
	}
	return ""
}

func (x *PurposeComplexType) GetExpectedOutcome() string {
	if x != nil {
		return x.ExpectedOutcome
	}
	return ""
}

func (x *PurposeComplexType) GetAuthorisations() *PurposeComplexType_AuthorisationsType {
	if x != nil {
		return x.Authorisations
	}
	return nil
}

func (x *PurposeComplexType) GetData() []*DataComplexType {
	if x != nil {
		return x.Data
	}
	return nil
}

// Details of authorisations that were granted to allow this event action to take place.
type PurposeComplexType_AuthorisationsType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An authorisation that was granted to allow this event action to take place.
	Auth []*PurposeComplexType_AuthorisationsType_AuthType `protobuf:"bytes,1,rep,name=auth,proto3" json:"auth,omitempty"`
}

func (x *PurposeComplexType_AuthorisationsType) Reset() {
	*x = PurposeComplexType_AuthorisationsType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_logging_v4_purpose_complex_type_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurposeComplexType_AuthorisationsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurposeComplexType_AuthorisationsType) ProtoMessage() {}

func (x *PurposeComplexType_AuthorisationsType) ProtoReflect() protoreflect.Message {
	mi := &file_event_logging_v4_purpose_complex_type_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurposeComplexType_AuthorisationsType.ProtoReflect.Descriptor instead.
func (*PurposeComplexType_AuthorisationsType) Descriptor() ([]byte, []int) {
	return file_event_logging_v4_purpose_complex_type_proto_rawDescGZIP(), []int{0, 0}
}

func (x *PurposeComplexType_AuthorisationsType) GetAuth() []*PurposeComplexType_AuthorisationsType_AuthType {
	if x != nil {
		return x.Auth
	}
	return nil
}

// Details of an authorisation that was granted to allow this event action to take place.
type PurposeComplexType_AuthorisationsType_AuthType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The reference number, code or ID for the authorisation.
	RefNo string `protobuf:"bytes,1,opt,name=ref_no,json=refNo,proto3" json:"ref_no,omitempty"`
	// A textual description of the authorisation or any additional detail.
	Detail string `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *PurposeComplexType_AuthorisationsType_AuthType) Reset() {
	*x = PurposeComplexType_AuthorisationsType_AuthType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_logging_v4_purpose_complex_type_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurposeComplexType_AuthorisationsType_AuthType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurposeComplexType_AuthorisationsType_AuthType) ProtoMessage() {}

func (x *PurposeComplexType_AuthorisationsType_AuthType) ProtoReflect() protoreflect.Message {
	mi := &file_event_logging_v4_purpose_complex_type_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurposeComplexType_AuthorisationsType_AuthType.ProtoReflect.Descriptor instead.
func (*PurposeComplexType_AuthorisationsType_AuthType) Descriptor() ([]byte, []int) {
	return file_event_logging_v4_purpose_complex_type_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *PurposeComplexType_AuthorisationsType_AuthType) GetRefNo() string {
	if x != nil {
		return x.RefNo
	}
	return ""
}

func (x *PurposeComplexType_AuthorisationsType_AuthType) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

var File_event_logging_v4_purpose_complex_type_proto protoreflect.FileDescriptor

var file_event_logging_v4_purpose_complex_type_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f,
	0x76, 0x34, 0x2f, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x78, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x1a,
	0x32, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x76,
	0x34, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69,
	0x6e, 0x67, 0x2f, 0x76, 0x34, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x78, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62,
	0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcc, 0x04, 0x0a, 0x12, 0x50,
	0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x53, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6a, 0x75, 0x73,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4f, 0x75,
	0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x5f, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34,
	0x2e, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54,
	0x79, 0x70, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67,
	0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0xba, 0x48, 0x05, 0x92, 0x01, 0x02, 0x08,
	0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xaf, 0x01, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5e,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e,
	0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x79,
	0x70, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08,
	0xba, 0x48, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x1a, 0x39,
	0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x65,
	0x66, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x66, 0x4e,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0xdb, 0x01, 0x0a, 0x1c, 0x75, 0x6b,
	0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x67, 0x63, 0x68, 0x71, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x42, 0x17, 0x50, 0x75, 0x72, 0x70,
	0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x67, 0x63, 0x68, 0x71, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2d, 0x6c, 0x6f, 0x67,
	0x67, 0x69, 0x6e, 0x67, 0x2d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x34, 0x3b, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x76, 0x34, 0xa2, 0x02, 0x03, 0x45,
	0x58, 0x58, 0xaa, 0x02, 0x0f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e,
	0x67, 0x2e, 0x56, 0x34, 0xca, 0x02, 0x0f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x67,
	0x69, 0x6e, 0x67, 0x5c, 0x56, 0x34, 0xe2, 0x02, 0x1b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f,
	0x67, 0x67, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x34, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x67,
	0x69, 0x6e, 0x67, 0x3a, 0x3a, 0x56, 0x34, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_event_logging_v4_purpose_complex_type_proto_rawDescOnce sync.Once
	file_event_logging_v4_purpose_complex_type_proto_rawDescData = file_event_logging_v4_purpose_complex_type_proto_rawDesc
)

func file_event_logging_v4_purpose_complex_type_proto_rawDescGZIP() []byte {
	file_event_logging_v4_purpose_complex_type_proto_rawDescOnce.Do(func() {
		file_event_logging_v4_purpose_complex_type_proto_rawDescData = protoimpl.X.CompressGZIP(file_event_logging_v4_purpose_complex_type_proto_rawDescData)
	})
	return file_event_logging_v4_purpose_complex_type_proto_rawDescData
}

var file_event_logging_v4_purpose_complex_type_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_event_logging_v4_purpose_complex_type_proto_goTypes = []interface{}{
	(*PurposeComplexType)(nil),                             // 0: event_logging.v4.PurposeComplexType
	(*PurposeComplexType_AuthorisationsType)(nil),          // 1: event_logging.v4.PurposeComplexType.AuthorisationsType
	(*PurposeComplexType_AuthorisationsType_AuthType)(nil), // 2: event_logging.v4.PurposeComplexType.AuthorisationsType.AuthType
	(*ClassificationComplexType)(nil),                      // 3: event_logging.v4.ClassificationComplexType
	(*DataComplexType)(nil),                                // 4: event_logging.v4.DataComplexType
}
var file_event_logging_v4_purpose_complex_type_proto_depIdxs = []int32{
	3, // 0: event_logging.v4.PurposeComplexType.classification:type_name -> event_logging.v4.ClassificationComplexType
	1, // 1: event_logging.v4.PurposeComplexType.authorisations:type_name -> event_logging.v4.PurposeComplexType.AuthorisationsType
	4, // 2: event_logging.v4.PurposeComplexType.data:type_name -> event_logging.v4.DataComplexType
	2, // 3: event_logging.v4.PurposeComplexType.AuthorisationsType.auth:type_name -> event_logging.v4.PurposeComplexType.AuthorisationsType.AuthType
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_event_logging_v4_purpose_complex_type_proto_init() }
func file_event_logging_v4_purpose_complex_type_proto_init() {
	if File_event_logging_v4_purpose_complex_type_proto != nil {
		return
	}
	file_event_logging_v4_classification_complex_type_proto_init()
	file_event_logging_v4_data_complex_type_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_event_logging_v4_purpose_complex_type_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurposeComplexType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_logging_v4_purpose_complex_type_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurposeComplexType_AuthorisationsType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_logging_v4_purpose_complex_type_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurposeComplexType_AuthorisationsType_AuthType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_event_logging_v4_purpose_complex_type_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_event_logging_v4_purpose_complex_type_proto_goTypes,
		DependencyIndexes: file_event_logging_v4_purpose_complex_type_proto_depIdxs,
		MessageInfos:      file_event_logging_v4_purpose_complex_type_proto_msgTypes,
	}.Build()
	File_event_logging_v4_purpose_complex_type_proto = out.File
	file_event_logging_v4_purpose_complex_type_proto_rawDesc = nil
	file_event_logging_v4_purpose_complex_type_proto_goTypes = nil
	file_event_logging_v4_purpose_complex_type_proto_depIdxs = nil
}
