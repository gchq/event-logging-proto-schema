// event_logging/v4/location_complex_type.proto at 0:0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: event_logging/v4/location_complex_type.proto

package event_loggingv4

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes the geographic location of the device.
type LocationComplexType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ISO-3166 country short name, e.g. 'UNITED KINGDOM OF GREAT BRITAIN AND NORTHERN IRELAND' or 'ANDORRA'
	Country string `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	// The location State or Province.
	State string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	// The location City.
	City string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	// The location Town.
	Town string `protobuf:"bytes,4,opt,name=town,proto3" json:"town,omitempty"`
	// The name of the site of the location, e.g. where an organisation has multiple distinct sites or campuses. Specifying the site is particularly important when the sites are in the same town/city.
	Site string `protobuf:"bytes,5,opt,name=site,proto3" json:"site,omitempty"`
	// The name of the building.
	Building string `protobuf:"bytes,6,opt,name=building,proto3" json:"building,omitempty"`
	// The floor of the building that the location refers to.
	Floor int32 `protobuf:"varint,7,opt,name=floor,proto3" json:"floor,omitempty"`
	// The identifier (e.g. name) of the room that the location refers to.
	Room string `protobuf:"bytes,8,opt,name=room,proto3" json:"room,omitempty"`
	// The identifier (e.g. name) of the desk that the location refers to.
	Desk string `protobuf:"bytes,9,opt,name=desk,proto3" json:"desk,omitempty"`
	// The identifier for the rack/cabinet where the location refers to a rack mounted device, e.g. a rack mounted 4U server in a cabinet.
	Rack string `protobuf:"bytes,10,opt,name=rack,proto3" json:"rack,omitempty"`
	// The position of the device where the location refers to a rack mounted device in a rack/cabinet. E.g. where a 4U device occupies U positions 1-4 in a cabinet (numbered from the bottom of the cabinet, starting from 1), the position would be '1'.
	Position string `protobuf:"bytes,11,opt,name=position,proto3" json:"position,omitempty"`
	// The timezone name for the location as defined by the IANA Timezone Database (https://www.iana.org/time-zones), e.g. 'Europe/London' or 'Australia/NSW'.
	TimeZoneName string `protobuf:"bytes,41,opt,name=time_zone_name,json=timeZoneName,proto3" json:"time_zone_name,omitempty"`
	// The geographic coordinates of the location (i.e. the latitude/longitude).
	Coordinates *CoordinatesComplexType `protobuf:"bytes,42,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
	// The name of a zone within a building or site with some form of access control/monitoring for entry/exit to the zone.
	AccessZone string `protobuf:"bytes,43,opt,name=access_zone,json=accessZone,proto3" json:"access_zone,omitempty"`
}

func (x *LocationComplexType) Reset() {
	*x = LocationComplexType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_logging_v4_location_complex_type_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationComplexType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationComplexType) ProtoMessage() {}

func (x *LocationComplexType) ProtoReflect() protoreflect.Message {
	mi := &file_event_logging_v4_location_complex_type_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationComplexType.ProtoReflect.Descriptor instead.
func (*LocationComplexType) Descriptor() ([]byte, []int) {
	return file_event_logging_v4_location_complex_type_proto_rawDescGZIP(), []int{0}
}

func (x *LocationComplexType) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *LocationComplexType) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *LocationComplexType) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *LocationComplexType) GetTown() string {
	if x != nil {
		return x.Town
	}
	return ""
}

func (x *LocationComplexType) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *LocationComplexType) GetBuilding() string {
	if x != nil {
		return x.Building
	}
	return ""
}

func (x *LocationComplexType) GetFloor() int32 {
	if x != nil {
		return x.Floor
	}
	return 0
}

func (x *LocationComplexType) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

func (x *LocationComplexType) GetDesk() string {
	if x != nil {
		return x.Desk
	}
	return ""
}

func (x *LocationComplexType) GetRack() string {
	if x != nil {
		return x.Rack
	}
	return ""
}

func (x *LocationComplexType) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *LocationComplexType) GetTimeZoneName() string {
	if x != nil {
		return x.TimeZoneName
	}
	return ""
}

func (x *LocationComplexType) GetCoordinates() *CoordinatesComplexType {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *LocationComplexType) GetAccessZone() string {
	if x != nil {
		return x.AccessZone
	}
	return ""
}

var File_event_logging_v4_location_complex_type_proto protoreflect.FileDescriptor

var file_event_logging_v4_location_complex_type_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f,
	0x76, 0x34, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x78, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34,
	0x1a, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f,
	0x76, 0x34, 0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9e,
	0x03, 0x0a, 0x13, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f,
	0x77, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x6f, 0x77, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69,
	0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66,
	0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x6b,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x61, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x63, 0x6b,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x29,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x2b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5a, 0x6f, 0x6e, 0x65, 0x42,
	0xdc, 0x01, 0x0a, 0x1c, 0x75, 0x6b, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x67, 0x63, 0x68, 0x71, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34,
	0x42, 0x18, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x78, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x45, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x63, 0x68, 0x71, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2d, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2d, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x2f, 0x76, 0x34, 0x3b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e,
	0x67, 0x76, 0x34, 0xa2, 0x02, 0x03, 0x45, 0x58, 0x58, 0xaa, 0x02, 0x0f, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x56, 0x34, 0xca, 0x02, 0x0f, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x34, 0xe2, 0x02, 0x1b,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x34, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x3a, 0x3a, 0x56, 0x34, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_event_logging_v4_location_complex_type_proto_rawDescOnce sync.Once
	file_event_logging_v4_location_complex_type_proto_rawDescData = file_event_logging_v4_location_complex_type_proto_rawDesc
)

func file_event_logging_v4_location_complex_type_proto_rawDescGZIP() []byte {
	file_event_logging_v4_location_complex_type_proto_rawDescOnce.Do(func() {
		file_event_logging_v4_location_complex_type_proto_rawDescData = protoimpl.X.CompressGZIP(file_event_logging_v4_location_complex_type_proto_rawDescData)
	})
	return file_event_logging_v4_location_complex_type_proto_rawDescData
}

var file_event_logging_v4_location_complex_type_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_event_logging_v4_location_complex_type_proto_goTypes = []interface{}{
	(*LocationComplexType)(nil),    // 0: event_logging.v4.LocationComplexType
	(*CoordinatesComplexType)(nil), // 1: event_logging.v4.CoordinatesComplexType
}
var file_event_logging_v4_location_complex_type_proto_depIdxs = []int32{
	1, // 0: event_logging.v4.LocationComplexType.coordinates:type_name -> event_logging.v4.CoordinatesComplexType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_event_logging_v4_location_complex_type_proto_init() }
func file_event_logging_v4_location_complex_type_proto_init() {
	if File_event_logging_v4_location_complex_type_proto != nil {
		return
	}
	file_event_logging_v4_coordinates_complex_type_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_event_logging_v4_location_complex_type_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationComplexType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_event_logging_v4_location_complex_type_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_event_logging_v4_location_complex_type_proto_goTypes,
		DependencyIndexes: file_event_logging_v4_location_complex_type_proto_depIdxs,
		MessageInfos:      file_event_logging_v4_location_complex_type_proto_msgTypes,
	}.Build()
	File_event_logging_v4_location_complex_type_proto = out.File
	file_event_logging_v4_location_complex_type_proto_rawDesc = nil
	file_event_logging_v4_location_complex_type_proto_goTypes = nil
	file_event_logging_v4_location_complex_type_proto_depIdxs = nil
}
