// event_logging/v4/alert_complex_type.proto at 0:0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: event_logging/v4/alert_complex_type.proto

package event_loggingv4

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Type that describes and alert of some kind, e.g. an alert generated by an intrusion detection system, malware scanner, virus scanner, etc.
type AlertComplexType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of alert that has been fired, e.g. Error, Malware, etc.
	Type AlertTypeSimpleType `protobuf:"varint,1,opt,name=type,proto3,enum=event_logging.v4.AlertTypeSimpleType" json:"type,omitempty"`
	// The severity of the alert.
	Severity AlertSeveritySimpleType `protobuf:"varint,2,opt,name=severity,proto3,enum=event_logging.v4.AlertSeveritySimpleType" json:"severity,omitempty"`
	// The priority of the alert.
	Priority AlertPrioritySimpleType `protobuf:"varint,3,opt,name=priority,proto3,enum=event_logging.v4.AlertPrioritySimpleType" json:"priority,omitempty"`
	// The name of the event or rule that fired or vulnerability or malware that has been scanned for or found.
	Subject string `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	// The descriptive message for the alert.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Information about an IDS generated event.
	IDS *AlertComplexType_IDSType `protobuf:"bytes,6,opt,name=i_d_s,json=iDS,proto3" json:"i_d_s,omitempty"`
	// Type that describes a threat identified by an anti-malware scanner.
	Malware *AntiMalwareThreatComplexType `protobuf:"bytes,7,opt,name=malware,proto3" json:"malware,omitempty"`
	// A type to describe part of a computer network or some activity on a network.
	Network *NetworkComplexType `protobuf:"bytes,8,opt,name=network,proto3" json:"network,omitempty"`
	// Any events to do with monitoring the status of files should use this element.
	Change *AlertComplexType_ChangeType `protobuf:"bytes,9,opt,name=change,proto3" json:"change,omitempty"`
	// Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
	Data []*DataComplexType `protobuf:"bytes,10,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AlertComplexType) Reset() {
	*x = AlertComplexType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_logging_v4_alert_complex_type_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertComplexType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertComplexType) ProtoMessage() {}

func (x *AlertComplexType) ProtoReflect() protoreflect.Message {
	mi := &file_event_logging_v4_alert_complex_type_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertComplexType.ProtoReflect.Descriptor instead.
func (*AlertComplexType) Descriptor() ([]byte, []int) {
	return file_event_logging_v4_alert_complex_type_proto_rawDescGZIP(), []int{0}
}

func (x *AlertComplexType) GetType() AlertTypeSimpleType {
	if x != nil {
		return x.Type
	}
	return AlertTypeSimpleType_ALERT_TYPE_SIMPLE_TYPE_UNSPECIFIED
}

func (x *AlertComplexType) GetSeverity() AlertSeveritySimpleType {
	if x != nil {
		return x.Severity
	}
	return AlertSeveritySimpleType_ALERT_SEVERITY_SIMPLE_TYPE_UNSPECIFIED
}

func (x *AlertComplexType) GetPriority() AlertPrioritySimpleType {
	if x != nil {
		return x.Priority
	}
	return AlertPrioritySimpleType_ALERT_PRIORITY_SIMPLE_TYPE_UNSPECIFIED
}

func (x *AlertComplexType) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *AlertComplexType) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AlertComplexType) GetIDS() *AlertComplexType_IDSType {
	if x != nil {
		return x.IDS
	}
	return nil
}

func (x *AlertComplexType) GetMalware() *AntiMalwareThreatComplexType {
	if x != nil {
		return x.Malware
	}
	return nil
}

func (x *AlertComplexType) GetNetwork() *NetworkComplexType {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *AlertComplexType) GetChange() *AlertComplexType_ChangeType {
	if x != nil {
		return x.Change
	}
	return nil
}

func (x *AlertComplexType) GetData() []*DataComplexType {
	if x != nil {
		return x.Data
	}
	return nil
}

// Information about an IDS generated event.
type AlertComplexType_IDSType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of IDS event or rule that fired.
	Rule string `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	// The source network device involved in the IDS event.
	Source *NetworkLocationComplexType `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	// The destination network device involved in the IDS event.
	Destination *NetworkLocationComplexType `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
	// Details about the payload being transmitted between the source and destination devices.
	Payload *MultiObjectComplexType `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *AlertComplexType_IDSType) Reset() {
	*x = AlertComplexType_IDSType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_logging_v4_alert_complex_type_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertComplexType_IDSType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertComplexType_IDSType) ProtoMessage() {}

func (x *AlertComplexType_IDSType) ProtoReflect() protoreflect.Message {
	mi := &file_event_logging_v4_alert_complex_type_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertComplexType_IDSType.ProtoReflect.Descriptor instead.
func (*AlertComplexType_IDSType) Descriptor() ([]byte, []int) {
	return file_event_logging_v4_alert_complex_type_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AlertComplexType_IDSType) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

func (x *AlertComplexType_IDSType) GetSource() *NetworkLocationComplexType {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *AlertComplexType_IDSType) GetDestination() *NetworkLocationComplexType {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *AlertComplexType_IDSType) GetPayload() *MultiObjectComplexType {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Information about an IDS generated event.
type AlertComplexType_ChangeType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The action performed by the file monitor, e.g. starting to scan files for changes, or the detection of a file change.
	Action ChangeActionSimpleType `protobuf:"varint,1,opt,name=action,proto3,enum=event_logging.v4.ChangeActionSimpleType" json:"action,omitempty"`
	// Describes the last known state of the file before it was altered.
	Before *MultiObjectComplexType `protobuf:"bytes,2,opt,name=before,proto3" json:"before,omitempty"`
	// Describes the new state of the file now it has changed.
	After *MultiObjectComplexType `protobuf:"bytes,3,opt,name=after,proto3" json:"after,omitempty"`
	// The file monitoring rule that was fired to generate this event.
	Rule string `protobuf:"bytes,4,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *AlertComplexType_ChangeType) Reset() {
	*x = AlertComplexType_ChangeType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_logging_v4_alert_complex_type_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertComplexType_ChangeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertComplexType_ChangeType) ProtoMessage() {}

func (x *AlertComplexType_ChangeType) ProtoReflect() protoreflect.Message {
	mi := &file_event_logging_v4_alert_complex_type_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertComplexType_ChangeType.ProtoReflect.Descriptor instead.
func (*AlertComplexType_ChangeType) Descriptor() ([]byte, []int) {
	return file_event_logging_v4_alert_complex_type_proto_rawDescGZIP(), []int{0, 1}
}

func (x *AlertComplexType_ChangeType) GetAction() ChangeActionSimpleType {
	if x != nil {
		return x.Action
	}
	return ChangeActionSimpleType_CHANGE_ACTION_SIMPLE_TYPE_UNSPECIFIED
}

func (x *AlertComplexType_ChangeType) GetBefore() *MultiObjectComplexType {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *AlertComplexType_ChangeType) GetAfter() *MultiObjectComplexType {
	if x != nil {
		return x.After
	}
	return nil
}

func (x *AlertComplexType_ChangeType) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

var File_event_logging_v4_alert_complex_type_proto protoreflect.FileDescriptor

var file_event_logging_v4_alert_complex_type_proto_rawDesc = []byte{
	0x0a, 0x29, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f,
	0x76, 0x34, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x1a, 0x31, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x34, 0x2f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x73,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x31, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f,
	0x76, 0x34, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69,
	0x6e, 0x67, 0x2f, 0x76, 0x34, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x37, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e,
	0x67, 0x2f, 0x76, 0x34, 0x2f, 0x61, 0x6e, 0x74, 0x69, 0x5f, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72,
	0x65, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x34, 0x2f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x34, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c,
	0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x34, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x34, 0x2f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f,
	0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x34, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x78, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75,
	0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xee, 0x08, 0x0a, 0x10, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x41,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x4f, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x65, 0x76, 0x65,
	0x72, 0x69, 0x74, 0x79, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08,
	0xba, 0x48, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x4f, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67,
	0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x08, 0xba, 0x48, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3e, 0x0a, 0x05, 0x69, 0x5f, 0x64, 0x5f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x34, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x79,
	0x70, 0x65, 0x2e, 0x49, 0x44, 0x53, 0x54, 0x79, 0x70, 0x65, 0x52, 0x03, 0x69, 0x44, 0x53, 0x12,
	0x48, 0x0a, 0x07, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x34, 0x2e, 0x41, 0x6e, 0x74, 0x69, 0x4d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x54,
	0x68, 0x72, 0x65, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x07, 0x6d, 0x61, 0x6c, 0x77, 0x61, 0x72, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x45, 0x0a, 0x06, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x34, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x08, 0xba, 0x48, 0x05, 0x92, 0x01, 0x02, 0x08, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0xf7, 0x01, 0x0a, 0x07, 0x49, 0x44, 0x53, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x75, 0x6c,
	0x65, 0x12, 0x44, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x34, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0xec, 0x01, 0x0a, 0x0a,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67,
	0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06,
	0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f,
	0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x42, 0xd9, 0x01, 0x0a, 0x1c, 0x75,
	0x6b, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x67, 0x63, 0x68, 0x71, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x34, 0x42, 0x15, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x67, 0x63, 0x68, 0x71, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2d, 0x6c, 0x6f, 0x67, 0x67,
	0x69, 0x6e, 0x67, 0x2d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x34, 0x3b, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x76, 0x34, 0xa2, 0x02, 0x03, 0x45, 0x58,
	0x58, 0xaa, 0x02, 0x0f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x2e, 0x56, 0x34, 0xca, 0x02, 0x0f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x67, 0x69,
	0x6e, 0x67, 0x5c, 0x56, 0x34, 0xe2, 0x02, 0x1b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67,
	0x67, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x34, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x67, 0x69,
	0x6e, 0x67, 0x3a, 0x3a, 0x56, 0x34, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_event_logging_v4_alert_complex_type_proto_rawDescOnce sync.Once
	file_event_logging_v4_alert_complex_type_proto_rawDescData = file_event_logging_v4_alert_complex_type_proto_rawDesc
)

func file_event_logging_v4_alert_complex_type_proto_rawDescGZIP() []byte {
	file_event_logging_v4_alert_complex_type_proto_rawDescOnce.Do(func() {
		file_event_logging_v4_alert_complex_type_proto_rawDescData = protoimpl.X.CompressGZIP(file_event_logging_v4_alert_complex_type_proto_rawDescData)
	})
	return file_event_logging_v4_alert_complex_type_proto_rawDescData
}

var file_event_logging_v4_alert_complex_type_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_event_logging_v4_alert_complex_type_proto_goTypes = []interface{}{
	(*AlertComplexType)(nil),             // 0: event_logging.v4.AlertComplexType
	(*AlertComplexType_IDSType)(nil),     // 1: event_logging.v4.AlertComplexType.IDSType
	(*AlertComplexType_ChangeType)(nil),  // 2: event_logging.v4.AlertComplexType.ChangeType
	(AlertTypeSimpleType)(0),             // 3: event_logging.v4.AlertTypeSimpleType
	(AlertSeveritySimpleType)(0),         // 4: event_logging.v4.AlertSeveritySimpleType
	(AlertPrioritySimpleType)(0),         // 5: event_logging.v4.AlertPrioritySimpleType
	(*AntiMalwareThreatComplexType)(nil), // 6: event_logging.v4.AntiMalwareThreatComplexType
	(*NetworkComplexType)(nil),           // 7: event_logging.v4.NetworkComplexType
	(*DataComplexType)(nil),              // 8: event_logging.v4.DataComplexType
	(*NetworkLocationComplexType)(nil),   // 9: event_logging.v4.NetworkLocationComplexType
	(*MultiObjectComplexType)(nil),       // 10: event_logging.v4.MultiObjectComplexType
	(ChangeActionSimpleType)(0),          // 11: event_logging.v4.ChangeActionSimpleType
}
var file_event_logging_v4_alert_complex_type_proto_depIdxs = []int32{
	3,  // 0: event_logging.v4.AlertComplexType.type:type_name -> event_logging.v4.AlertTypeSimpleType
	4,  // 1: event_logging.v4.AlertComplexType.severity:type_name -> event_logging.v4.AlertSeveritySimpleType
	5,  // 2: event_logging.v4.AlertComplexType.priority:type_name -> event_logging.v4.AlertPrioritySimpleType
	1,  // 3: event_logging.v4.AlertComplexType.i_d_s:type_name -> event_logging.v4.AlertComplexType.IDSType
	6,  // 4: event_logging.v4.AlertComplexType.malware:type_name -> event_logging.v4.AntiMalwareThreatComplexType
	7,  // 5: event_logging.v4.AlertComplexType.network:type_name -> event_logging.v4.NetworkComplexType
	2,  // 6: event_logging.v4.AlertComplexType.change:type_name -> event_logging.v4.AlertComplexType.ChangeType
	8,  // 7: event_logging.v4.AlertComplexType.data:type_name -> event_logging.v4.DataComplexType
	9,  // 8: event_logging.v4.AlertComplexType.IDSType.source:type_name -> event_logging.v4.NetworkLocationComplexType
	9,  // 9: event_logging.v4.AlertComplexType.IDSType.destination:type_name -> event_logging.v4.NetworkLocationComplexType
	10, // 10: event_logging.v4.AlertComplexType.IDSType.payload:type_name -> event_logging.v4.MultiObjectComplexType
	11, // 11: event_logging.v4.AlertComplexType.ChangeType.action:type_name -> event_logging.v4.ChangeActionSimpleType
	10, // 12: event_logging.v4.AlertComplexType.ChangeType.before:type_name -> event_logging.v4.MultiObjectComplexType
	10, // 13: event_logging.v4.AlertComplexType.ChangeType.after:type_name -> event_logging.v4.MultiObjectComplexType
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_event_logging_v4_alert_complex_type_proto_init() }
func file_event_logging_v4_alert_complex_type_proto_init() {
	if File_event_logging_v4_alert_complex_type_proto != nil {
		return
	}
	file_event_logging_v4_alert_priority_simple_type_proto_init()
	file_event_logging_v4_alert_severity_simple_type_proto_init()
	file_event_logging_v4_alert_type_simple_type_proto_init()
	file_event_logging_v4_anti_malware_threat_complex_type_proto_init()
	file_event_logging_v4_change_action_simple_type_proto_init()
	file_event_logging_v4_data_complex_type_proto_init()
	file_event_logging_v4_multi_object_complex_type_proto_init()
	file_event_logging_v4_network_complex_type_proto_init()
	file_event_logging_v4_network_location_complex_type_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_event_logging_v4_alert_complex_type_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertComplexType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_logging_v4_alert_complex_type_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertComplexType_IDSType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_logging_v4_alert_complex_type_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertComplexType_ChangeType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_event_logging_v4_alert_complex_type_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_event_logging_v4_alert_complex_type_proto_goTypes,
		DependencyIndexes: file_event_logging_v4_alert_complex_type_proto_depIdxs,
		MessageInfos:      file_event_logging_v4_alert_complex_type_proto_msgTypes,
	}.Build()
	File_event_logging_v4_alert_complex_type_proto = out.File
	file_event_logging_v4_alert_complex_type_proto_rawDesc = nil
	file_event_logging_v4_alert_complex_type_proto_goTypes = nil
	file_event_logging_v4_alert_complex_type_proto_depIdxs = nil
}
