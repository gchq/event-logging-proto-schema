// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event_logging/v4/network_event_action_complex_type.proto

// Protobuf Java Version: 4.26.1
package uk.gov.gchq.event_logging.v4;

/**
 * <pre>
 * Describes an event involving some form of activity on a computer network.
 * </pre>
 *
 * Protobuf type {@code event_logging.v4.NetworkEventActionComplexType}
 */
public final class NetworkEventActionComplexType extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:event_logging.v4.NetworkEventActionComplexType)
    NetworkEventActionComplexTypeOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      NetworkEventActionComplexType.class.getName());
  }
  // Use NetworkEventActionComplexType.newBuilder() to construct.
  private NetworkEventActionComplexType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private NetworkEventActionComplexType() {
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return uk.gov.gchq.event_logging.v4.NetworkEventActionComplexTypeProto.internal_static_event_logging_v4_NetworkEventActionComplexType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return uk.gov.gchq.event_logging.v4.NetworkEventActionComplexTypeProto.internal_static_event_logging_v4_NetworkEventActionComplexType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType.class, uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType.Builder.class);
  }

  private int bitField0_;
  public static final int BIND_FIELD_NUMBER = 1;
  private uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType bind_;
  /**
   * <pre>
   * The action of a server binding a network socket to a port and IP address.
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType bind = 1 [json_name = "bind", (.buf.validate.field) = { ... }</code>
   * @return Whether the bind field is set.
   */
  @java.lang.Override
  public boolean hasBind() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The action of a server binding a network socket to a port and IP address.
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType bind = 1 [json_name = "bind", (.buf.validate.field) = { ... }</code>
   * @return The bind.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType getBind() {
    return bind_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : bind_;
  }
  /**
   * <pre>
   * The action of a server binding a network socket to a port and IP address.
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType bind = 1 [json_name = "bind", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder getBindOrBuilder() {
    return bind_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : bind_;
  }

  public static final int CONNECT_FIELD_NUMBER = 2;
  private uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType connect_;
  /**
   * <pre>
   * The action of a client system establishing a connection with a server.
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType connect = 2 [json_name = "connect", (.buf.validate.field) = { ... }</code>
   * @return Whether the connect field is set.
   */
  @java.lang.Override
  public boolean hasConnect() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The action of a client system establishing a connection with a server.
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType connect = 2 [json_name = "connect", (.buf.validate.field) = { ... }</code>
   * @return The connect.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType getConnect() {
    return connect_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : connect_;
  }
  /**
   * <pre>
   * The action of a client system establishing a connection with a server.
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType connect = 2 [json_name = "connect", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder getConnectOrBuilder() {
    return connect_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : connect_;
  }

  public static final int OPEN_FIELD_NUMBER = 3;
  private uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType open_;
  /**
   * <pre>
   * The action of opening an unnamed socket that is bound to an address.
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType open = 3 [json_name = "open", (.buf.validate.field) = { ... }</code>
   * @return Whether the open field is set.
   */
  @java.lang.Override
  public boolean hasOpen() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * The action of opening an unnamed socket that is bound to an address.
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType open = 3 [json_name = "open", (.buf.validate.field) = { ... }</code>
   * @return The open.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType getOpen() {
    return open_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : open_;
  }
  /**
   * <pre>
   * The action of opening an unnamed socket that is bound to an address.
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType open = 3 [json_name = "open", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder getOpenOrBuilder() {
    return open_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : open_;
  }

  public static final int CLOSE_FIELD_NUMBER = 4;
  private uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType close_;
  /**
   * <pre>
   * The action of closing an open socket or connection.
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType close = 4 [json_name = "close", (.buf.validate.field) = { ... }</code>
   * @return Whether the close field is set.
   */
  @java.lang.Override
  public boolean hasClose() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * The action of closing an open socket or connection.
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType close = 4 [json_name = "close", (.buf.validate.field) = { ... }</code>
   * @return The close.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType getClose() {
    return close_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : close_;
  }
  /**
   * <pre>
   * The action of closing an open socket or connection.
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType close = 4 [json_name = "close", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder getCloseOrBuilder() {
    return close_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : close_;
  }

  public static final int SEND_FIELD_NUMBER = 5;
  private uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType send_;
  /**
   * <pre>
   * The action of sending data on a socket.
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType send = 5 [json_name = "send", (.buf.validate.field) = { ... }</code>
   * @return Whether the send field is set.
   */
  @java.lang.Override
  public boolean hasSend() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * The action of sending data on a socket.
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType send = 5 [json_name = "send", (.buf.validate.field) = { ... }</code>
   * @return The send.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType getSend() {
    return send_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : send_;
  }
  /**
   * <pre>
   * The action of sending data on a socket.
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType send = 5 [json_name = "send", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder getSendOrBuilder() {
    return send_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : send_;
  }

  public static final int RECEIVE_FIELD_NUMBER = 6;
  private uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType receive_;
  /**
   * <pre>
   * The action of receiving data on a socket.
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType receive = 6 [json_name = "receive", (.buf.validate.field) = { ... }</code>
   * @return Whether the receive field is set.
   */
  @java.lang.Override
  public boolean hasReceive() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * The action of receiving data on a socket.
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType receive = 6 [json_name = "receive", (.buf.validate.field) = { ... }</code>
   * @return The receive.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType getReceive() {
    return receive_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : receive_;
  }
  /**
   * <pre>
   * The action of receiving data on a socket.
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType receive = 6 [json_name = "receive", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder getReceiveOrBuilder() {
    return receive_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : receive_;
  }

  public static final int LISTEN_FIELD_NUMBER = 7;
  private uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType listen_;
  /**
   * <pre>
   * The action of making a socket listen for connections.
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType listen = 7 [json_name = "listen", (.buf.validate.field) = { ... }</code>
   * @return Whether the listen field is set.
   */
  @java.lang.Override
  public boolean hasListen() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * The action of making a socket listen for connections.
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType listen = 7 [json_name = "listen", (.buf.validate.field) = { ... }</code>
   * @return The listen.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType getListen() {
    return listen_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : listen_;
  }
  /**
   * <pre>
   * The action of making a socket listen for connections.
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType listen = 7 [json_name = "listen", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder getListenOrBuilder() {
    return listen_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : listen_;
  }

  public static final int PERMIT_FIELD_NUMBER = 8;
  private uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType permit_;
  /**
   * <pre>
   * The action of network traffic being permitted by an Access Control List (ACL).
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType permit = 8 [json_name = "permit", (.buf.validate.field) = { ... }</code>
   * @return Whether the permit field is set.
   */
  @java.lang.Override
  public boolean hasPermit() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <pre>
   * The action of network traffic being permitted by an Access Control List (ACL).
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType permit = 8 [json_name = "permit", (.buf.validate.field) = { ... }</code>
   * @return The permit.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType getPermit() {
    return permit_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : permit_;
  }
  /**
   * <pre>
   * The action of network traffic being permitted by an Access Control List (ACL).
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType permit = 8 [json_name = "permit", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder getPermitOrBuilder() {
    return permit_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : permit_;
  }

  public static final int DENY_FIELD_NUMBER = 9;
  private uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType deny_;
  /**
   * <pre>
   * The action of network traffic being denied by an Access Control List (ACL).
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType deny = 9 [json_name = "deny", (.buf.validate.field) = { ... }</code>
   * @return Whether the deny field is set.
   */
  @java.lang.Override
  public boolean hasDeny() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <pre>
   * The action of network traffic being denied by an Access Control List (ACL).
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType deny = 9 [json_name = "deny", (.buf.validate.field) = { ... }</code>
   * @return The deny.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType getDeny() {
    return deny_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : deny_;
  }
  /**
   * <pre>
   * The action of network traffic being denied by an Access Control List (ACL).
   * </pre>
   *
   * <code>.event_logging.v4.NetworkOutcomeComplexType deny = 9 [json_name = "deny", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder getDenyOrBuilder() {
    return deny_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : deny_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getBind());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(2, getConnect());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(3, getOpen());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeMessage(4, getClose());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeMessage(5, getSend());
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeMessage(6, getReceive());
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeMessage(7, getListen());
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      output.writeMessage(8, getPermit());
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      output.writeMessage(9, getDeny());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getBind());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getConnect());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getOpen());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getClose());
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getSend());
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getReceive());
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getListen());
    }
    if (((bitField0_ & 0x00000080) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getPermit());
    }
    if (((bitField0_ & 0x00000100) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getDeny());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType)) {
      return super.equals(obj);
    }
    uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType other = (uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType) obj;

    if (hasBind() != other.hasBind()) return false;
    if (hasBind()) {
      if (!getBind()
          .equals(other.getBind())) return false;
    }
    if (hasConnect() != other.hasConnect()) return false;
    if (hasConnect()) {
      if (!getConnect()
          .equals(other.getConnect())) return false;
    }
    if (hasOpen() != other.hasOpen()) return false;
    if (hasOpen()) {
      if (!getOpen()
          .equals(other.getOpen())) return false;
    }
    if (hasClose() != other.hasClose()) return false;
    if (hasClose()) {
      if (!getClose()
          .equals(other.getClose())) return false;
    }
    if (hasSend() != other.hasSend()) return false;
    if (hasSend()) {
      if (!getSend()
          .equals(other.getSend())) return false;
    }
    if (hasReceive() != other.hasReceive()) return false;
    if (hasReceive()) {
      if (!getReceive()
          .equals(other.getReceive())) return false;
    }
    if (hasListen() != other.hasListen()) return false;
    if (hasListen()) {
      if (!getListen()
          .equals(other.getListen())) return false;
    }
    if (hasPermit() != other.hasPermit()) return false;
    if (hasPermit()) {
      if (!getPermit()
          .equals(other.getPermit())) return false;
    }
    if (hasDeny() != other.hasDeny()) return false;
    if (hasDeny()) {
      if (!getDeny()
          .equals(other.getDeny())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasBind()) {
      hash = (37 * hash) + BIND_FIELD_NUMBER;
      hash = (53 * hash) + getBind().hashCode();
    }
    if (hasConnect()) {
      hash = (37 * hash) + CONNECT_FIELD_NUMBER;
      hash = (53 * hash) + getConnect().hashCode();
    }
    if (hasOpen()) {
      hash = (37 * hash) + OPEN_FIELD_NUMBER;
      hash = (53 * hash) + getOpen().hashCode();
    }
    if (hasClose()) {
      hash = (37 * hash) + CLOSE_FIELD_NUMBER;
      hash = (53 * hash) + getClose().hashCode();
    }
    if (hasSend()) {
      hash = (37 * hash) + SEND_FIELD_NUMBER;
      hash = (53 * hash) + getSend().hashCode();
    }
    if (hasReceive()) {
      hash = (37 * hash) + RECEIVE_FIELD_NUMBER;
      hash = (53 * hash) + getReceive().hashCode();
    }
    if (hasListen()) {
      hash = (37 * hash) + LISTEN_FIELD_NUMBER;
      hash = (53 * hash) + getListen().hashCode();
    }
    if (hasPermit()) {
      hash = (37 * hash) + PERMIT_FIELD_NUMBER;
      hash = (53 * hash) + getPermit().hashCode();
    }
    if (hasDeny()) {
      hash = (37 * hash) + DENY_FIELD_NUMBER;
      hash = (53 * hash) + getDeny().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Describes an event involving some form of activity on a computer network.
   * </pre>
   *
   * Protobuf type {@code event_logging.v4.NetworkEventActionComplexType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:event_logging.v4.NetworkEventActionComplexType)
      uk.gov.gchq.event_logging.v4.NetworkEventActionComplexTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.gov.gchq.event_logging.v4.NetworkEventActionComplexTypeProto.internal_static_event_logging_v4_NetworkEventActionComplexType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.gov.gchq.event_logging.v4.NetworkEventActionComplexTypeProto.internal_static_event_logging_v4_NetworkEventActionComplexType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType.class, uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType.Builder.class);
    }

    // Construct using uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getBindFieldBuilder();
        getConnectFieldBuilder();
        getOpenFieldBuilder();
        getCloseFieldBuilder();
        getSendFieldBuilder();
        getReceiveFieldBuilder();
        getListenFieldBuilder();
        getPermitFieldBuilder();
        getDenyFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      bind_ = null;
      if (bindBuilder_ != null) {
        bindBuilder_.dispose();
        bindBuilder_ = null;
      }
      connect_ = null;
      if (connectBuilder_ != null) {
        connectBuilder_.dispose();
        connectBuilder_ = null;
      }
      open_ = null;
      if (openBuilder_ != null) {
        openBuilder_.dispose();
        openBuilder_ = null;
      }
      close_ = null;
      if (closeBuilder_ != null) {
        closeBuilder_.dispose();
        closeBuilder_ = null;
      }
      send_ = null;
      if (sendBuilder_ != null) {
        sendBuilder_.dispose();
        sendBuilder_ = null;
      }
      receive_ = null;
      if (receiveBuilder_ != null) {
        receiveBuilder_.dispose();
        receiveBuilder_ = null;
      }
      listen_ = null;
      if (listenBuilder_ != null) {
        listenBuilder_.dispose();
        listenBuilder_ = null;
      }
      permit_ = null;
      if (permitBuilder_ != null) {
        permitBuilder_.dispose();
        permitBuilder_ = null;
      }
      deny_ = null;
      if (denyBuilder_ != null) {
        denyBuilder_.dispose();
        denyBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return uk.gov.gchq.event_logging.v4.NetworkEventActionComplexTypeProto.internal_static_event_logging_v4_NetworkEventActionComplexType_descriptor;
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType getDefaultInstanceForType() {
      return uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType.getDefaultInstance();
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType build() {
      uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType buildPartial() {
      uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType result = new uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.bind_ = bindBuilder_ == null
            ? bind_
            : bindBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.connect_ = connectBuilder_ == null
            ? connect_
            : connectBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.open_ = openBuilder_ == null
            ? open_
            : openBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.close_ = closeBuilder_ == null
            ? close_
            : closeBuilder_.build();
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.send_ = sendBuilder_ == null
            ? send_
            : sendBuilder_.build();
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.receive_ = receiveBuilder_ == null
            ? receive_
            : receiveBuilder_.build();
        to_bitField0_ |= 0x00000020;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.listen_ = listenBuilder_ == null
            ? listen_
            : listenBuilder_.build();
        to_bitField0_ |= 0x00000040;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.permit_ = permitBuilder_ == null
            ? permit_
            : permitBuilder_.build();
        to_bitField0_ |= 0x00000080;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.deny_ = denyBuilder_ == null
            ? deny_
            : denyBuilder_.build();
        to_bitField0_ |= 0x00000100;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType) {
        return mergeFrom((uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType other) {
      if (other == uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType.getDefaultInstance()) return this;
      if (other.hasBind()) {
        mergeBind(other.getBind());
      }
      if (other.hasConnect()) {
        mergeConnect(other.getConnect());
      }
      if (other.hasOpen()) {
        mergeOpen(other.getOpen());
      }
      if (other.hasClose()) {
        mergeClose(other.getClose());
      }
      if (other.hasSend()) {
        mergeSend(other.getSend());
      }
      if (other.hasReceive()) {
        mergeReceive(other.getReceive());
      }
      if (other.hasListen()) {
        mergeListen(other.getListen());
      }
      if (other.hasPermit()) {
        mergePermit(other.getPermit());
      }
      if (other.hasDeny()) {
        mergeDeny(other.getDeny());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getBindFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getConnectFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getOpenFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getCloseFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getSendFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getReceiveFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 58: {
              input.readMessage(
                  getListenFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000040;
              break;
            } // case 58
            case 66: {
              input.readMessage(
                  getPermitFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000080;
              break;
            } // case 66
            case 74: {
              input.readMessage(
                  getDenyFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000100;
              break;
            } // case 74
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType bind_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder> bindBuilder_;
    /**
     * <pre>
     * The action of a server binding a network socket to a port and IP address.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType bind = 1 [json_name = "bind", (.buf.validate.field) = { ... }</code>
     * @return Whether the bind field is set.
     */
    public boolean hasBind() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The action of a server binding a network socket to a port and IP address.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType bind = 1 [json_name = "bind", (.buf.validate.field) = { ... }</code>
     * @return The bind.
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType getBind() {
      if (bindBuilder_ == null) {
        return bind_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : bind_;
      } else {
        return bindBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The action of a server binding a network socket to a port and IP address.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType bind = 1 [json_name = "bind", (.buf.validate.field) = { ... }</code>
     */
    public Builder setBind(uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType value) {
      if (bindBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        bind_ = value;
      } else {
        bindBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of a server binding a network socket to a port and IP address.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType bind = 1 [json_name = "bind", (.buf.validate.field) = { ... }</code>
     */
    public Builder setBind(
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder builderForValue) {
      if (bindBuilder_ == null) {
        bind_ = builderForValue.build();
      } else {
        bindBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of a server binding a network socket to a port and IP address.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType bind = 1 [json_name = "bind", (.buf.validate.field) = { ... }</code>
     */
    public Builder mergeBind(uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType value) {
      if (bindBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          bind_ != null &&
          bind_ != uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance()) {
          getBindBuilder().mergeFrom(value);
        } else {
          bind_ = value;
        }
      } else {
        bindBuilder_.mergeFrom(value);
      }
      if (bind_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The action of a server binding a network socket to a port and IP address.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType bind = 1 [json_name = "bind", (.buf.validate.field) = { ... }</code>
     */
    public Builder clearBind() {
      bitField0_ = (bitField0_ & ~0x00000001);
      bind_ = null;
      if (bindBuilder_ != null) {
        bindBuilder_.dispose();
        bindBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of a server binding a network socket to a port and IP address.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType bind = 1 [json_name = "bind", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder getBindBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getBindFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The action of a server binding a network socket to a port and IP address.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType bind = 1 [json_name = "bind", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder getBindOrBuilder() {
      if (bindBuilder_ != null) {
        return bindBuilder_.getMessageOrBuilder();
      } else {
        return bind_ == null ?
            uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : bind_;
      }
    }
    /**
     * <pre>
     * The action of a server binding a network socket to a port and IP address.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType bind = 1 [json_name = "bind", (.buf.validate.field) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder> 
        getBindFieldBuilder() {
      if (bindBuilder_ == null) {
        bindBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder>(
                getBind(),
                getParentForChildren(),
                isClean());
        bind_ = null;
      }
      return bindBuilder_;
    }

    private uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType connect_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder> connectBuilder_;
    /**
     * <pre>
     * The action of a client system establishing a connection with a server.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType connect = 2 [json_name = "connect", (.buf.validate.field) = { ... }</code>
     * @return Whether the connect field is set.
     */
    public boolean hasConnect() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The action of a client system establishing a connection with a server.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType connect = 2 [json_name = "connect", (.buf.validate.field) = { ... }</code>
     * @return The connect.
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType getConnect() {
      if (connectBuilder_ == null) {
        return connect_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : connect_;
      } else {
        return connectBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The action of a client system establishing a connection with a server.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType connect = 2 [json_name = "connect", (.buf.validate.field) = { ... }</code>
     */
    public Builder setConnect(uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType value) {
      if (connectBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        connect_ = value;
      } else {
        connectBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of a client system establishing a connection with a server.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType connect = 2 [json_name = "connect", (.buf.validate.field) = { ... }</code>
     */
    public Builder setConnect(
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder builderForValue) {
      if (connectBuilder_ == null) {
        connect_ = builderForValue.build();
      } else {
        connectBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of a client system establishing a connection with a server.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType connect = 2 [json_name = "connect", (.buf.validate.field) = { ... }</code>
     */
    public Builder mergeConnect(uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType value) {
      if (connectBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          connect_ != null &&
          connect_ != uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance()) {
          getConnectBuilder().mergeFrom(value);
        } else {
          connect_ = value;
        }
      } else {
        connectBuilder_.mergeFrom(value);
      }
      if (connect_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The action of a client system establishing a connection with a server.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType connect = 2 [json_name = "connect", (.buf.validate.field) = { ... }</code>
     */
    public Builder clearConnect() {
      bitField0_ = (bitField0_ & ~0x00000002);
      connect_ = null;
      if (connectBuilder_ != null) {
        connectBuilder_.dispose();
        connectBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of a client system establishing a connection with a server.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType connect = 2 [json_name = "connect", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder getConnectBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getConnectFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The action of a client system establishing a connection with a server.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType connect = 2 [json_name = "connect", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder getConnectOrBuilder() {
      if (connectBuilder_ != null) {
        return connectBuilder_.getMessageOrBuilder();
      } else {
        return connect_ == null ?
            uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : connect_;
      }
    }
    /**
     * <pre>
     * The action of a client system establishing a connection with a server.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType connect = 2 [json_name = "connect", (.buf.validate.field) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder> 
        getConnectFieldBuilder() {
      if (connectBuilder_ == null) {
        connectBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder>(
                getConnect(),
                getParentForChildren(),
                isClean());
        connect_ = null;
      }
      return connectBuilder_;
    }

    private uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType open_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder> openBuilder_;
    /**
     * <pre>
     * The action of opening an unnamed socket that is bound to an address.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType open = 3 [json_name = "open", (.buf.validate.field) = { ... }</code>
     * @return Whether the open field is set.
     */
    public boolean hasOpen() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The action of opening an unnamed socket that is bound to an address.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType open = 3 [json_name = "open", (.buf.validate.field) = { ... }</code>
     * @return The open.
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType getOpen() {
      if (openBuilder_ == null) {
        return open_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : open_;
      } else {
        return openBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The action of opening an unnamed socket that is bound to an address.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType open = 3 [json_name = "open", (.buf.validate.field) = { ... }</code>
     */
    public Builder setOpen(uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType value) {
      if (openBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        open_ = value;
      } else {
        openBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of opening an unnamed socket that is bound to an address.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType open = 3 [json_name = "open", (.buf.validate.field) = { ... }</code>
     */
    public Builder setOpen(
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder builderForValue) {
      if (openBuilder_ == null) {
        open_ = builderForValue.build();
      } else {
        openBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of opening an unnamed socket that is bound to an address.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType open = 3 [json_name = "open", (.buf.validate.field) = { ... }</code>
     */
    public Builder mergeOpen(uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType value) {
      if (openBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          open_ != null &&
          open_ != uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance()) {
          getOpenBuilder().mergeFrom(value);
        } else {
          open_ = value;
        }
      } else {
        openBuilder_.mergeFrom(value);
      }
      if (open_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The action of opening an unnamed socket that is bound to an address.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType open = 3 [json_name = "open", (.buf.validate.field) = { ... }</code>
     */
    public Builder clearOpen() {
      bitField0_ = (bitField0_ & ~0x00000004);
      open_ = null;
      if (openBuilder_ != null) {
        openBuilder_.dispose();
        openBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of opening an unnamed socket that is bound to an address.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType open = 3 [json_name = "open", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder getOpenBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getOpenFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The action of opening an unnamed socket that is bound to an address.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType open = 3 [json_name = "open", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder getOpenOrBuilder() {
      if (openBuilder_ != null) {
        return openBuilder_.getMessageOrBuilder();
      } else {
        return open_ == null ?
            uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : open_;
      }
    }
    /**
     * <pre>
     * The action of opening an unnamed socket that is bound to an address.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType open = 3 [json_name = "open", (.buf.validate.field) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder> 
        getOpenFieldBuilder() {
      if (openBuilder_ == null) {
        openBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder>(
                getOpen(),
                getParentForChildren(),
                isClean());
        open_ = null;
      }
      return openBuilder_;
    }

    private uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType close_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder> closeBuilder_;
    /**
     * <pre>
     * The action of closing an open socket or connection.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType close = 4 [json_name = "close", (.buf.validate.field) = { ... }</code>
     * @return Whether the close field is set.
     */
    public boolean hasClose() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The action of closing an open socket or connection.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType close = 4 [json_name = "close", (.buf.validate.field) = { ... }</code>
     * @return The close.
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType getClose() {
      if (closeBuilder_ == null) {
        return close_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : close_;
      } else {
        return closeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The action of closing an open socket or connection.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType close = 4 [json_name = "close", (.buf.validate.field) = { ... }</code>
     */
    public Builder setClose(uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType value) {
      if (closeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        close_ = value;
      } else {
        closeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of closing an open socket or connection.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType close = 4 [json_name = "close", (.buf.validate.field) = { ... }</code>
     */
    public Builder setClose(
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder builderForValue) {
      if (closeBuilder_ == null) {
        close_ = builderForValue.build();
      } else {
        closeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of closing an open socket or connection.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType close = 4 [json_name = "close", (.buf.validate.field) = { ... }</code>
     */
    public Builder mergeClose(uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType value) {
      if (closeBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          close_ != null &&
          close_ != uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance()) {
          getCloseBuilder().mergeFrom(value);
        } else {
          close_ = value;
        }
      } else {
        closeBuilder_.mergeFrom(value);
      }
      if (close_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The action of closing an open socket or connection.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType close = 4 [json_name = "close", (.buf.validate.field) = { ... }</code>
     */
    public Builder clearClose() {
      bitField0_ = (bitField0_ & ~0x00000008);
      close_ = null;
      if (closeBuilder_ != null) {
        closeBuilder_.dispose();
        closeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of closing an open socket or connection.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType close = 4 [json_name = "close", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder getCloseBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getCloseFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The action of closing an open socket or connection.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType close = 4 [json_name = "close", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder getCloseOrBuilder() {
      if (closeBuilder_ != null) {
        return closeBuilder_.getMessageOrBuilder();
      } else {
        return close_ == null ?
            uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : close_;
      }
    }
    /**
     * <pre>
     * The action of closing an open socket or connection.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType close = 4 [json_name = "close", (.buf.validate.field) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder> 
        getCloseFieldBuilder() {
      if (closeBuilder_ == null) {
        closeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder>(
                getClose(),
                getParentForChildren(),
                isClean());
        close_ = null;
      }
      return closeBuilder_;
    }

    private uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType send_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder> sendBuilder_;
    /**
     * <pre>
     * The action of sending data on a socket.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType send = 5 [json_name = "send", (.buf.validate.field) = { ... }</code>
     * @return Whether the send field is set.
     */
    public boolean hasSend() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * The action of sending data on a socket.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType send = 5 [json_name = "send", (.buf.validate.field) = { ... }</code>
     * @return The send.
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType getSend() {
      if (sendBuilder_ == null) {
        return send_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : send_;
      } else {
        return sendBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The action of sending data on a socket.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType send = 5 [json_name = "send", (.buf.validate.field) = { ... }</code>
     */
    public Builder setSend(uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType value) {
      if (sendBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        send_ = value;
      } else {
        sendBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of sending data on a socket.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType send = 5 [json_name = "send", (.buf.validate.field) = { ... }</code>
     */
    public Builder setSend(
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder builderForValue) {
      if (sendBuilder_ == null) {
        send_ = builderForValue.build();
      } else {
        sendBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of sending data on a socket.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType send = 5 [json_name = "send", (.buf.validate.field) = { ... }</code>
     */
    public Builder mergeSend(uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType value) {
      if (sendBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          send_ != null &&
          send_ != uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance()) {
          getSendBuilder().mergeFrom(value);
        } else {
          send_ = value;
        }
      } else {
        sendBuilder_.mergeFrom(value);
      }
      if (send_ != null) {
        bitField0_ |= 0x00000010;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The action of sending data on a socket.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType send = 5 [json_name = "send", (.buf.validate.field) = { ... }</code>
     */
    public Builder clearSend() {
      bitField0_ = (bitField0_ & ~0x00000010);
      send_ = null;
      if (sendBuilder_ != null) {
        sendBuilder_.dispose();
        sendBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of sending data on a socket.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType send = 5 [json_name = "send", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder getSendBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getSendFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The action of sending data on a socket.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType send = 5 [json_name = "send", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder getSendOrBuilder() {
      if (sendBuilder_ != null) {
        return sendBuilder_.getMessageOrBuilder();
      } else {
        return send_ == null ?
            uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : send_;
      }
    }
    /**
     * <pre>
     * The action of sending data on a socket.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType send = 5 [json_name = "send", (.buf.validate.field) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder> 
        getSendFieldBuilder() {
      if (sendBuilder_ == null) {
        sendBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder>(
                getSend(),
                getParentForChildren(),
                isClean());
        send_ = null;
      }
      return sendBuilder_;
    }

    private uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType receive_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder> receiveBuilder_;
    /**
     * <pre>
     * The action of receiving data on a socket.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType receive = 6 [json_name = "receive", (.buf.validate.field) = { ... }</code>
     * @return Whether the receive field is set.
     */
    public boolean hasReceive() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * The action of receiving data on a socket.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType receive = 6 [json_name = "receive", (.buf.validate.field) = { ... }</code>
     * @return The receive.
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType getReceive() {
      if (receiveBuilder_ == null) {
        return receive_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : receive_;
      } else {
        return receiveBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The action of receiving data on a socket.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType receive = 6 [json_name = "receive", (.buf.validate.field) = { ... }</code>
     */
    public Builder setReceive(uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType value) {
      if (receiveBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        receive_ = value;
      } else {
        receiveBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of receiving data on a socket.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType receive = 6 [json_name = "receive", (.buf.validate.field) = { ... }</code>
     */
    public Builder setReceive(
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder builderForValue) {
      if (receiveBuilder_ == null) {
        receive_ = builderForValue.build();
      } else {
        receiveBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of receiving data on a socket.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType receive = 6 [json_name = "receive", (.buf.validate.field) = { ... }</code>
     */
    public Builder mergeReceive(uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType value) {
      if (receiveBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          receive_ != null &&
          receive_ != uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance()) {
          getReceiveBuilder().mergeFrom(value);
        } else {
          receive_ = value;
        }
      } else {
        receiveBuilder_.mergeFrom(value);
      }
      if (receive_ != null) {
        bitField0_ |= 0x00000020;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The action of receiving data on a socket.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType receive = 6 [json_name = "receive", (.buf.validate.field) = { ... }</code>
     */
    public Builder clearReceive() {
      bitField0_ = (bitField0_ & ~0x00000020);
      receive_ = null;
      if (receiveBuilder_ != null) {
        receiveBuilder_.dispose();
        receiveBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of receiving data on a socket.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType receive = 6 [json_name = "receive", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder getReceiveBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getReceiveFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The action of receiving data on a socket.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType receive = 6 [json_name = "receive", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder getReceiveOrBuilder() {
      if (receiveBuilder_ != null) {
        return receiveBuilder_.getMessageOrBuilder();
      } else {
        return receive_ == null ?
            uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : receive_;
      }
    }
    /**
     * <pre>
     * The action of receiving data on a socket.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType receive = 6 [json_name = "receive", (.buf.validate.field) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder> 
        getReceiveFieldBuilder() {
      if (receiveBuilder_ == null) {
        receiveBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder>(
                getReceive(),
                getParentForChildren(),
                isClean());
        receive_ = null;
      }
      return receiveBuilder_;
    }

    private uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType listen_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder> listenBuilder_;
    /**
     * <pre>
     * The action of making a socket listen for connections.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType listen = 7 [json_name = "listen", (.buf.validate.field) = { ... }</code>
     * @return Whether the listen field is set.
     */
    public boolean hasListen() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * The action of making a socket listen for connections.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType listen = 7 [json_name = "listen", (.buf.validate.field) = { ... }</code>
     * @return The listen.
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType getListen() {
      if (listenBuilder_ == null) {
        return listen_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : listen_;
      } else {
        return listenBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The action of making a socket listen for connections.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType listen = 7 [json_name = "listen", (.buf.validate.field) = { ... }</code>
     */
    public Builder setListen(uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType value) {
      if (listenBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        listen_ = value;
      } else {
        listenBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of making a socket listen for connections.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType listen = 7 [json_name = "listen", (.buf.validate.field) = { ... }</code>
     */
    public Builder setListen(
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder builderForValue) {
      if (listenBuilder_ == null) {
        listen_ = builderForValue.build();
      } else {
        listenBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of making a socket listen for connections.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType listen = 7 [json_name = "listen", (.buf.validate.field) = { ... }</code>
     */
    public Builder mergeListen(uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType value) {
      if (listenBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0) &&
          listen_ != null &&
          listen_ != uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance()) {
          getListenBuilder().mergeFrom(value);
        } else {
          listen_ = value;
        }
      } else {
        listenBuilder_.mergeFrom(value);
      }
      if (listen_ != null) {
        bitField0_ |= 0x00000040;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The action of making a socket listen for connections.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType listen = 7 [json_name = "listen", (.buf.validate.field) = { ... }</code>
     */
    public Builder clearListen() {
      bitField0_ = (bitField0_ & ~0x00000040);
      listen_ = null;
      if (listenBuilder_ != null) {
        listenBuilder_.dispose();
        listenBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of making a socket listen for connections.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType listen = 7 [json_name = "listen", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder getListenBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getListenFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The action of making a socket listen for connections.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType listen = 7 [json_name = "listen", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder getListenOrBuilder() {
      if (listenBuilder_ != null) {
        return listenBuilder_.getMessageOrBuilder();
      } else {
        return listen_ == null ?
            uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : listen_;
      }
    }
    /**
     * <pre>
     * The action of making a socket listen for connections.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType listen = 7 [json_name = "listen", (.buf.validate.field) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder> 
        getListenFieldBuilder() {
      if (listenBuilder_ == null) {
        listenBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder>(
                getListen(),
                getParentForChildren(),
                isClean());
        listen_ = null;
      }
      return listenBuilder_;
    }

    private uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType permit_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder> permitBuilder_;
    /**
     * <pre>
     * The action of network traffic being permitted by an Access Control List (ACL).
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType permit = 8 [json_name = "permit", (.buf.validate.field) = { ... }</code>
     * @return Whether the permit field is set.
     */
    public boolean hasPermit() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * The action of network traffic being permitted by an Access Control List (ACL).
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType permit = 8 [json_name = "permit", (.buf.validate.field) = { ... }</code>
     * @return The permit.
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType getPermit() {
      if (permitBuilder_ == null) {
        return permit_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : permit_;
      } else {
        return permitBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The action of network traffic being permitted by an Access Control List (ACL).
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType permit = 8 [json_name = "permit", (.buf.validate.field) = { ... }</code>
     */
    public Builder setPermit(uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType value) {
      if (permitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        permit_ = value;
      } else {
        permitBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of network traffic being permitted by an Access Control List (ACL).
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType permit = 8 [json_name = "permit", (.buf.validate.field) = { ... }</code>
     */
    public Builder setPermit(
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder builderForValue) {
      if (permitBuilder_ == null) {
        permit_ = builderForValue.build();
      } else {
        permitBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of network traffic being permitted by an Access Control List (ACL).
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType permit = 8 [json_name = "permit", (.buf.validate.field) = { ... }</code>
     */
    public Builder mergePermit(uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType value) {
      if (permitBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0) &&
          permit_ != null &&
          permit_ != uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance()) {
          getPermitBuilder().mergeFrom(value);
        } else {
          permit_ = value;
        }
      } else {
        permitBuilder_.mergeFrom(value);
      }
      if (permit_ != null) {
        bitField0_ |= 0x00000080;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The action of network traffic being permitted by an Access Control List (ACL).
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType permit = 8 [json_name = "permit", (.buf.validate.field) = { ... }</code>
     */
    public Builder clearPermit() {
      bitField0_ = (bitField0_ & ~0x00000080);
      permit_ = null;
      if (permitBuilder_ != null) {
        permitBuilder_.dispose();
        permitBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of network traffic being permitted by an Access Control List (ACL).
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType permit = 8 [json_name = "permit", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder getPermitBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getPermitFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The action of network traffic being permitted by an Access Control List (ACL).
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType permit = 8 [json_name = "permit", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder getPermitOrBuilder() {
      if (permitBuilder_ != null) {
        return permitBuilder_.getMessageOrBuilder();
      } else {
        return permit_ == null ?
            uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : permit_;
      }
    }
    /**
     * <pre>
     * The action of network traffic being permitted by an Access Control List (ACL).
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType permit = 8 [json_name = "permit", (.buf.validate.field) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder> 
        getPermitFieldBuilder() {
      if (permitBuilder_ == null) {
        permitBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder>(
                getPermit(),
                getParentForChildren(),
                isClean());
        permit_ = null;
      }
      return permitBuilder_;
    }

    private uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType deny_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder> denyBuilder_;
    /**
     * <pre>
     * The action of network traffic being denied by an Access Control List (ACL).
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType deny = 9 [json_name = "deny", (.buf.validate.field) = { ... }</code>
     * @return Whether the deny field is set.
     */
    public boolean hasDeny() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * The action of network traffic being denied by an Access Control List (ACL).
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType deny = 9 [json_name = "deny", (.buf.validate.field) = { ... }</code>
     * @return The deny.
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType getDeny() {
      if (denyBuilder_ == null) {
        return deny_ == null ? uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : deny_;
      } else {
        return denyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The action of network traffic being denied by an Access Control List (ACL).
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType deny = 9 [json_name = "deny", (.buf.validate.field) = { ... }</code>
     */
    public Builder setDeny(uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType value) {
      if (denyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        deny_ = value;
      } else {
        denyBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of network traffic being denied by an Access Control List (ACL).
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType deny = 9 [json_name = "deny", (.buf.validate.field) = { ... }</code>
     */
    public Builder setDeny(
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder builderForValue) {
      if (denyBuilder_ == null) {
        deny_ = builderForValue.build();
      } else {
        denyBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of network traffic being denied by an Access Control List (ACL).
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType deny = 9 [json_name = "deny", (.buf.validate.field) = { ... }</code>
     */
    public Builder mergeDeny(uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType value) {
      if (denyBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0) &&
          deny_ != null &&
          deny_ != uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance()) {
          getDenyBuilder().mergeFrom(value);
        } else {
          deny_ = value;
        }
      } else {
        denyBuilder_.mergeFrom(value);
      }
      if (deny_ != null) {
        bitField0_ |= 0x00000100;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The action of network traffic being denied by an Access Control List (ACL).
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType deny = 9 [json_name = "deny", (.buf.validate.field) = { ... }</code>
     */
    public Builder clearDeny() {
      bitField0_ = (bitField0_ & ~0x00000100);
      deny_ = null;
      if (denyBuilder_ != null) {
        denyBuilder_.dispose();
        denyBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action of network traffic being denied by an Access Control List (ACL).
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType deny = 9 [json_name = "deny", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder getDenyBuilder() {
      bitField0_ |= 0x00000100;
      onChanged();
      return getDenyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The action of network traffic being denied by an Access Control List (ACL).
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType deny = 9 [json_name = "deny", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder getDenyOrBuilder() {
      if (denyBuilder_ != null) {
        return denyBuilder_.getMessageOrBuilder();
      } else {
        return deny_ == null ?
            uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.getDefaultInstance() : deny_;
      }
    }
    /**
     * <pre>
     * The action of network traffic being denied by an Access Control List (ACL).
     * </pre>
     *
     * <code>.event_logging.v4.NetworkOutcomeComplexType deny = 9 [json_name = "deny", (.buf.validate.field) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder> 
        getDenyFieldBuilder() {
      if (denyBuilder_ == null) {
        denyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.NetworkOutcomeComplexTypeOrBuilder>(
                getDeny(),
                getParentForChildren(),
                isClean());
        deny_ = null;
      }
      return denyBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:event_logging.v4.NetworkEventActionComplexType)
  }

  // @@protoc_insertion_point(class_scope:event_logging.v4.NetworkEventActionComplexType)
  private static final uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType();
  }

  public static uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<NetworkEventActionComplexType>
      PARSER = new com.google.protobuf.AbstractParser<NetworkEventActionComplexType>() {
    @java.lang.Override
    public NetworkEventActionComplexType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<NetworkEventActionComplexType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<NetworkEventActionComplexType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.NetworkEventActionComplexType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

