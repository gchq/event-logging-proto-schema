// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event_logging/v4/approval_complex_type.proto

// Protobuf Java Version: 4.26.1
package uk.gov.gchq.event_logging.v4;

/**
 * <pre>
 * This type describes an approval (or rejection) event in a workflow, e.g a workflow where a more privileged user is required to approve the work of another user.
 * </pre>
 *
 * Protobuf type {@code event_logging.v4.ApprovalComplexType}
 */
public final class ApprovalComplexType extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:event_logging.v4.ApprovalComplexType)
    ApprovalComplexTypeOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      ApprovalComplexType.class.getName());
  }
  // Use ApprovalComplexType.newBuilder() to construct.
  private ApprovalComplexType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private ApprovalComplexType() {
    action_ = 0;
    id_ = "";
    reason_ = "";
    data_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return uk.gov.gchq.event_logging.v4.ApprovalComplexTypeProto.internal_static_event_logging_v4_ApprovalComplexType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return uk.gov.gchq.event_logging.v4.ApprovalComplexTypeProto.internal_static_event_logging_v4_ApprovalComplexType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            uk.gov.gchq.event_logging.v4.ApprovalComplexType.class, uk.gov.gchq.event_logging.v4.ApprovalComplexType.Builder.class);
  }

  public interface RequestorsTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_logging.v4.ApprovalComplexType.RequestorsType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
     */
    java.util.List<uk.gov.gchq.event_logging.v4.UserComplexType> 
        getRequestorList();
    /**
     * <pre>
     * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
     */
    uk.gov.gchq.event_logging.v4.UserComplexType getRequestor(int index);
    /**
     * <pre>
     * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
     */
    int getRequestorCount();
    /**
     * <pre>
     * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
     */
    java.util.List<? extends uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder> 
        getRequestorOrBuilderList();
    /**
     * <pre>
     * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
     */
    uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder getRequestorOrBuilder(
        int index);
  }
  /**
   * <pre>
   * The user(s) that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
   * </pre>
   *
   * Protobuf type {@code event_logging.v4.ApprovalComplexType.RequestorsType}
   */
  public static final class RequestorsType extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:event_logging.v4.ApprovalComplexType.RequestorsType)
      RequestorsTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        RequestorsType.class.getName());
    }
    // Use RequestorsType.newBuilder() to construct.
    private RequestorsType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private RequestorsType() {
      requestor_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.gov.gchq.event_logging.v4.ApprovalComplexTypeProto.internal_static_event_logging_v4_ApprovalComplexType_RequestorsType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.gov.gchq.event_logging.v4.ApprovalComplexTypeProto.internal_static_event_logging_v4_ApprovalComplexType_RequestorsType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType.class, uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType.Builder.class);
    }

    public static final int REQUESTOR_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<uk.gov.gchq.event_logging.v4.UserComplexType> requestor_;
    /**
     * <pre>
     * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<uk.gov.gchq.event_logging.v4.UserComplexType> getRequestorList() {
      return requestor_;
    }
    /**
     * <pre>
     * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<? extends uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder> 
        getRequestorOrBuilderList() {
      return requestor_;
    }
    /**
     * <pre>
     * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public int getRequestorCount() {
      return requestor_.size();
    }
    /**
     * <pre>
     * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.UserComplexType getRequestor(int index) {
      return requestor_.get(index);
    }
    /**
     * <pre>
     * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder getRequestorOrBuilder(
        int index) {
      return requestor_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < requestor_.size(); i++) {
        output.writeMessage(1, requestor_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < requestor_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, requestor_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType)) {
        return super.equals(obj);
      }
      uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType other = (uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType) obj;

      if (!getRequestorList()
          .equals(other.getRequestorList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRequestorCount() > 0) {
        hash = (37 * hash) + REQUESTOR_FIELD_NUMBER;
        hash = (53 * hash) + getRequestorList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The user(s) that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
     * </pre>
     *
     * Protobuf type {@code event_logging.v4.ApprovalComplexType.RequestorsType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_logging.v4.ApprovalComplexType.RequestorsType)
        uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return uk.gov.gchq.event_logging.v4.ApprovalComplexTypeProto.internal_static_event_logging_v4_ApprovalComplexType_RequestorsType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return uk.gov.gchq.event_logging.v4.ApprovalComplexTypeProto.internal_static_event_logging_v4_ApprovalComplexType_RequestorsType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType.class, uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType.Builder.class);
      }

      // Construct using uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (requestorBuilder_ == null) {
          requestor_ = java.util.Collections.emptyList();
        } else {
          requestor_ = null;
          requestorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return uk.gov.gchq.event_logging.v4.ApprovalComplexTypeProto.internal_static_event_logging_v4_ApprovalComplexType_RequestorsType_descriptor;
      }

      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType getDefaultInstanceForType() {
        return uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType.getDefaultInstance();
      }

      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType build() {
        uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType buildPartial() {
        uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType result = new uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType result) {
        if (requestorBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            requestor_ = java.util.Collections.unmodifiableList(requestor_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.requestor_ = requestor_;
        } else {
          result.requestor_ = requestorBuilder_.build();
        }
      }

      private void buildPartial0(uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType) {
          return mergeFrom((uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType other) {
        if (other == uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType.getDefaultInstance()) return this;
        if (requestorBuilder_ == null) {
          if (!other.requestor_.isEmpty()) {
            if (requestor_.isEmpty()) {
              requestor_ = other.requestor_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRequestorIsMutable();
              requestor_.addAll(other.requestor_);
            }
            onChanged();
          }
        } else {
          if (!other.requestor_.isEmpty()) {
            if (requestorBuilder_.isEmpty()) {
              requestorBuilder_.dispose();
              requestorBuilder_ = null;
              requestor_ = other.requestor_;
              bitField0_ = (bitField0_ & ~0x00000001);
              requestorBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRequestorFieldBuilder() : null;
            } else {
              requestorBuilder_.addAllMessages(other.requestor_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                uk.gov.gchq.event_logging.v4.UserComplexType m =
                    input.readMessage(
                        uk.gov.gchq.event_logging.v4.UserComplexType.parser(),
                        extensionRegistry);
                if (requestorBuilder_ == null) {
                  ensureRequestorIsMutable();
                  requestor_.add(m);
                } else {
                  requestorBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<uk.gov.gchq.event_logging.v4.UserComplexType> requestor_ =
        java.util.Collections.emptyList();
      private void ensureRequestorIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          requestor_ = new java.util.ArrayList<uk.gov.gchq.event_logging.v4.UserComplexType>(requestor_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          uk.gov.gchq.event_logging.v4.UserComplexType, uk.gov.gchq.event_logging.v4.UserComplexType.Builder, uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder> requestorBuilder_;

      /**
       * <pre>
       * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
       */
      public java.util.List<uk.gov.gchq.event_logging.v4.UserComplexType> getRequestorList() {
        if (requestorBuilder_ == null) {
          return java.util.Collections.unmodifiableList(requestor_);
        } else {
          return requestorBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
       */
      public int getRequestorCount() {
        if (requestorBuilder_ == null) {
          return requestor_.size();
        } else {
          return requestorBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
       */
      public uk.gov.gchq.event_logging.v4.UserComplexType getRequestor(int index) {
        if (requestorBuilder_ == null) {
          return requestor_.get(index);
        } else {
          return requestorBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
       */
      public Builder setRequestor(
          int index, uk.gov.gchq.event_logging.v4.UserComplexType value) {
        if (requestorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRequestorIsMutable();
          requestor_.set(index, value);
          onChanged();
        } else {
          requestorBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
       */
      public Builder setRequestor(
          int index, uk.gov.gchq.event_logging.v4.UserComplexType.Builder builderForValue) {
        if (requestorBuilder_ == null) {
          ensureRequestorIsMutable();
          requestor_.set(index, builderForValue.build());
          onChanged();
        } else {
          requestorBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
       */
      public Builder addRequestor(uk.gov.gchq.event_logging.v4.UserComplexType value) {
        if (requestorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRequestorIsMutable();
          requestor_.add(value);
          onChanged();
        } else {
          requestorBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
       */
      public Builder addRequestor(
          int index, uk.gov.gchq.event_logging.v4.UserComplexType value) {
        if (requestorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRequestorIsMutable();
          requestor_.add(index, value);
          onChanged();
        } else {
          requestorBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
       */
      public Builder addRequestor(
          uk.gov.gchq.event_logging.v4.UserComplexType.Builder builderForValue) {
        if (requestorBuilder_ == null) {
          ensureRequestorIsMutable();
          requestor_.add(builderForValue.build());
          onChanged();
        } else {
          requestorBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
       */
      public Builder addRequestor(
          int index, uk.gov.gchq.event_logging.v4.UserComplexType.Builder builderForValue) {
        if (requestorBuilder_ == null) {
          ensureRequestorIsMutable();
          requestor_.add(index, builderForValue.build());
          onChanged();
        } else {
          requestorBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
       */
      public Builder addAllRequestor(
          java.lang.Iterable<? extends uk.gov.gchq.event_logging.v4.UserComplexType> values) {
        if (requestorBuilder_ == null) {
          ensureRequestorIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, requestor_);
          onChanged();
        } else {
          requestorBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
       */
      public Builder clearRequestor() {
        if (requestorBuilder_ == null) {
          requestor_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          requestorBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
       */
      public Builder removeRequestor(int index) {
        if (requestorBuilder_ == null) {
          ensureRequestorIsMutable();
          requestor_.remove(index);
          onChanged();
        } else {
          requestorBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
       */
      public uk.gov.gchq.event_logging.v4.UserComplexType.Builder getRequestorBuilder(
          int index) {
        return getRequestorFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
       */
      public uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder getRequestorOrBuilder(
          int index) {
        if (requestorBuilder_ == null) {
          return requestor_.get(index);  } else {
          return requestorBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
       */
      public java.util.List<? extends uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder> 
           getRequestorOrBuilderList() {
        if (requestorBuilder_ != null) {
          return requestorBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(requestor_);
        }
      }
      /**
       * <pre>
       * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
       */
      public uk.gov.gchq.event_logging.v4.UserComplexType.Builder addRequestorBuilder() {
        return getRequestorFieldBuilder().addBuilder(
            uk.gov.gchq.event_logging.v4.UserComplexType.getDefaultInstance());
      }
      /**
       * <pre>
       * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
       */
      public uk.gov.gchq.event_logging.v4.UserComplexType.Builder addRequestorBuilder(
          int index) {
        return getRequestorFieldBuilder().addBuilder(
            index, uk.gov.gchq.event_logging.v4.UserComplexType.getDefaultInstance());
      }
      /**
       * <pre>
       * A user that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType requestor = 1 [json_name = "requestor", (.buf.validate.field) = { ... }</code>
       */
      public java.util.List<uk.gov.gchq.event_logging.v4.UserComplexType.Builder> 
           getRequestorBuilderList() {
        return getRequestorFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          uk.gov.gchq.event_logging.v4.UserComplexType, uk.gov.gchq.event_logging.v4.UserComplexType.Builder, uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder> 
          getRequestorFieldBuilder() {
        if (requestorBuilder_ == null) {
          requestorBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              uk.gov.gchq.event_logging.v4.UserComplexType, uk.gov.gchq.event_logging.v4.UserComplexType.Builder, uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder>(
                  requestor_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          requestor_ = null;
        }
        return requestorBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:event_logging.v4.ApprovalComplexType.RequestorsType)
    }

    // @@protoc_insertion_point(class_scope:event_logging.v4.ApprovalComplexType.RequestorsType)
    private static final uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType();
    }

    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestorsType>
        PARSER = new com.google.protobuf.AbstractParser<RequestorsType>() {
      @java.lang.Override
      public RequestorsType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<RequestorsType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestorsType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ApproversTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_logging.v4.ApprovalComplexType.ApproversType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
     */
    java.util.List<uk.gov.gchq.event_logging.v4.UserComplexType> 
        getApproverList();
    /**
     * <pre>
     * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
     */
    uk.gov.gchq.event_logging.v4.UserComplexType getApprover(int index);
    /**
     * <pre>
     * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
     */
    int getApproverCount();
    /**
     * <pre>
     * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
     */
    java.util.List<? extends uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder> 
        getApproverOrBuilderList();
    /**
     * <pre>
     * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
     */
    uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder getApproverOrBuilder(
        int index);
  }
  /**
   * <pre>
   * The user(s) that are providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
   * </pre>
   *
   * Protobuf type {@code event_logging.v4.ApprovalComplexType.ApproversType}
   */
  public static final class ApproversType extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:event_logging.v4.ApprovalComplexType.ApproversType)
      ApproversTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        ApproversType.class.getName());
    }
    // Use ApproversType.newBuilder() to construct.
    private ApproversType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ApproversType() {
      approver_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.gov.gchq.event_logging.v4.ApprovalComplexTypeProto.internal_static_event_logging_v4_ApprovalComplexType_ApproversType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.gov.gchq.event_logging.v4.ApprovalComplexTypeProto.internal_static_event_logging_v4_ApprovalComplexType_ApproversType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType.class, uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType.Builder.class);
    }

    public static final int APPROVER_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<uk.gov.gchq.event_logging.v4.UserComplexType> approver_;
    /**
     * <pre>
     * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<uk.gov.gchq.event_logging.v4.UserComplexType> getApproverList() {
      return approver_;
    }
    /**
     * <pre>
     * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<? extends uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder> 
        getApproverOrBuilderList() {
      return approver_;
    }
    /**
     * <pre>
     * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public int getApproverCount() {
      return approver_.size();
    }
    /**
     * <pre>
     * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.UserComplexType getApprover(int index) {
      return approver_.get(index);
    }
    /**
     * <pre>
     * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder getApproverOrBuilder(
        int index) {
      return approver_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < approver_.size(); i++) {
        output.writeMessage(1, approver_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < approver_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, approver_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType)) {
        return super.equals(obj);
      }
      uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType other = (uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType) obj;

      if (!getApproverList()
          .equals(other.getApproverList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getApproverCount() > 0) {
        hash = (37 * hash) + APPROVER_FIELD_NUMBER;
        hash = (53 * hash) + getApproverList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The user(s) that are providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
     * </pre>
     *
     * Protobuf type {@code event_logging.v4.ApprovalComplexType.ApproversType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_logging.v4.ApprovalComplexType.ApproversType)
        uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return uk.gov.gchq.event_logging.v4.ApprovalComplexTypeProto.internal_static_event_logging_v4_ApprovalComplexType_ApproversType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return uk.gov.gchq.event_logging.v4.ApprovalComplexTypeProto.internal_static_event_logging_v4_ApprovalComplexType_ApproversType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType.class, uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType.Builder.class);
      }

      // Construct using uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (approverBuilder_ == null) {
          approver_ = java.util.Collections.emptyList();
        } else {
          approver_ = null;
          approverBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return uk.gov.gchq.event_logging.v4.ApprovalComplexTypeProto.internal_static_event_logging_v4_ApprovalComplexType_ApproversType_descriptor;
      }

      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType getDefaultInstanceForType() {
        return uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType.getDefaultInstance();
      }

      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType build() {
        uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType buildPartial() {
        uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType result = new uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType result) {
        if (approverBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            approver_ = java.util.Collections.unmodifiableList(approver_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.approver_ = approver_;
        } else {
          result.approver_ = approverBuilder_.build();
        }
      }

      private void buildPartial0(uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType) {
          return mergeFrom((uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType other) {
        if (other == uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType.getDefaultInstance()) return this;
        if (approverBuilder_ == null) {
          if (!other.approver_.isEmpty()) {
            if (approver_.isEmpty()) {
              approver_ = other.approver_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureApproverIsMutable();
              approver_.addAll(other.approver_);
            }
            onChanged();
          }
        } else {
          if (!other.approver_.isEmpty()) {
            if (approverBuilder_.isEmpty()) {
              approverBuilder_.dispose();
              approverBuilder_ = null;
              approver_ = other.approver_;
              bitField0_ = (bitField0_ & ~0x00000001);
              approverBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getApproverFieldBuilder() : null;
            } else {
              approverBuilder_.addAllMessages(other.approver_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                uk.gov.gchq.event_logging.v4.UserComplexType m =
                    input.readMessage(
                        uk.gov.gchq.event_logging.v4.UserComplexType.parser(),
                        extensionRegistry);
                if (approverBuilder_ == null) {
                  ensureApproverIsMutable();
                  approver_.add(m);
                } else {
                  approverBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<uk.gov.gchq.event_logging.v4.UserComplexType> approver_ =
        java.util.Collections.emptyList();
      private void ensureApproverIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          approver_ = new java.util.ArrayList<uk.gov.gchq.event_logging.v4.UserComplexType>(approver_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          uk.gov.gchq.event_logging.v4.UserComplexType, uk.gov.gchq.event_logging.v4.UserComplexType.Builder, uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder> approverBuilder_;

      /**
       * <pre>
       * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
       */
      public java.util.List<uk.gov.gchq.event_logging.v4.UserComplexType> getApproverList() {
        if (approverBuilder_ == null) {
          return java.util.Collections.unmodifiableList(approver_);
        } else {
          return approverBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
       */
      public int getApproverCount() {
        if (approverBuilder_ == null) {
          return approver_.size();
        } else {
          return approverBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
       */
      public uk.gov.gchq.event_logging.v4.UserComplexType getApprover(int index) {
        if (approverBuilder_ == null) {
          return approver_.get(index);
        } else {
          return approverBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
       */
      public Builder setApprover(
          int index, uk.gov.gchq.event_logging.v4.UserComplexType value) {
        if (approverBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureApproverIsMutable();
          approver_.set(index, value);
          onChanged();
        } else {
          approverBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
       */
      public Builder setApprover(
          int index, uk.gov.gchq.event_logging.v4.UserComplexType.Builder builderForValue) {
        if (approverBuilder_ == null) {
          ensureApproverIsMutable();
          approver_.set(index, builderForValue.build());
          onChanged();
        } else {
          approverBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
       */
      public Builder addApprover(uk.gov.gchq.event_logging.v4.UserComplexType value) {
        if (approverBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureApproverIsMutable();
          approver_.add(value);
          onChanged();
        } else {
          approverBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
       */
      public Builder addApprover(
          int index, uk.gov.gchq.event_logging.v4.UserComplexType value) {
        if (approverBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureApproverIsMutable();
          approver_.add(index, value);
          onChanged();
        } else {
          approverBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
       */
      public Builder addApprover(
          uk.gov.gchq.event_logging.v4.UserComplexType.Builder builderForValue) {
        if (approverBuilder_ == null) {
          ensureApproverIsMutable();
          approver_.add(builderForValue.build());
          onChanged();
        } else {
          approverBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
       */
      public Builder addApprover(
          int index, uk.gov.gchq.event_logging.v4.UserComplexType.Builder builderForValue) {
        if (approverBuilder_ == null) {
          ensureApproverIsMutable();
          approver_.add(index, builderForValue.build());
          onChanged();
        } else {
          approverBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
       */
      public Builder addAllApprover(
          java.lang.Iterable<? extends uk.gov.gchq.event_logging.v4.UserComplexType> values) {
        if (approverBuilder_ == null) {
          ensureApproverIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, approver_);
          onChanged();
        } else {
          approverBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
       */
      public Builder clearApprover() {
        if (approverBuilder_ == null) {
          approver_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          approverBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
       */
      public Builder removeApprover(int index) {
        if (approverBuilder_ == null) {
          ensureApproverIsMutable();
          approver_.remove(index);
          onChanged();
        } else {
          approverBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
       */
      public uk.gov.gchq.event_logging.v4.UserComplexType.Builder getApproverBuilder(
          int index) {
        return getApproverFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
       */
      public uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder getApproverOrBuilder(
          int index) {
        if (approverBuilder_ == null) {
          return approver_.get(index);  } else {
          return approverBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
       */
      public java.util.List<? extends uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder> 
           getApproverOrBuilderList() {
        if (approverBuilder_ != null) {
          return approverBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(approver_);
        }
      }
      /**
       * <pre>
       * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
       */
      public uk.gov.gchq.event_logging.v4.UserComplexType.Builder addApproverBuilder() {
        return getApproverFieldBuilder().addBuilder(
            uk.gov.gchq.event_logging.v4.UserComplexType.getDefaultInstance());
      }
      /**
       * <pre>
       * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
       */
      public uk.gov.gchq.event_logging.v4.UserComplexType.Builder addApproverBuilder(
          int index) {
        return getApproverFieldBuilder().addBuilder(
            index, uk.gov.gchq.event_logging.v4.UserComplexType.getDefaultInstance());
      }
      /**
       * <pre>
       * The user that is providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType approver = 1 [json_name = "approver", (.buf.validate.field) = { ... }</code>
       */
      public java.util.List<uk.gov.gchq.event_logging.v4.UserComplexType.Builder> 
           getApproverBuilderList() {
        return getApproverFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          uk.gov.gchq.event_logging.v4.UserComplexType, uk.gov.gchq.event_logging.v4.UserComplexType.Builder, uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder> 
          getApproverFieldBuilder() {
        if (approverBuilder_ == null) {
          approverBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              uk.gov.gchq.event_logging.v4.UserComplexType, uk.gov.gchq.event_logging.v4.UserComplexType.Builder, uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder>(
                  approver_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          approver_ = null;
        }
        return approverBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:event_logging.v4.ApprovalComplexType.ApproversType)
    }

    // @@protoc_insertion_point(class_scope:event_logging.v4.ApprovalComplexType.ApproversType)
    private static final uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType();
    }

    public static uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ApproversType>
        PARSER = new com.google.protobuf.AbstractParser<ApproversType>() {
      @java.lang.Override
      public ApproversType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ApproversType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ApproversType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int ACTION_FIELD_NUMBER = 1;
  private int action_ = 0;
  /**
   * <pre>
   * The action that the approval event is capturing, e.g. Approve, Reject, etc.
   * </pre>
   *
   * <code>.event_logging.v4.ApprovalActionSimpleType action = 1 [json_name = "action", (.buf.validate.field) = { ... }</code>
   * @return The enum numeric value on the wire for action.
   */
  @java.lang.Override public int getActionValue() {
    return action_;
  }
  /**
   * <pre>
   * The action that the approval event is capturing, e.g. Approve, Reject, etc.
   * </pre>
   *
   * <code>.event_logging.v4.ApprovalActionSimpleType action = 1 [json_name = "action", (.buf.validate.field) = { ... }</code>
   * @return The action.
   */
  @java.lang.Override public uk.gov.gchq.event_logging.v4.ApprovalActionSimpleType getAction() {
    uk.gov.gchq.event_logging.v4.ApprovalActionSimpleType result = uk.gov.gchq.event_logging.v4.ApprovalActionSimpleType.forNumber(action_);
    return result == null ? uk.gov.gchq.event_logging.v4.ApprovalActionSimpleType.UNRECOGNIZED : result;
  }

  public static final int ID_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object id_ = "";
  /**
   * <pre>
   * An identifier associated with the approval step/process.
   * </pre>
   *
   * <code>string id = 2 [json_name = "id"];</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * An identifier associated with the approval step/process.
   * </pre>
   *
   * <code>string id = 2 [json_name = "id"];</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SUBJECT_FIELD_NUMBER = 3;
  private uk.gov.gchq.event_logging.v4.MultiObjectComplexType subject_;
  /**
   * <pre>
   * The object that this approval step (or request for approval) relates to, e.g. the document being approved.
   * </pre>
   *
   * <code>.event_logging.v4.MultiObjectComplexType subject = 3 [json_name = "subject"];</code>
   * @return Whether the subject field is set.
   */
  @java.lang.Override
  public boolean hasSubject() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The object that this approval step (or request for approval) relates to, e.g. the document being approved.
   * </pre>
   *
   * <code>.event_logging.v4.MultiObjectComplexType subject = 3 [json_name = "subject"];</code>
   * @return The subject.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.MultiObjectComplexType getSubject() {
    return subject_ == null ? uk.gov.gchq.event_logging.v4.MultiObjectComplexType.getDefaultInstance() : subject_;
  }
  /**
   * <pre>
   * The object that this approval step (or request for approval) relates to, e.g. the document being approved.
   * </pre>
   *
   * <code>.event_logging.v4.MultiObjectComplexType subject = 3 [json_name = "subject"];</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.MultiObjectComplexTypeOrBuilder getSubjectOrBuilder() {
    return subject_ == null ? uk.gov.gchq.event_logging.v4.MultiObjectComplexType.getDefaultInstance() : subject_;
  }

  public static final int REQUESTORS_FIELD_NUMBER = 4;
  private uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType requestors_;
  /**
   * <pre>
   * The user(s) that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
   * </pre>
   *
   * <code>.event_logging.v4.ApprovalComplexType.RequestorsType requestors = 4 [json_name = "requestors"];</code>
   * @return Whether the requestors field is set.
   */
  @java.lang.Override
  public boolean hasRequestors() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The user(s) that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
   * </pre>
   *
   * <code>.event_logging.v4.ApprovalComplexType.RequestorsType requestors = 4 [json_name = "requestors"];</code>
   * @return The requestors.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType getRequestors() {
    return requestors_ == null ? uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType.getDefaultInstance() : requestors_;
  }
  /**
   * <pre>
   * The user(s) that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
   * </pre>
   *
   * <code>.event_logging.v4.ApprovalComplexType.RequestorsType requestors = 4 [json_name = "requestors"];</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsTypeOrBuilder getRequestorsOrBuilder() {
    return requestors_ == null ? uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType.getDefaultInstance() : requestors_;
  }

  public static final int APPROVERS_FIELD_NUMBER = 5;
  private uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType approvers_;
  /**
   * <pre>
   * The user(s) that are providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
   * </pre>
   *
   * <code>.event_logging.v4.ApprovalComplexType.ApproversType approvers = 5 [json_name = "approvers"];</code>
   * @return Whether the approvers field is set.
   */
  @java.lang.Override
  public boolean hasApprovers() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * The user(s) that are providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
   * </pre>
   *
   * <code>.event_logging.v4.ApprovalComplexType.ApproversType approvers = 5 [json_name = "approvers"];</code>
   * @return The approvers.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType getApprovers() {
    return approvers_ == null ? uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType.getDefaultInstance() : approvers_;
  }
  /**
   * <pre>
   * The user(s) that are providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
   * </pre>
   *
   * <code>.event_logging.v4.ApprovalComplexType.ApproversType approvers = 5 [json_name = "approvers"];</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversTypeOrBuilder getApproversOrBuilder() {
    return approvers_ == null ? uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType.getDefaultInstance() : approvers_;
  }

  public static final int REASON_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object reason_ = "";
  /**
   * <pre>
   * The reason for the approval/rejection/request, e.g. why the approval was rejected.
   * </pre>
   *
   * <code>string reason = 6 [json_name = "reason"];</code>
   * @return The reason.
   */
  @java.lang.Override
  public java.lang.String getReason() {
    java.lang.Object ref = reason_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      reason_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The reason for the approval/rejection/request, e.g. why the approval was rejected.
   * </pre>
   *
   * <code>string reason = 6 [json_name = "reason"];</code>
   * @return The bytes for reason.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getReasonBytes() {
    java.lang.Object ref = reason_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      reason_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OUTCOME_FIELD_NUMBER = 7;
  private uk.gov.gchq.event_logging.v4.OutcomeComplexType outcome_;
  /**
   * <pre>
   * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
   * </pre>
   *
   * <code>.event_logging.v4.OutcomeComplexType outcome = 7 [json_name = "outcome"];</code>
   * @return Whether the outcome field is set.
   */
  @java.lang.Override
  public boolean hasOutcome() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
   * </pre>
   *
   * <code>.event_logging.v4.OutcomeComplexType outcome = 7 [json_name = "outcome"];</code>
   * @return The outcome.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.OutcomeComplexType getOutcome() {
    return outcome_ == null ? uk.gov.gchq.event_logging.v4.OutcomeComplexType.getDefaultInstance() : outcome_;
  }
  /**
   * <pre>
   * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
   * </pre>
   *
   * <code>.event_logging.v4.OutcomeComplexType outcome = 7 [json_name = "outcome"];</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.OutcomeComplexTypeOrBuilder getOutcomeOrBuilder() {
    return outcome_ == null ? uk.gov.gchq.event_logging.v4.OutcomeComplexType.getDefaultInstance() : outcome_;
  }

  public static final int DATA_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> data_;
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> getDataList() {
    return data_;
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public java.util.List<? extends uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> 
      getDataOrBuilderList() {
    return data_;
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public int getDataCount() {
    return data_.size();
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.DataComplexType getData(int index) {
    return data_.get(index);
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder getDataOrBuilder(
      int index) {
    return data_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (action_ != uk.gov.gchq.event_logging.v4.ApprovalActionSimpleType.APPROVAL_ACTION_SIMPLE_TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(1, action_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, id_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(3, getSubject());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(4, getRequestors());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(5, getApprovers());
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(reason_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 6, reason_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeMessage(7, getOutcome());
    }
    for (int i = 0; i < data_.size(); i++) {
      output.writeMessage(8, data_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (action_ != uk.gov.gchq.event_logging.v4.ApprovalActionSimpleType.APPROVAL_ACTION_SIMPLE_TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, action_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, id_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getSubject());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getRequestors());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getApprovers());
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(reason_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(6, reason_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getOutcome());
    }
    for (int i = 0; i < data_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, data_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof uk.gov.gchq.event_logging.v4.ApprovalComplexType)) {
      return super.equals(obj);
    }
    uk.gov.gchq.event_logging.v4.ApprovalComplexType other = (uk.gov.gchq.event_logging.v4.ApprovalComplexType) obj;

    if (action_ != other.action_) return false;
    if (!getId()
        .equals(other.getId())) return false;
    if (hasSubject() != other.hasSubject()) return false;
    if (hasSubject()) {
      if (!getSubject()
          .equals(other.getSubject())) return false;
    }
    if (hasRequestors() != other.hasRequestors()) return false;
    if (hasRequestors()) {
      if (!getRequestors()
          .equals(other.getRequestors())) return false;
    }
    if (hasApprovers() != other.hasApprovers()) return false;
    if (hasApprovers()) {
      if (!getApprovers()
          .equals(other.getApprovers())) return false;
    }
    if (!getReason()
        .equals(other.getReason())) return false;
    if (hasOutcome() != other.hasOutcome()) return false;
    if (hasOutcome()) {
      if (!getOutcome()
          .equals(other.getOutcome())) return false;
    }
    if (!getDataList()
        .equals(other.getDataList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ACTION_FIELD_NUMBER;
    hash = (53 * hash) + action_;
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    if (hasSubject()) {
      hash = (37 * hash) + SUBJECT_FIELD_NUMBER;
      hash = (53 * hash) + getSubject().hashCode();
    }
    if (hasRequestors()) {
      hash = (37 * hash) + REQUESTORS_FIELD_NUMBER;
      hash = (53 * hash) + getRequestors().hashCode();
    }
    if (hasApprovers()) {
      hash = (37 * hash) + APPROVERS_FIELD_NUMBER;
      hash = (53 * hash) + getApprovers().hashCode();
    }
    hash = (37 * hash) + REASON_FIELD_NUMBER;
    hash = (53 * hash) + getReason().hashCode();
    if (hasOutcome()) {
      hash = (37 * hash) + OUTCOME_FIELD_NUMBER;
      hash = (53 * hash) + getOutcome().hashCode();
    }
    if (getDataCount() > 0) {
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getDataList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static uk.gov.gchq.event_logging.v4.ApprovalComplexType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.ApprovalComplexType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.ApprovalComplexType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.ApprovalComplexType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.ApprovalComplexType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.ApprovalComplexType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.ApprovalComplexType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static uk.gov.gchq.event_logging.v4.ApprovalComplexType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static uk.gov.gchq.event_logging.v4.ApprovalComplexType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static uk.gov.gchq.event_logging.v4.ApprovalComplexType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.ApprovalComplexType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static uk.gov.gchq.event_logging.v4.ApprovalComplexType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(uk.gov.gchq.event_logging.v4.ApprovalComplexType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * This type describes an approval (or rejection) event in a workflow, e.g a workflow where a more privileged user is required to approve the work of another user.
   * </pre>
   *
   * Protobuf type {@code event_logging.v4.ApprovalComplexType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:event_logging.v4.ApprovalComplexType)
      uk.gov.gchq.event_logging.v4.ApprovalComplexTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.gov.gchq.event_logging.v4.ApprovalComplexTypeProto.internal_static_event_logging_v4_ApprovalComplexType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.gov.gchq.event_logging.v4.ApprovalComplexTypeProto.internal_static_event_logging_v4_ApprovalComplexType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              uk.gov.gchq.event_logging.v4.ApprovalComplexType.class, uk.gov.gchq.event_logging.v4.ApprovalComplexType.Builder.class);
    }

    // Construct using uk.gov.gchq.event_logging.v4.ApprovalComplexType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getSubjectFieldBuilder();
        getRequestorsFieldBuilder();
        getApproversFieldBuilder();
        getOutcomeFieldBuilder();
        getDataFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      action_ = 0;
      id_ = "";
      subject_ = null;
      if (subjectBuilder_ != null) {
        subjectBuilder_.dispose();
        subjectBuilder_ = null;
      }
      requestors_ = null;
      if (requestorsBuilder_ != null) {
        requestorsBuilder_.dispose();
        requestorsBuilder_ = null;
      }
      approvers_ = null;
      if (approversBuilder_ != null) {
        approversBuilder_.dispose();
        approversBuilder_ = null;
      }
      reason_ = "";
      outcome_ = null;
      if (outcomeBuilder_ != null) {
        outcomeBuilder_.dispose();
        outcomeBuilder_ = null;
      }
      if (dataBuilder_ == null) {
        data_ = java.util.Collections.emptyList();
      } else {
        data_ = null;
        dataBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return uk.gov.gchq.event_logging.v4.ApprovalComplexTypeProto.internal_static_event_logging_v4_ApprovalComplexType_descriptor;
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.ApprovalComplexType getDefaultInstanceForType() {
      return uk.gov.gchq.event_logging.v4.ApprovalComplexType.getDefaultInstance();
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.ApprovalComplexType build() {
      uk.gov.gchq.event_logging.v4.ApprovalComplexType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.ApprovalComplexType buildPartial() {
      uk.gov.gchq.event_logging.v4.ApprovalComplexType result = new uk.gov.gchq.event_logging.v4.ApprovalComplexType(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(uk.gov.gchq.event_logging.v4.ApprovalComplexType result) {
      if (dataBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0)) {
          data_ = java.util.Collections.unmodifiableList(data_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.data_ = data_;
      } else {
        result.data_ = dataBuilder_.build();
      }
    }

    private void buildPartial0(uk.gov.gchq.event_logging.v4.ApprovalComplexType result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.action_ = action_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.id_ = id_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.subject_ = subjectBuilder_ == null
            ? subject_
            : subjectBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.requestors_ = requestorsBuilder_ == null
            ? requestors_
            : requestorsBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.approvers_ = approversBuilder_ == null
            ? approvers_
            : approversBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.reason_ = reason_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.outcome_ = outcomeBuilder_ == null
            ? outcome_
            : outcomeBuilder_.build();
        to_bitField0_ |= 0x00000008;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof uk.gov.gchq.event_logging.v4.ApprovalComplexType) {
        return mergeFrom((uk.gov.gchq.event_logging.v4.ApprovalComplexType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(uk.gov.gchq.event_logging.v4.ApprovalComplexType other) {
      if (other == uk.gov.gchq.event_logging.v4.ApprovalComplexType.getDefaultInstance()) return this;
      if (other.action_ != 0) {
        setActionValue(other.getActionValue());
      }
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.hasSubject()) {
        mergeSubject(other.getSubject());
      }
      if (other.hasRequestors()) {
        mergeRequestors(other.getRequestors());
      }
      if (other.hasApprovers()) {
        mergeApprovers(other.getApprovers());
      }
      if (!other.getReason().isEmpty()) {
        reason_ = other.reason_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      if (other.hasOutcome()) {
        mergeOutcome(other.getOutcome());
      }
      if (dataBuilder_ == null) {
        if (!other.data_.isEmpty()) {
          if (data_.isEmpty()) {
            data_ = other.data_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureDataIsMutable();
            data_.addAll(other.data_);
          }
          onChanged();
        }
      } else {
        if (!other.data_.isEmpty()) {
          if (dataBuilder_.isEmpty()) {
            dataBuilder_.dispose();
            dataBuilder_ = null;
            data_ = other.data_;
            bitField0_ = (bitField0_ & ~0x00000080);
            dataBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getDataFieldBuilder() : null;
          } else {
            dataBuilder_.addAllMessages(other.data_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              action_ = input.readEnum();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              id_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getSubjectFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getRequestorsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getApproversFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              reason_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 58: {
              input.readMessage(
                  getOutcomeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000040;
              break;
            } // case 58
            case 66: {
              uk.gov.gchq.event_logging.v4.DataComplexType m =
                  input.readMessage(
                      uk.gov.gchq.event_logging.v4.DataComplexType.parser(),
                      extensionRegistry);
              if (dataBuilder_ == null) {
                ensureDataIsMutable();
                data_.add(m);
              } else {
                dataBuilder_.addMessage(m);
              }
              break;
            } // case 66
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int action_ = 0;
    /**
     * <pre>
     * The action that the approval event is capturing, e.g. Approve, Reject, etc.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalActionSimpleType action = 1 [json_name = "action", (.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for action.
     */
    @java.lang.Override public int getActionValue() {
      return action_;
    }
    /**
     * <pre>
     * The action that the approval event is capturing, e.g. Approve, Reject, etc.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalActionSimpleType action = 1 [json_name = "action", (.buf.validate.field) = { ... }</code>
     * @param value The enum numeric value on the wire for action to set.
     * @return This builder for chaining.
     */
    public Builder setActionValue(int value) {
      action_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action that the approval event is capturing, e.g. Approve, Reject, etc.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalActionSimpleType action = 1 [json_name = "action", (.buf.validate.field) = { ... }</code>
     * @return The action.
     */
    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.ApprovalActionSimpleType getAction() {
      uk.gov.gchq.event_logging.v4.ApprovalActionSimpleType result = uk.gov.gchq.event_logging.v4.ApprovalActionSimpleType.forNumber(action_);
      return result == null ? uk.gov.gchq.event_logging.v4.ApprovalActionSimpleType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The action that the approval event is capturing, e.g. Approve, Reject, etc.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalActionSimpleType action = 1 [json_name = "action", (.buf.validate.field) = { ... }</code>
     * @param value The action to set.
     * @return This builder for chaining.
     */
    public Builder setAction(uk.gov.gchq.event_logging.v4.ApprovalActionSimpleType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      action_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The action that the approval event is capturing, e.g. Approve, Reject, etc.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalActionSimpleType action = 1 [json_name = "action", (.buf.validate.field) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearAction() {
      bitField0_ = (bitField0_ & ~0x00000001);
      action_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object id_ = "";
    /**
     * <pre>
     * An identifier associated with the approval step/process.
     * </pre>
     *
     * <code>string id = 2 [json_name = "id"];</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * An identifier associated with the approval step/process.
     * </pre>
     *
     * <code>string id = 2 [json_name = "id"];</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * An identifier associated with the approval step/process.
     * </pre>
     *
     * <code>string id = 2 [json_name = "id"];</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      id_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An identifier associated with the approval step/process.
     * </pre>
     *
     * <code>string id = 2 [json_name = "id"];</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      id_ = getDefaultInstance().getId();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An identifier associated with the approval step/process.
     * </pre>
     *
     * <code>string id = 2 [json_name = "id"];</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      id_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private uk.gov.gchq.event_logging.v4.MultiObjectComplexType subject_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.MultiObjectComplexType, uk.gov.gchq.event_logging.v4.MultiObjectComplexType.Builder, uk.gov.gchq.event_logging.v4.MultiObjectComplexTypeOrBuilder> subjectBuilder_;
    /**
     * <pre>
     * The object that this approval step (or request for approval) relates to, e.g. the document being approved.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType subject = 3 [json_name = "subject"];</code>
     * @return Whether the subject field is set.
     */
    public boolean hasSubject() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The object that this approval step (or request for approval) relates to, e.g. the document being approved.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType subject = 3 [json_name = "subject"];</code>
     * @return The subject.
     */
    public uk.gov.gchq.event_logging.v4.MultiObjectComplexType getSubject() {
      if (subjectBuilder_ == null) {
        return subject_ == null ? uk.gov.gchq.event_logging.v4.MultiObjectComplexType.getDefaultInstance() : subject_;
      } else {
        return subjectBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The object that this approval step (or request for approval) relates to, e.g. the document being approved.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType subject = 3 [json_name = "subject"];</code>
     */
    public Builder setSubject(uk.gov.gchq.event_logging.v4.MultiObjectComplexType value) {
      if (subjectBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        subject_ = value;
      } else {
        subjectBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The object that this approval step (or request for approval) relates to, e.g. the document being approved.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType subject = 3 [json_name = "subject"];</code>
     */
    public Builder setSubject(
        uk.gov.gchq.event_logging.v4.MultiObjectComplexType.Builder builderForValue) {
      if (subjectBuilder_ == null) {
        subject_ = builderForValue.build();
      } else {
        subjectBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The object that this approval step (or request for approval) relates to, e.g. the document being approved.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType subject = 3 [json_name = "subject"];</code>
     */
    public Builder mergeSubject(uk.gov.gchq.event_logging.v4.MultiObjectComplexType value) {
      if (subjectBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          subject_ != null &&
          subject_ != uk.gov.gchq.event_logging.v4.MultiObjectComplexType.getDefaultInstance()) {
          getSubjectBuilder().mergeFrom(value);
        } else {
          subject_ = value;
        }
      } else {
        subjectBuilder_.mergeFrom(value);
      }
      if (subject_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The object that this approval step (or request for approval) relates to, e.g. the document being approved.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType subject = 3 [json_name = "subject"];</code>
     */
    public Builder clearSubject() {
      bitField0_ = (bitField0_ & ~0x00000004);
      subject_ = null;
      if (subjectBuilder_ != null) {
        subjectBuilder_.dispose();
        subjectBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The object that this approval step (or request for approval) relates to, e.g. the document being approved.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType subject = 3 [json_name = "subject"];</code>
     */
    public uk.gov.gchq.event_logging.v4.MultiObjectComplexType.Builder getSubjectBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getSubjectFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The object that this approval step (or request for approval) relates to, e.g. the document being approved.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType subject = 3 [json_name = "subject"];</code>
     */
    public uk.gov.gchq.event_logging.v4.MultiObjectComplexTypeOrBuilder getSubjectOrBuilder() {
      if (subjectBuilder_ != null) {
        return subjectBuilder_.getMessageOrBuilder();
      } else {
        return subject_ == null ?
            uk.gov.gchq.event_logging.v4.MultiObjectComplexType.getDefaultInstance() : subject_;
      }
    }
    /**
     * <pre>
     * The object that this approval step (or request for approval) relates to, e.g. the document being approved.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType subject = 3 [json_name = "subject"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.MultiObjectComplexType, uk.gov.gchq.event_logging.v4.MultiObjectComplexType.Builder, uk.gov.gchq.event_logging.v4.MultiObjectComplexTypeOrBuilder> 
        getSubjectFieldBuilder() {
      if (subjectBuilder_ == null) {
        subjectBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.MultiObjectComplexType, uk.gov.gchq.event_logging.v4.MultiObjectComplexType.Builder, uk.gov.gchq.event_logging.v4.MultiObjectComplexTypeOrBuilder>(
                getSubject(),
                getParentForChildren(),
                isClean());
        subject_ = null;
      }
      return subjectBuilder_;
    }

    private uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType requestors_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType, uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType.Builder, uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsTypeOrBuilder> requestorsBuilder_;
    /**
     * <pre>
     * The user(s) that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType.RequestorsType requestors = 4 [json_name = "requestors"];</code>
     * @return Whether the requestors field is set.
     */
    public boolean hasRequestors() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The user(s) that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType.RequestorsType requestors = 4 [json_name = "requestors"];</code>
     * @return The requestors.
     */
    public uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType getRequestors() {
      if (requestorsBuilder_ == null) {
        return requestors_ == null ? uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType.getDefaultInstance() : requestors_;
      } else {
        return requestorsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The user(s) that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType.RequestorsType requestors = 4 [json_name = "requestors"];</code>
     */
    public Builder setRequestors(uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType value) {
      if (requestorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        requestors_ = value;
      } else {
        requestorsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The user(s) that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType.RequestorsType requestors = 4 [json_name = "requestors"];</code>
     */
    public Builder setRequestors(
        uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType.Builder builderForValue) {
      if (requestorsBuilder_ == null) {
        requestors_ = builderForValue.build();
      } else {
        requestorsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The user(s) that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType.RequestorsType requestors = 4 [json_name = "requestors"];</code>
     */
    public Builder mergeRequestors(uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType value) {
      if (requestorsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          requestors_ != null &&
          requestors_ != uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType.getDefaultInstance()) {
          getRequestorsBuilder().mergeFrom(value);
        } else {
          requestors_ = value;
        }
      } else {
        requestorsBuilder_.mergeFrom(value);
      }
      if (requestors_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The user(s) that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType.RequestorsType requestors = 4 [json_name = "requestors"];</code>
     */
    public Builder clearRequestors() {
      bitField0_ = (bitField0_ & ~0x00000008);
      requestors_ = null;
      if (requestorsBuilder_ != null) {
        requestorsBuilder_.dispose();
        requestorsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The user(s) that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType.RequestorsType requestors = 4 [json_name = "requestors"];</code>
     */
    public uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType.Builder getRequestorsBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getRequestorsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The user(s) that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType.RequestorsType requestors = 4 [json_name = "requestors"];</code>
     */
    public uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsTypeOrBuilder getRequestorsOrBuilder() {
      if (requestorsBuilder_ != null) {
        return requestorsBuilder_.getMessageOrBuilder();
      } else {
        return requestors_ == null ?
            uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType.getDefaultInstance() : requestors_;
      }
    }
    /**
     * <pre>
     * The user(s) that requested the approval, e.g. jbloggs requesting approval from a manager for his finance report.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType.RequestorsType requestors = 4 [json_name = "requestors"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType, uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType.Builder, uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsTypeOrBuilder> 
        getRequestorsFieldBuilder() {
      if (requestorsBuilder_ == null) {
        requestorsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType, uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsType.Builder, uk.gov.gchq.event_logging.v4.ApprovalComplexType.RequestorsTypeOrBuilder>(
                getRequestors(),
                getParentForChildren(),
                isClean());
        requestors_ = null;
      }
      return requestorsBuilder_;
    }

    private uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType approvers_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType, uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType.Builder, uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversTypeOrBuilder> approversBuilder_;
    /**
     * <pre>
     * The user(s) that are providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType.ApproversType approvers = 5 [json_name = "approvers"];</code>
     * @return Whether the approvers field is set.
     */
    public boolean hasApprovers() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * The user(s) that are providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType.ApproversType approvers = 5 [json_name = "approvers"];</code>
     * @return The approvers.
     */
    public uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType getApprovers() {
      if (approversBuilder_ == null) {
        return approvers_ == null ? uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType.getDefaultInstance() : approvers_;
      } else {
        return approversBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The user(s) that are providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType.ApproversType approvers = 5 [json_name = "approvers"];</code>
     */
    public Builder setApprovers(uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType value) {
      if (approversBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        approvers_ = value;
      } else {
        approversBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The user(s) that are providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType.ApproversType approvers = 5 [json_name = "approvers"];</code>
     */
    public Builder setApprovers(
        uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType.Builder builderForValue) {
      if (approversBuilder_ == null) {
        approvers_ = builderForValue.build();
      } else {
        approversBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The user(s) that are providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType.ApproversType approvers = 5 [json_name = "approvers"];</code>
     */
    public Builder mergeApprovers(uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType value) {
      if (approversBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          approvers_ != null &&
          approvers_ != uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType.getDefaultInstance()) {
          getApproversBuilder().mergeFrom(value);
        } else {
          approvers_ = value;
        }
      } else {
        approversBuilder_.mergeFrom(value);
      }
      if (approvers_ != null) {
        bitField0_ |= 0x00000010;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The user(s) that are providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType.ApproversType approvers = 5 [json_name = "approvers"];</code>
     */
    public Builder clearApprovers() {
      bitField0_ = (bitField0_ & ~0x00000010);
      approvers_ = null;
      if (approversBuilder_ != null) {
        approversBuilder_.dispose();
        approversBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The user(s) that are providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType.ApproversType approvers = 5 [json_name = "approvers"];</code>
     */
    public uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType.Builder getApproversBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getApproversFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The user(s) that are providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType.ApproversType approvers = 5 [json_name = "approvers"];</code>
     */
    public uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversTypeOrBuilder getApproversOrBuilder() {
      if (approversBuilder_ != null) {
        return approversBuilder_.getMessageOrBuilder();
      } else {
        return approvers_ == null ?
            uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType.getDefaultInstance() : approvers_;
      }
    }
    /**
     * <pre>
     * The user(s) that are providing the approval, e.g. a user requesting approval from manager fsmith for his finance report.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType.ApproversType approvers = 5 [json_name = "approvers"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType, uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType.Builder, uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversTypeOrBuilder> 
        getApproversFieldBuilder() {
      if (approversBuilder_ == null) {
        approversBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType, uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversType.Builder, uk.gov.gchq.event_logging.v4.ApprovalComplexType.ApproversTypeOrBuilder>(
                getApprovers(),
                getParentForChildren(),
                isClean());
        approvers_ = null;
      }
      return approversBuilder_;
    }

    private java.lang.Object reason_ = "";
    /**
     * <pre>
     * The reason for the approval/rejection/request, e.g. why the approval was rejected.
     * </pre>
     *
     * <code>string reason = 6 [json_name = "reason"];</code>
     * @return The reason.
     */
    public java.lang.String getReason() {
      java.lang.Object ref = reason_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        reason_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The reason for the approval/rejection/request, e.g. why the approval was rejected.
     * </pre>
     *
     * <code>string reason = 6 [json_name = "reason"];</code>
     * @return The bytes for reason.
     */
    public com.google.protobuf.ByteString
        getReasonBytes() {
      java.lang.Object ref = reason_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        reason_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The reason for the approval/rejection/request, e.g. why the approval was rejected.
     * </pre>
     *
     * <code>string reason = 6 [json_name = "reason"];</code>
     * @param value The reason to set.
     * @return This builder for chaining.
     */
    public Builder setReason(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      reason_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The reason for the approval/rejection/request, e.g. why the approval was rejected.
     * </pre>
     *
     * <code>string reason = 6 [json_name = "reason"];</code>
     * @return This builder for chaining.
     */
    public Builder clearReason() {
      reason_ = getDefaultInstance().getReason();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The reason for the approval/rejection/request, e.g. why the approval was rejected.
     * </pre>
     *
     * <code>string reason = 6 [json_name = "reason"];</code>
     * @param value The bytes for reason to set.
     * @return This builder for chaining.
     */
    public Builder setReasonBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      reason_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    private uk.gov.gchq.event_logging.v4.OutcomeComplexType outcome_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.OutcomeComplexType, uk.gov.gchq.event_logging.v4.OutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.OutcomeComplexTypeOrBuilder> outcomeBuilder_;
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 7 [json_name = "outcome"];</code>
     * @return Whether the outcome field is set.
     */
    public boolean hasOutcome() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 7 [json_name = "outcome"];</code>
     * @return The outcome.
     */
    public uk.gov.gchq.event_logging.v4.OutcomeComplexType getOutcome() {
      if (outcomeBuilder_ == null) {
        return outcome_ == null ? uk.gov.gchq.event_logging.v4.OutcomeComplexType.getDefaultInstance() : outcome_;
      } else {
        return outcomeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 7 [json_name = "outcome"];</code>
     */
    public Builder setOutcome(uk.gov.gchq.event_logging.v4.OutcomeComplexType value) {
      if (outcomeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        outcome_ = value;
      } else {
        outcomeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 7 [json_name = "outcome"];</code>
     */
    public Builder setOutcome(
        uk.gov.gchq.event_logging.v4.OutcomeComplexType.Builder builderForValue) {
      if (outcomeBuilder_ == null) {
        outcome_ = builderForValue.build();
      } else {
        outcomeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 7 [json_name = "outcome"];</code>
     */
    public Builder mergeOutcome(uk.gov.gchq.event_logging.v4.OutcomeComplexType value) {
      if (outcomeBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0) &&
          outcome_ != null &&
          outcome_ != uk.gov.gchq.event_logging.v4.OutcomeComplexType.getDefaultInstance()) {
          getOutcomeBuilder().mergeFrom(value);
        } else {
          outcome_ = value;
        }
      } else {
        outcomeBuilder_.mergeFrom(value);
      }
      if (outcome_ != null) {
        bitField0_ |= 0x00000040;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 7 [json_name = "outcome"];</code>
     */
    public Builder clearOutcome() {
      bitField0_ = (bitField0_ & ~0x00000040);
      outcome_ = null;
      if (outcomeBuilder_ != null) {
        outcomeBuilder_.dispose();
        outcomeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 7 [json_name = "outcome"];</code>
     */
    public uk.gov.gchq.event_logging.v4.OutcomeComplexType.Builder getOutcomeBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getOutcomeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 7 [json_name = "outcome"];</code>
     */
    public uk.gov.gchq.event_logging.v4.OutcomeComplexTypeOrBuilder getOutcomeOrBuilder() {
      if (outcomeBuilder_ != null) {
        return outcomeBuilder_.getMessageOrBuilder();
      } else {
        return outcome_ == null ?
            uk.gov.gchq.event_logging.v4.OutcomeComplexType.getDefaultInstance() : outcome_;
      }
    }
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 7 [json_name = "outcome"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.OutcomeComplexType, uk.gov.gchq.event_logging.v4.OutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.OutcomeComplexTypeOrBuilder> 
        getOutcomeFieldBuilder() {
      if (outcomeBuilder_ == null) {
        outcomeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.OutcomeComplexType, uk.gov.gchq.event_logging.v4.OutcomeComplexType.Builder, uk.gov.gchq.event_logging.v4.OutcomeComplexTypeOrBuilder>(
                getOutcome(),
                getParentForChildren(),
                isClean());
        outcome_ = null;
      }
      return outcomeBuilder_;
    }

    private java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> data_ =
      java.util.Collections.emptyList();
    private void ensureDataIsMutable() {
      if (!((bitField0_ & 0x00000080) != 0)) {
        data_ = new java.util.ArrayList<uk.gov.gchq.event_logging.v4.DataComplexType>(data_);
        bitField0_ |= 0x00000080;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        uk.gov.gchq.event_logging.v4.DataComplexType, uk.gov.gchq.event_logging.v4.DataComplexType.Builder, uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> dataBuilder_;

    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> getDataList() {
      if (dataBuilder_ == null) {
        return java.util.Collections.unmodifiableList(data_);
      } else {
        return dataBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public int getDataCount() {
      if (dataBuilder_ == null) {
        return data_.size();
      } else {
        return dataBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType getData(int index) {
      if (dataBuilder_ == null) {
        return data_.get(index);
      } else {
        return dataBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder setData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType value) {
      if (dataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataIsMutable();
        data_.set(index, value);
        onChanged();
      } else {
        dataBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder setData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType.Builder builderForValue) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.set(index, builderForValue.build());
        onChanged();
      } else {
        dataBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(uk.gov.gchq.event_logging.v4.DataComplexType value) {
      if (dataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataIsMutable();
        data_.add(value);
        onChanged();
      } else {
        dataBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType value) {
      if (dataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataIsMutable();
        data_.add(index, value);
        onChanged();
      } else {
        dataBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(
        uk.gov.gchq.event_logging.v4.DataComplexType.Builder builderForValue) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.add(builderForValue.build());
        onChanged();
      } else {
        dataBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType.Builder builderForValue) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.add(index, builderForValue.build());
        onChanged();
      } else {
        dataBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addAllData(
        java.lang.Iterable<? extends uk.gov.gchq.event_logging.v4.DataComplexType> values) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, data_);
        onChanged();
      } else {
        dataBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder clearData() {
      if (dataBuilder_ == null) {
        data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
      } else {
        dataBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder removeData(int index) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.remove(index);
        onChanged();
      } else {
        dataBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType.Builder getDataBuilder(
        int index) {
      return getDataFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder getDataOrBuilder(
        int index) {
      if (dataBuilder_ == null) {
        return data_.get(index);  } else {
        return dataBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public java.util.List<? extends uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> 
         getDataOrBuilderList() {
      if (dataBuilder_ != null) {
        return dataBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(data_);
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType.Builder addDataBuilder() {
      return getDataFieldBuilder().addBuilder(
          uk.gov.gchq.event_logging.v4.DataComplexType.getDefaultInstance());
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType.Builder addDataBuilder(
        int index) {
      return getDataFieldBuilder().addBuilder(
          index, uk.gov.gchq.event_logging.v4.DataComplexType.getDefaultInstance());
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType.Builder> 
         getDataBuilderList() {
      return getDataFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        uk.gov.gchq.event_logging.v4.DataComplexType, uk.gov.gchq.event_logging.v4.DataComplexType.Builder, uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> 
        getDataFieldBuilder() {
      if (dataBuilder_ == null) {
        dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            uk.gov.gchq.event_logging.v4.DataComplexType, uk.gov.gchq.event_logging.v4.DataComplexType.Builder, uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder>(
                data_,
                ((bitField0_ & 0x00000080) != 0),
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      return dataBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:event_logging.v4.ApprovalComplexType)
  }

  // @@protoc_insertion_point(class_scope:event_logging.v4.ApprovalComplexType)
  private static final uk.gov.gchq.event_logging.v4.ApprovalComplexType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new uk.gov.gchq.event_logging.v4.ApprovalComplexType();
  }

  public static uk.gov.gchq.event_logging.v4.ApprovalComplexType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ApprovalComplexType>
      PARSER = new com.google.protobuf.AbstractParser<ApprovalComplexType>() {
    @java.lang.Override
    public ApprovalComplexType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ApprovalComplexType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ApprovalComplexType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.ApprovalComplexType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

