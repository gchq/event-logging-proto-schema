// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event_logging/v4/media_complex_type.proto

// Protobuf Java Version: 4.26.1
package uk.gov.gchq.event_logging.v4;

/**
 * <pre>
 * Used to describe media added or removed from a computer system, or as a location for reading and writing files.
 * </pre>
 *
 * Protobuf type {@code event_logging.v4.MediaComplexType}
 */
public final class MediaComplexType extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:event_logging.v4.MediaComplexType)
    MediaComplexTypeOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      MediaComplexType.class.getName());
  }
  // Use MediaComplexType.newBuilder() to construct.
  private MediaComplexType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private MediaComplexType() {
    type_ = 0;
    id_ = "";
    name_ = "";
    data_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return uk.gov.gchq.event_logging.v4.MediaComplexTypeProto.internal_static_event_logging_v4_MediaComplexType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return uk.gov.gchq.event_logging.v4.MediaComplexTypeProto.internal_static_event_logging_v4_MediaComplexType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            uk.gov.gchq.event_logging.v4.MediaComplexType.class, uk.gov.gchq.event_logging.v4.MediaComplexType.Builder.class);
  }

  private int bitField0_;
  public static final int TYPE_FIELD_NUMBER = 1;
  private int type_ = 0;
  /**
   * <pre>
   * The type of the removable media, e.g. MemoryCard
   * </pre>
   *
   * <code>.event_logging.v4.MediaTypeSimpleType type = 1 [json_name = "type", (.buf.validate.field) = { ... }</code>
   * @return The enum numeric value on the wire for type.
   */
  @java.lang.Override public int getTypeValue() {
    return type_;
  }
  /**
   * <pre>
   * The type of the removable media, e.g. MemoryCard
   * </pre>
   *
   * <code>.event_logging.v4.MediaTypeSimpleType type = 1 [json_name = "type", (.buf.validate.field) = { ... }</code>
   * @return The type.
   */
  @java.lang.Override public uk.gov.gchq.event_logging.v4.MediaTypeSimpleType getType() {
    uk.gov.gchq.event_logging.v4.MediaTypeSimpleType result = uk.gov.gchq.event_logging.v4.MediaTypeSimpleType.forNumber(type_);
    return result == null ? uk.gov.gchq.event_logging.v4.MediaTypeSimpleType.UNRECOGNIZED : result;
  }

  public static final int ID_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object id_ = "";
  /**
   * <pre>
   * The identifier for the removable media. This may be an identifier provided by the media (e.g. the Card Identification or CID of an SD card) or assigned by device monitoring software.
   * </pre>
   *
   * <code>string id = 2 [json_name = "id"];</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The identifier for the removable media. This may be an identifier provided by the media (e.g. the Card Identification or CID of an SD card) or assigned by device monitoring software.
   * </pre>
   *
   * <code>string id = 2 [json_name = "id"];</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NAME_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * A friendly name for the media, possibly assigned by device monitoring system..
   * </pre>
   *
   * <code>string name = 3 [json_name = "name"];</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A friendly name for the media, possibly assigned by device monitoring system..
   * </pre>
   *
   * <code>string name = 3 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REMOVABLE_FIELD_NUMBER = 4;
  private boolean removable_ = false;
  /**
   * <pre>
   * Indicates if this media is removable, e.g. USB storage device or soft media such as DVD.
   * </pre>
   *
   * <code>bool removable = 4 [json_name = "removable"];</code>
   * @return The removable.
   */
  @java.lang.Override
  public boolean getRemovable() {
    return removable_;
  }

  public static final int READ_WRITE_FIELD_NUMBER = 5;
  private boolean readWrite_ = false;
  /**
   * <pre>
   * Indicates if a device has read-write access. Most devices are read-write so this is assumed to be true and can therefore be omitted where this is the case.
   * </pre>
   *
   * <code>bool read_write = 5 [json_name = "readWrite"];</code>
   * @return The readWrite.
   */
  @java.lang.Override
  public boolean getReadWrite() {
    return readWrite_;
  }

  public static final int CAPACITY_FIELD_NUMBER = 6;
  private int capacity_ = 0;
  /**
   * <pre>
   * The capacity of the media in bytes.
   * </pre>
   *
   * <code>uint32 capacity = 6 [json_name = "capacity", (.buf.validate.field) = { ... }</code>
   * @return The capacity.
   */
  @java.lang.Override
  public int getCapacity() {
    return capacity_;
  }

  public static final int CLASSIFICATION_FIELD_NUMBER = 7;
  private uk.gov.gchq.event_logging.v4.ClassificationComplexType classification_;
  /**
   * <pre>
   * The classification of the media.
   * </pre>
   *
   * <code>.event_logging.v4.ClassificationComplexType classification = 7 [json_name = "classification"];</code>
   * @return Whether the classification field is set.
   */
  @java.lang.Override
  public boolean hasClassification() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The classification of the media.
   * </pre>
   *
   * <code>.event_logging.v4.ClassificationComplexType classification = 7 [json_name = "classification"];</code>
   * @return The classification.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.ClassificationComplexType getClassification() {
    return classification_ == null ? uk.gov.gchq.event_logging.v4.ClassificationComplexType.getDefaultInstance() : classification_;
  }
  /**
   * <pre>
   * The classification of the media.
   * </pre>
   *
   * <code>.event_logging.v4.ClassificationComplexType classification = 7 [json_name = "classification"];</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.ClassificationComplexTypeOrBuilder getClassificationOrBuilder() {
    return classification_ == null ? uk.gov.gchq.event_logging.v4.ClassificationComplexType.getDefaultInstance() : classification_;
  }

  public static final int DATA_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> data_;
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> getDataList() {
    return data_;
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public java.util.List<? extends uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> 
      getDataOrBuilderList() {
    return data_;
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public int getDataCount() {
    return data_.size();
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.DataComplexType getData(int index) {
    return data_.get(index);
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder getDataOrBuilder(
      int index) {
    return data_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (type_ != uk.gov.gchq.event_logging.v4.MediaTypeSimpleType.MEDIA_TYPE_SIMPLE_TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(1, type_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, id_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 3, name_);
    }
    if (removable_ != false) {
      output.writeBool(4, removable_);
    }
    if (readWrite_ != false) {
      output.writeBool(5, readWrite_);
    }
    if (capacity_ != 0) {
      output.writeUInt32(6, capacity_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(7, getClassification());
    }
    for (int i = 0; i < data_.size(); i++) {
      output.writeMessage(8, data_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (type_ != uk.gov.gchq.event_logging.v4.MediaTypeSimpleType.MEDIA_TYPE_SIMPLE_TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, type_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, id_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(3, name_);
    }
    if (removable_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, removable_);
    }
    if (readWrite_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, readWrite_);
    }
    if (capacity_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(6, capacity_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getClassification());
    }
    for (int i = 0; i < data_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, data_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof uk.gov.gchq.event_logging.v4.MediaComplexType)) {
      return super.equals(obj);
    }
    uk.gov.gchq.event_logging.v4.MediaComplexType other = (uk.gov.gchq.event_logging.v4.MediaComplexType) obj;

    if (type_ != other.type_) return false;
    if (!getId()
        .equals(other.getId())) return false;
    if (!getName()
        .equals(other.getName())) return false;
    if (getRemovable()
        != other.getRemovable()) return false;
    if (getReadWrite()
        != other.getReadWrite()) return false;
    if (getCapacity()
        != other.getCapacity()) return false;
    if (hasClassification() != other.hasClassification()) return false;
    if (hasClassification()) {
      if (!getClassification()
          .equals(other.getClassification())) return false;
    }
    if (!getDataList()
        .equals(other.getDataList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + REMOVABLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getRemovable());
    hash = (37 * hash) + READ_WRITE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getReadWrite());
    hash = (37 * hash) + CAPACITY_FIELD_NUMBER;
    hash = (53 * hash) + getCapacity();
    if (hasClassification()) {
      hash = (37 * hash) + CLASSIFICATION_FIELD_NUMBER;
      hash = (53 * hash) + getClassification().hashCode();
    }
    if (getDataCount() > 0) {
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getDataList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static uk.gov.gchq.event_logging.v4.MediaComplexType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.MediaComplexType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.MediaComplexType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.MediaComplexType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.MediaComplexType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.MediaComplexType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.MediaComplexType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static uk.gov.gchq.event_logging.v4.MediaComplexType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static uk.gov.gchq.event_logging.v4.MediaComplexType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static uk.gov.gchq.event_logging.v4.MediaComplexType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.MediaComplexType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static uk.gov.gchq.event_logging.v4.MediaComplexType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(uk.gov.gchq.event_logging.v4.MediaComplexType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Used to describe media added or removed from a computer system, or as a location for reading and writing files.
   * </pre>
   *
   * Protobuf type {@code event_logging.v4.MediaComplexType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:event_logging.v4.MediaComplexType)
      uk.gov.gchq.event_logging.v4.MediaComplexTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.gov.gchq.event_logging.v4.MediaComplexTypeProto.internal_static_event_logging_v4_MediaComplexType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.gov.gchq.event_logging.v4.MediaComplexTypeProto.internal_static_event_logging_v4_MediaComplexType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              uk.gov.gchq.event_logging.v4.MediaComplexType.class, uk.gov.gchq.event_logging.v4.MediaComplexType.Builder.class);
    }

    // Construct using uk.gov.gchq.event_logging.v4.MediaComplexType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getClassificationFieldBuilder();
        getDataFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      type_ = 0;
      id_ = "";
      name_ = "";
      removable_ = false;
      readWrite_ = false;
      capacity_ = 0;
      classification_ = null;
      if (classificationBuilder_ != null) {
        classificationBuilder_.dispose();
        classificationBuilder_ = null;
      }
      if (dataBuilder_ == null) {
        data_ = java.util.Collections.emptyList();
      } else {
        data_ = null;
        dataBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return uk.gov.gchq.event_logging.v4.MediaComplexTypeProto.internal_static_event_logging_v4_MediaComplexType_descriptor;
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.MediaComplexType getDefaultInstanceForType() {
      return uk.gov.gchq.event_logging.v4.MediaComplexType.getDefaultInstance();
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.MediaComplexType build() {
      uk.gov.gchq.event_logging.v4.MediaComplexType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.MediaComplexType buildPartial() {
      uk.gov.gchq.event_logging.v4.MediaComplexType result = new uk.gov.gchq.event_logging.v4.MediaComplexType(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(uk.gov.gchq.event_logging.v4.MediaComplexType result) {
      if (dataBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0)) {
          data_ = java.util.Collections.unmodifiableList(data_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.data_ = data_;
      } else {
        result.data_ = dataBuilder_.build();
      }
    }

    private void buildPartial0(uk.gov.gchq.event_logging.v4.MediaComplexType result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.type_ = type_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.id_ = id_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.removable_ = removable_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.readWrite_ = readWrite_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.capacity_ = capacity_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.classification_ = classificationBuilder_ == null
            ? classification_
            : classificationBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof uk.gov.gchq.event_logging.v4.MediaComplexType) {
        return mergeFrom((uk.gov.gchq.event_logging.v4.MediaComplexType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(uk.gov.gchq.event_logging.v4.MediaComplexType other) {
      if (other == uk.gov.gchq.event_logging.v4.MediaComplexType.getDefaultInstance()) return this;
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (other.getRemovable() != false) {
        setRemovable(other.getRemovable());
      }
      if (other.getReadWrite() != false) {
        setReadWrite(other.getReadWrite());
      }
      if (other.getCapacity() != 0) {
        setCapacity(other.getCapacity());
      }
      if (other.hasClassification()) {
        mergeClassification(other.getClassification());
      }
      if (dataBuilder_ == null) {
        if (!other.data_.isEmpty()) {
          if (data_.isEmpty()) {
            data_ = other.data_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureDataIsMutable();
            data_.addAll(other.data_);
          }
          onChanged();
        }
      } else {
        if (!other.data_.isEmpty()) {
          if (dataBuilder_.isEmpty()) {
            dataBuilder_.dispose();
            dataBuilder_ = null;
            data_ = other.data_;
            bitField0_ = (bitField0_ & ~0x00000080);
            dataBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getDataFieldBuilder() : null;
          } else {
            dataBuilder_.addAllMessages(other.data_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              type_ = input.readEnum();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              id_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 32: {
              removable_ = input.readBool();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              readWrite_ = input.readBool();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              capacity_ = input.readUInt32();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 58: {
              input.readMessage(
                  getClassificationFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000040;
              break;
            } // case 58
            case 66: {
              uk.gov.gchq.event_logging.v4.DataComplexType m =
                  input.readMessage(
                      uk.gov.gchq.event_logging.v4.DataComplexType.parser(),
                      extensionRegistry);
              if (dataBuilder_ == null) {
                ensureDataIsMutable();
                data_.add(m);
              } else {
                dataBuilder_.addMessage(m);
              }
              break;
            } // case 66
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int type_ = 0;
    /**
     * <pre>
     * The type of the removable media, e.g. MemoryCard
     * </pre>
     *
     * <code>.event_logging.v4.MediaTypeSimpleType type = 1 [json_name = "type", (.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * The type of the removable media, e.g. MemoryCard
     * </pre>
     *
     * <code>.event_logging.v4.MediaTypeSimpleType type = 1 [json_name = "type", (.buf.validate.field) = { ... }</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      type_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of the removable media, e.g. MemoryCard
     * </pre>
     *
     * <code>.event_logging.v4.MediaTypeSimpleType type = 1 [json_name = "type", (.buf.validate.field) = { ... }</code>
     * @return The type.
     */
    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.MediaTypeSimpleType getType() {
      uk.gov.gchq.event_logging.v4.MediaTypeSimpleType result = uk.gov.gchq.event_logging.v4.MediaTypeSimpleType.forNumber(type_);
      return result == null ? uk.gov.gchq.event_logging.v4.MediaTypeSimpleType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The type of the removable media, e.g. MemoryCard
     * </pre>
     *
     * <code>.event_logging.v4.MediaTypeSimpleType type = 1 [json_name = "type", (.buf.validate.field) = { ... }</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(uk.gov.gchq.event_logging.v4.MediaTypeSimpleType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of the removable media, e.g. MemoryCard
     * </pre>
     *
     * <code>.event_logging.v4.MediaTypeSimpleType type = 1 [json_name = "type", (.buf.validate.field) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object id_ = "";
    /**
     * <pre>
     * The identifier for the removable media. This may be an identifier provided by the media (e.g. the Card Identification or CID of an SD card) or assigned by device monitoring software.
     * </pre>
     *
     * <code>string id = 2 [json_name = "id"];</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The identifier for the removable media. This may be an identifier provided by the media (e.g. the Card Identification or CID of an SD card) or assigned by device monitoring software.
     * </pre>
     *
     * <code>string id = 2 [json_name = "id"];</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The identifier for the removable media. This may be an identifier provided by the media (e.g. the Card Identification or CID of an SD card) or assigned by device monitoring software.
     * </pre>
     *
     * <code>string id = 2 [json_name = "id"];</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      id_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The identifier for the removable media. This may be an identifier provided by the media (e.g. the Card Identification or CID of an SD card) or assigned by device monitoring software.
     * </pre>
     *
     * <code>string id = 2 [json_name = "id"];</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      id_ = getDefaultInstance().getId();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The identifier for the removable media. This may be an identifier provided by the media (e.g. the Card Identification or CID of an SD card) or assigned by device monitoring software.
     * </pre>
     *
     * <code>string id = 2 [json_name = "id"];</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      id_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * A friendly name for the media, possibly assigned by device monitoring system..
     * </pre>
     *
     * <code>string name = 3 [json_name = "name"];</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A friendly name for the media, possibly assigned by device monitoring system..
     * </pre>
     *
     * <code>string name = 3 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A friendly name for the media, possibly assigned by device monitoring system..
     * </pre>
     *
     * <code>string name = 3 [json_name = "name"];</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A friendly name for the media, possibly assigned by device monitoring system..
     * </pre>
     *
     * <code>string name = 3 [json_name = "name"];</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A friendly name for the media, possibly assigned by device monitoring system..
     * </pre>
     *
     * <code>string name = 3 [json_name = "name"];</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private boolean removable_ ;
    /**
     * <pre>
     * Indicates if this media is removable, e.g. USB storage device or soft media such as DVD.
     * </pre>
     *
     * <code>bool removable = 4 [json_name = "removable"];</code>
     * @return The removable.
     */
    @java.lang.Override
    public boolean getRemovable() {
      return removable_;
    }
    /**
     * <pre>
     * Indicates if this media is removable, e.g. USB storage device or soft media such as DVD.
     * </pre>
     *
     * <code>bool removable = 4 [json_name = "removable"];</code>
     * @param value The removable to set.
     * @return This builder for chaining.
     */
    public Builder setRemovable(boolean value) {

      removable_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates if this media is removable, e.g. USB storage device or soft media such as DVD.
     * </pre>
     *
     * <code>bool removable = 4 [json_name = "removable"];</code>
     * @return This builder for chaining.
     */
    public Builder clearRemovable() {
      bitField0_ = (bitField0_ & ~0x00000008);
      removable_ = false;
      onChanged();
      return this;
    }

    private boolean readWrite_ ;
    /**
     * <pre>
     * Indicates if a device has read-write access. Most devices are read-write so this is assumed to be true and can therefore be omitted where this is the case.
     * </pre>
     *
     * <code>bool read_write = 5 [json_name = "readWrite"];</code>
     * @return The readWrite.
     */
    @java.lang.Override
    public boolean getReadWrite() {
      return readWrite_;
    }
    /**
     * <pre>
     * Indicates if a device has read-write access. Most devices are read-write so this is assumed to be true and can therefore be omitted where this is the case.
     * </pre>
     *
     * <code>bool read_write = 5 [json_name = "readWrite"];</code>
     * @param value The readWrite to set.
     * @return This builder for chaining.
     */
    public Builder setReadWrite(boolean value) {

      readWrite_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates if a device has read-write access. Most devices are read-write so this is assumed to be true and can therefore be omitted where this is the case.
     * </pre>
     *
     * <code>bool read_write = 5 [json_name = "readWrite"];</code>
     * @return This builder for chaining.
     */
    public Builder clearReadWrite() {
      bitField0_ = (bitField0_ & ~0x00000010);
      readWrite_ = false;
      onChanged();
      return this;
    }

    private int capacity_ ;
    /**
     * <pre>
     * The capacity of the media in bytes.
     * </pre>
     *
     * <code>uint32 capacity = 6 [json_name = "capacity", (.buf.validate.field) = { ... }</code>
     * @return The capacity.
     */
    @java.lang.Override
    public int getCapacity() {
      return capacity_;
    }
    /**
     * <pre>
     * The capacity of the media in bytes.
     * </pre>
     *
     * <code>uint32 capacity = 6 [json_name = "capacity", (.buf.validate.field) = { ... }</code>
     * @param value The capacity to set.
     * @return This builder for chaining.
     */
    public Builder setCapacity(int value) {

      capacity_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The capacity of the media in bytes.
     * </pre>
     *
     * <code>uint32 capacity = 6 [json_name = "capacity", (.buf.validate.field) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearCapacity() {
      bitField0_ = (bitField0_ & ~0x00000020);
      capacity_ = 0;
      onChanged();
      return this;
    }

    private uk.gov.gchq.event_logging.v4.ClassificationComplexType classification_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.ClassificationComplexType, uk.gov.gchq.event_logging.v4.ClassificationComplexType.Builder, uk.gov.gchq.event_logging.v4.ClassificationComplexTypeOrBuilder> classificationBuilder_;
    /**
     * <pre>
     * The classification of the media.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 7 [json_name = "classification"];</code>
     * @return Whether the classification field is set.
     */
    public boolean hasClassification() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * The classification of the media.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 7 [json_name = "classification"];</code>
     * @return The classification.
     */
    public uk.gov.gchq.event_logging.v4.ClassificationComplexType getClassification() {
      if (classificationBuilder_ == null) {
        return classification_ == null ? uk.gov.gchq.event_logging.v4.ClassificationComplexType.getDefaultInstance() : classification_;
      } else {
        return classificationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The classification of the media.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 7 [json_name = "classification"];</code>
     */
    public Builder setClassification(uk.gov.gchq.event_logging.v4.ClassificationComplexType value) {
      if (classificationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        classification_ = value;
      } else {
        classificationBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The classification of the media.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 7 [json_name = "classification"];</code>
     */
    public Builder setClassification(
        uk.gov.gchq.event_logging.v4.ClassificationComplexType.Builder builderForValue) {
      if (classificationBuilder_ == null) {
        classification_ = builderForValue.build();
      } else {
        classificationBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The classification of the media.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 7 [json_name = "classification"];</code>
     */
    public Builder mergeClassification(uk.gov.gchq.event_logging.v4.ClassificationComplexType value) {
      if (classificationBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0) &&
          classification_ != null &&
          classification_ != uk.gov.gchq.event_logging.v4.ClassificationComplexType.getDefaultInstance()) {
          getClassificationBuilder().mergeFrom(value);
        } else {
          classification_ = value;
        }
      } else {
        classificationBuilder_.mergeFrom(value);
      }
      if (classification_ != null) {
        bitField0_ |= 0x00000040;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The classification of the media.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 7 [json_name = "classification"];</code>
     */
    public Builder clearClassification() {
      bitField0_ = (bitField0_ & ~0x00000040);
      classification_ = null;
      if (classificationBuilder_ != null) {
        classificationBuilder_.dispose();
        classificationBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The classification of the media.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 7 [json_name = "classification"];</code>
     */
    public uk.gov.gchq.event_logging.v4.ClassificationComplexType.Builder getClassificationBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getClassificationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The classification of the media.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 7 [json_name = "classification"];</code>
     */
    public uk.gov.gchq.event_logging.v4.ClassificationComplexTypeOrBuilder getClassificationOrBuilder() {
      if (classificationBuilder_ != null) {
        return classificationBuilder_.getMessageOrBuilder();
      } else {
        return classification_ == null ?
            uk.gov.gchq.event_logging.v4.ClassificationComplexType.getDefaultInstance() : classification_;
      }
    }
    /**
     * <pre>
     * The classification of the media.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 7 [json_name = "classification"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.ClassificationComplexType, uk.gov.gchq.event_logging.v4.ClassificationComplexType.Builder, uk.gov.gchq.event_logging.v4.ClassificationComplexTypeOrBuilder> 
        getClassificationFieldBuilder() {
      if (classificationBuilder_ == null) {
        classificationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.ClassificationComplexType, uk.gov.gchq.event_logging.v4.ClassificationComplexType.Builder, uk.gov.gchq.event_logging.v4.ClassificationComplexTypeOrBuilder>(
                getClassification(),
                getParentForChildren(),
                isClean());
        classification_ = null;
      }
      return classificationBuilder_;
    }

    private java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> data_ =
      java.util.Collections.emptyList();
    private void ensureDataIsMutable() {
      if (!((bitField0_ & 0x00000080) != 0)) {
        data_ = new java.util.ArrayList<uk.gov.gchq.event_logging.v4.DataComplexType>(data_);
        bitField0_ |= 0x00000080;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        uk.gov.gchq.event_logging.v4.DataComplexType, uk.gov.gchq.event_logging.v4.DataComplexType.Builder, uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> dataBuilder_;

    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> getDataList() {
      if (dataBuilder_ == null) {
        return java.util.Collections.unmodifiableList(data_);
      } else {
        return dataBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public int getDataCount() {
      if (dataBuilder_ == null) {
        return data_.size();
      } else {
        return dataBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType getData(int index) {
      if (dataBuilder_ == null) {
        return data_.get(index);
      } else {
        return dataBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder setData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType value) {
      if (dataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataIsMutable();
        data_.set(index, value);
        onChanged();
      } else {
        dataBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder setData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType.Builder builderForValue) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.set(index, builderForValue.build());
        onChanged();
      } else {
        dataBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(uk.gov.gchq.event_logging.v4.DataComplexType value) {
      if (dataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataIsMutable();
        data_.add(value);
        onChanged();
      } else {
        dataBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType value) {
      if (dataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataIsMutable();
        data_.add(index, value);
        onChanged();
      } else {
        dataBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(
        uk.gov.gchq.event_logging.v4.DataComplexType.Builder builderForValue) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.add(builderForValue.build());
        onChanged();
      } else {
        dataBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType.Builder builderForValue) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.add(index, builderForValue.build());
        onChanged();
      } else {
        dataBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addAllData(
        java.lang.Iterable<? extends uk.gov.gchq.event_logging.v4.DataComplexType> values) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, data_);
        onChanged();
      } else {
        dataBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder clearData() {
      if (dataBuilder_ == null) {
        data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
      } else {
        dataBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder removeData(int index) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.remove(index);
        onChanged();
      } else {
        dataBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType.Builder getDataBuilder(
        int index) {
      return getDataFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder getDataOrBuilder(
        int index) {
      if (dataBuilder_ == null) {
        return data_.get(index);  } else {
        return dataBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public java.util.List<? extends uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> 
         getDataOrBuilderList() {
      if (dataBuilder_ != null) {
        return dataBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(data_);
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType.Builder addDataBuilder() {
      return getDataFieldBuilder().addBuilder(
          uk.gov.gchq.event_logging.v4.DataComplexType.getDefaultInstance());
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType.Builder addDataBuilder(
        int index) {
      return getDataFieldBuilder().addBuilder(
          index, uk.gov.gchq.event_logging.v4.DataComplexType.getDefaultInstance());
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType.Builder> 
         getDataBuilderList() {
      return getDataFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        uk.gov.gchq.event_logging.v4.DataComplexType, uk.gov.gchq.event_logging.v4.DataComplexType.Builder, uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> 
        getDataFieldBuilder() {
      if (dataBuilder_ == null) {
        dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            uk.gov.gchq.event_logging.v4.DataComplexType, uk.gov.gchq.event_logging.v4.DataComplexType.Builder, uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder>(
                data_,
                ((bitField0_ & 0x00000080) != 0),
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      return dataBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:event_logging.v4.MediaComplexType)
  }

  // @@protoc_insertion_point(class_scope:event_logging.v4.MediaComplexType)
  private static final uk.gov.gchq.event_logging.v4.MediaComplexType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new uk.gov.gchq.event_logging.v4.MediaComplexType();
  }

  public static uk.gov.gchq.event_logging.v4.MediaComplexType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MediaComplexType>
      PARSER = new com.google.protobuf.AbstractParser<MediaComplexType>() {
    @java.lang.Override
    public MediaComplexType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<MediaComplexType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MediaComplexType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.MediaComplexType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

