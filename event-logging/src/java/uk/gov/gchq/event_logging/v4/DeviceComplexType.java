// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event_logging/v4/device_complex_type.proto

// Protobuf Java Version: 4.26.1
package uk.gov.gchq.event_logging.v4;

/**
 * <pre>
 * Describes a device, e.g. a workstation, server or item of network infrastructure.
 * </pre>
 *
 * Protobuf type {@code event_logging.v4.DeviceComplexType}
 */
public final class DeviceComplexType extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:event_logging.v4.DeviceComplexType)
    DeviceComplexTypeOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      DeviceComplexType.class.getName());
  }
  // Use DeviceComplexType.newBuilder() to construct.
  private DeviceComplexType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private DeviceComplexType() {
    id_ = "";
    name_ = "";
    hostName_ = "";
    ipAddress_ = "";
    macAddress_ = "";
    data_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return uk.gov.gchq.event_logging.v4.DeviceComplexTypeProto.internal_static_event_logging_v4_DeviceComplexType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return uk.gov.gchq.event_logging.v4.DeviceComplexTypeProto.internal_static_event_logging_v4_DeviceComplexType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            uk.gov.gchq.event_logging.v4.DeviceComplexType.class, uk.gov.gchq.event_logging.v4.DeviceComplexType.Builder.class);
  }

  private int bitField0_;
  public static final int ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object id_ = "";
  /**
   * <pre>
   * Identifier used to uniquely identify the device within the organisation's asset register/system. Also, this can be used to identify a device that does not have HostName/IPAddress/MACAddress.
   * </pre>
   *
   * <code>string id = 1 [json_name = "id"];</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Identifier used to uniquely identify the device within the organisation's asset register/system. Also, this can be used to identify a device that does not have HostName/IPAddress/MACAddress.
   * </pre>
   *
   * <code>string id = 1 [json_name = "id"];</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NAME_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * A descriptive name of the device, e.g. 'Sun Fire X4600', 'HP LaserJet 4+'.
   * </pre>
   *
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A descriptive name of the device, e.g. 'Sun Fire X4600', 'HP LaserJet 4+'.
   * </pre>
   *
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CLASSIFICATION_FIELD_NUMBER = 3;
  private uk.gov.gchq.event_logging.v4.ClassificationComplexType classification_;
  /**
   * <pre>
   * The security classification associated with this device.
   * </pre>
   *
   * <code>.event_logging.v4.ClassificationComplexType classification = 3 [json_name = "classification"];</code>
   * @return Whether the classification field is set.
   */
  @java.lang.Override
  public boolean hasClassification() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The security classification associated with this device.
   * </pre>
   *
   * <code>.event_logging.v4.ClassificationComplexType classification = 3 [json_name = "classification"];</code>
   * @return The classification.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.ClassificationComplexType getClassification() {
    return classification_ == null ? uk.gov.gchq.event_logging.v4.ClassificationComplexType.getDefaultInstance() : classification_;
  }
  /**
   * <pre>
   * The security classification associated with this device.
   * </pre>
   *
   * <code>.event_logging.v4.ClassificationComplexType classification = 3 [json_name = "classification"];</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.ClassificationComplexTypeOrBuilder getClassificationOrBuilder() {
    return classification_ == null ? uk.gov.gchq.event_logging.v4.ClassificationComplexType.getDefaultInstance() : classification_;
  }

  public static final int HOST_NAME_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object hostName_ = "";
  /**
   * <pre>
   * The network host name of the device, e.g. someserver.somenet.org.uk. Ideally this field should always contain a fully qualified DNS name of the host.
   * </pre>
   *
   * <code>string host_name = 4 [json_name = "hostName"];</code>
   * @return The hostName.
   */
  @java.lang.Override
  public java.lang.String getHostName() {
    java.lang.Object ref = hostName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      hostName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The network host name of the device, e.g. someserver.somenet.org.uk. Ideally this field should always contain a fully qualified DNS name of the host.
   * </pre>
   *
   * <code>string host_name = 4 [json_name = "hostName"];</code>
   * @return The bytes for hostName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getHostNameBytes() {
    java.lang.Object ref = hostName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      hostName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int IP_ADDRESS_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object ipAddress_ = "";
  /**
   * <pre>
   * The network IP address of the device, e.g. 192.168.0.3. Ideally this should always be supplied.
   * </pre>
   *
   * <code>string ip_address = 5 [json_name = "ipAddress", (.buf.validate.field) = { ... }</code>
   * @return The ipAddress.
   */
  @java.lang.Override
  public java.lang.String getIpAddress() {
    java.lang.Object ref = ipAddress_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      ipAddress_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The network IP address of the device, e.g. 192.168.0.3. Ideally this should always be supplied.
   * </pre>
   *
   * <code>string ip_address = 5 [json_name = "ipAddress", (.buf.validate.field) = { ... }</code>
   * @return The bytes for ipAddress.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIpAddressBytes() {
    java.lang.Object ref = ipAddress_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      ipAddress_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MAC_ADDRESS_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object macAddress_ = "";
  /**
   * <pre>
   * The Media Access Control (MAC) address of the device.
   * </pre>
   *
   * <code>string mac_address = 6 [json_name = "macAddress", (.buf.validate.field) = { ... }</code>
   * @return The macAddress.
   */
  @java.lang.Override
  public java.lang.String getMacAddress() {
    java.lang.Object ref = macAddress_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      macAddress_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The Media Access Control (MAC) address of the device.
   * </pre>
   *
   * <code>string mac_address = 6 [json_name = "macAddress", (.buf.validate.field) = { ... }</code>
   * @return The bytes for macAddress.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMacAddressBytes() {
    java.lang.Object ref = macAddress_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      macAddress_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PORT_FIELD_NUMBER = 7;
  private int port_ = 0;
  /**
   * <pre>
   * The network port that is being used on the device, e.g. 443.
   * </pre>
   *
   * <code>int32 port = 7 [json_name = "port"];</code>
   * @return The port.
   */
  @java.lang.Override
  public int getPort() {
    return port_;
  }

  public static final int LOCATION_FIELD_NUMBER = 8;
  private uk.gov.gchq.event_logging.v4.LocationComplexType location_;
  /**
   * <pre>
   * Describes the geographic location of the device.
   * </pre>
   *
   * <code>.event_logging.v4.LocationComplexType location = 8 [json_name = "location"];</code>
   * @return Whether the location field is set.
   */
  @java.lang.Override
  public boolean hasLocation() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Describes the geographic location of the device.
   * </pre>
   *
   * <code>.event_logging.v4.LocationComplexType location = 8 [json_name = "location"];</code>
   * @return The location.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.LocationComplexType getLocation() {
    return location_ == null ? uk.gov.gchq.event_logging.v4.LocationComplexType.getDefaultInstance() : location_;
  }
  /**
   * <pre>
   * Describes the geographic location of the device.
   * </pre>
   *
   * <code>.event_logging.v4.LocationComplexType location = 8 [json_name = "location"];</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.LocationComplexTypeOrBuilder getLocationOrBuilder() {
    return location_ == null ? uk.gov.gchq.event_logging.v4.LocationComplexType.getDefaultInstance() : location_;
  }

  public static final int DATA_FIELD_NUMBER = 9;
  @SuppressWarnings("serial")
  private java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> data_;
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> getDataList() {
    return data_;
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public java.util.List<? extends uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> 
      getDataOrBuilderList() {
    return data_;
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public int getDataCount() {
    return data_.size();
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.DataComplexType getData(int index) {
    return data_.get(index);
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder getDataOrBuilder(
      int index) {
    return data_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, id_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, name_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(3, getClassification());
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(hostName_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 4, hostName_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(ipAddress_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 5, ipAddress_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(macAddress_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 6, macAddress_);
    }
    if (port_ != 0) {
      output.writeInt32(7, port_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(8, getLocation());
    }
    for (int i = 0; i < data_.size(); i++) {
      output.writeMessage(9, data_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, id_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, name_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getClassification());
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(hostName_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(4, hostName_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(ipAddress_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(5, ipAddress_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(macAddress_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(6, macAddress_);
    }
    if (port_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, port_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getLocation());
    }
    for (int i = 0; i < data_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, data_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof uk.gov.gchq.event_logging.v4.DeviceComplexType)) {
      return super.equals(obj);
    }
    uk.gov.gchq.event_logging.v4.DeviceComplexType other = (uk.gov.gchq.event_logging.v4.DeviceComplexType) obj;

    if (!getId()
        .equals(other.getId())) return false;
    if (!getName()
        .equals(other.getName())) return false;
    if (hasClassification() != other.hasClassification()) return false;
    if (hasClassification()) {
      if (!getClassification()
          .equals(other.getClassification())) return false;
    }
    if (!getHostName()
        .equals(other.getHostName())) return false;
    if (!getIpAddress()
        .equals(other.getIpAddress())) return false;
    if (!getMacAddress()
        .equals(other.getMacAddress())) return false;
    if (getPort()
        != other.getPort()) return false;
    if (hasLocation() != other.hasLocation()) return false;
    if (hasLocation()) {
      if (!getLocation()
          .equals(other.getLocation())) return false;
    }
    if (!getDataList()
        .equals(other.getDataList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (hasClassification()) {
      hash = (37 * hash) + CLASSIFICATION_FIELD_NUMBER;
      hash = (53 * hash) + getClassification().hashCode();
    }
    hash = (37 * hash) + HOST_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getHostName().hashCode();
    hash = (37 * hash) + IP_ADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + getIpAddress().hashCode();
    hash = (37 * hash) + MAC_ADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + getMacAddress().hashCode();
    hash = (37 * hash) + PORT_FIELD_NUMBER;
    hash = (53 * hash) + getPort();
    if (hasLocation()) {
      hash = (37 * hash) + LOCATION_FIELD_NUMBER;
      hash = (53 * hash) + getLocation().hashCode();
    }
    if (getDataCount() > 0) {
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getDataList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static uk.gov.gchq.event_logging.v4.DeviceComplexType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.DeviceComplexType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.DeviceComplexType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.DeviceComplexType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.DeviceComplexType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.DeviceComplexType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.DeviceComplexType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static uk.gov.gchq.event_logging.v4.DeviceComplexType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static uk.gov.gchq.event_logging.v4.DeviceComplexType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static uk.gov.gchq.event_logging.v4.DeviceComplexType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.DeviceComplexType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static uk.gov.gchq.event_logging.v4.DeviceComplexType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(uk.gov.gchq.event_logging.v4.DeviceComplexType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Describes a device, e.g. a workstation, server or item of network infrastructure.
   * </pre>
   *
   * Protobuf type {@code event_logging.v4.DeviceComplexType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:event_logging.v4.DeviceComplexType)
      uk.gov.gchq.event_logging.v4.DeviceComplexTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.gov.gchq.event_logging.v4.DeviceComplexTypeProto.internal_static_event_logging_v4_DeviceComplexType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.gov.gchq.event_logging.v4.DeviceComplexTypeProto.internal_static_event_logging_v4_DeviceComplexType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              uk.gov.gchq.event_logging.v4.DeviceComplexType.class, uk.gov.gchq.event_logging.v4.DeviceComplexType.Builder.class);
    }

    // Construct using uk.gov.gchq.event_logging.v4.DeviceComplexType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getClassificationFieldBuilder();
        getLocationFieldBuilder();
        getDataFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      id_ = "";
      name_ = "";
      classification_ = null;
      if (classificationBuilder_ != null) {
        classificationBuilder_.dispose();
        classificationBuilder_ = null;
      }
      hostName_ = "";
      ipAddress_ = "";
      macAddress_ = "";
      port_ = 0;
      location_ = null;
      if (locationBuilder_ != null) {
        locationBuilder_.dispose();
        locationBuilder_ = null;
      }
      if (dataBuilder_ == null) {
        data_ = java.util.Collections.emptyList();
      } else {
        data_ = null;
        dataBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000100);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return uk.gov.gchq.event_logging.v4.DeviceComplexTypeProto.internal_static_event_logging_v4_DeviceComplexType_descriptor;
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.DeviceComplexType getDefaultInstanceForType() {
      return uk.gov.gchq.event_logging.v4.DeviceComplexType.getDefaultInstance();
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.DeviceComplexType build() {
      uk.gov.gchq.event_logging.v4.DeviceComplexType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.DeviceComplexType buildPartial() {
      uk.gov.gchq.event_logging.v4.DeviceComplexType result = new uk.gov.gchq.event_logging.v4.DeviceComplexType(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(uk.gov.gchq.event_logging.v4.DeviceComplexType result) {
      if (dataBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0)) {
          data_ = java.util.Collections.unmodifiableList(data_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.data_ = data_;
      } else {
        result.data_ = dataBuilder_.build();
      }
    }

    private void buildPartial0(uk.gov.gchq.event_logging.v4.DeviceComplexType result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.id_ = id_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.name_ = name_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.classification_ = classificationBuilder_ == null
            ? classification_
            : classificationBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.hostName_ = hostName_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.ipAddress_ = ipAddress_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.macAddress_ = macAddress_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.port_ = port_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.location_ = locationBuilder_ == null
            ? location_
            : locationBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof uk.gov.gchq.event_logging.v4.DeviceComplexType) {
        return mergeFrom((uk.gov.gchq.event_logging.v4.DeviceComplexType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(uk.gov.gchq.event_logging.v4.DeviceComplexType other) {
      if (other == uk.gov.gchq.event_logging.v4.DeviceComplexType.getDefaultInstance()) return this;
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.hasClassification()) {
        mergeClassification(other.getClassification());
      }
      if (!other.getHostName().isEmpty()) {
        hostName_ = other.hostName_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getIpAddress().isEmpty()) {
        ipAddress_ = other.ipAddress_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (!other.getMacAddress().isEmpty()) {
        macAddress_ = other.macAddress_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      if (other.getPort() != 0) {
        setPort(other.getPort());
      }
      if (other.hasLocation()) {
        mergeLocation(other.getLocation());
      }
      if (dataBuilder_ == null) {
        if (!other.data_.isEmpty()) {
          if (data_.isEmpty()) {
            data_ = other.data_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureDataIsMutable();
            data_.addAll(other.data_);
          }
          onChanged();
        }
      } else {
        if (!other.data_.isEmpty()) {
          if (dataBuilder_.isEmpty()) {
            dataBuilder_.dispose();
            dataBuilder_ = null;
            data_ = other.data_;
            bitField0_ = (bitField0_ & ~0x00000100);
            dataBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getDataFieldBuilder() : null;
          } else {
            dataBuilder_.addAllMessages(other.data_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              id_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getClassificationFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              hostName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              ipAddress_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              macAddress_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 56: {
              port_ = input.readInt32();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 66: {
              input.readMessage(
                  getLocationFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000080;
              break;
            } // case 66
            case 74: {
              uk.gov.gchq.event_logging.v4.DataComplexType m =
                  input.readMessage(
                      uk.gov.gchq.event_logging.v4.DataComplexType.parser(),
                      extensionRegistry);
              if (dataBuilder_ == null) {
                ensureDataIsMutable();
                data_.add(m);
              } else {
                dataBuilder_.addMessage(m);
              }
              break;
            } // case 74
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object id_ = "";
    /**
     * <pre>
     * Identifier used to uniquely identify the device within the organisation's asset register/system. Also, this can be used to identify a device that does not have HostName/IPAddress/MACAddress.
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Identifier used to uniquely identify the device within the organisation's asset register/system. Also, this can be used to identify a device that does not have HostName/IPAddress/MACAddress.
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Identifier used to uniquely identify the device within the organisation's asset register/system. Also, this can be used to identify a device that does not have HostName/IPAddress/MACAddress.
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      id_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Identifier used to uniquely identify the device within the organisation's asset register/system. Also, this can be used to identify a device that does not have HostName/IPAddress/MACAddress.
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      id_ = getDefaultInstance().getId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Identifier used to uniquely identify the device within the organisation's asset register/system. Also, this can be used to identify a device that does not have HostName/IPAddress/MACAddress.
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      id_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * A descriptive name of the device, e.g. 'Sun Fire X4600', 'HP LaserJet 4+'.
     * </pre>
     *
     * <code>string name = 2 [json_name = "name"];</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A descriptive name of the device, e.g. 'Sun Fire X4600', 'HP LaserJet 4+'.
     * </pre>
     *
     * <code>string name = 2 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A descriptive name of the device, e.g. 'Sun Fire X4600', 'HP LaserJet 4+'.
     * </pre>
     *
     * <code>string name = 2 [json_name = "name"];</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A descriptive name of the device, e.g. 'Sun Fire X4600', 'HP LaserJet 4+'.
     * </pre>
     *
     * <code>string name = 2 [json_name = "name"];</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A descriptive name of the device, e.g. 'Sun Fire X4600', 'HP LaserJet 4+'.
     * </pre>
     *
     * <code>string name = 2 [json_name = "name"];</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private uk.gov.gchq.event_logging.v4.ClassificationComplexType classification_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.ClassificationComplexType, uk.gov.gchq.event_logging.v4.ClassificationComplexType.Builder, uk.gov.gchq.event_logging.v4.ClassificationComplexTypeOrBuilder> classificationBuilder_;
    /**
     * <pre>
     * The security classification associated with this device.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 3 [json_name = "classification"];</code>
     * @return Whether the classification field is set.
     */
    public boolean hasClassification() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The security classification associated with this device.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 3 [json_name = "classification"];</code>
     * @return The classification.
     */
    public uk.gov.gchq.event_logging.v4.ClassificationComplexType getClassification() {
      if (classificationBuilder_ == null) {
        return classification_ == null ? uk.gov.gchq.event_logging.v4.ClassificationComplexType.getDefaultInstance() : classification_;
      } else {
        return classificationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The security classification associated with this device.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 3 [json_name = "classification"];</code>
     */
    public Builder setClassification(uk.gov.gchq.event_logging.v4.ClassificationComplexType value) {
      if (classificationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        classification_ = value;
      } else {
        classificationBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The security classification associated with this device.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 3 [json_name = "classification"];</code>
     */
    public Builder setClassification(
        uk.gov.gchq.event_logging.v4.ClassificationComplexType.Builder builderForValue) {
      if (classificationBuilder_ == null) {
        classification_ = builderForValue.build();
      } else {
        classificationBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The security classification associated with this device.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 3 [json_name = "classification"];</code>
     */
    public Builder mergeClassification(uk.gov.gchq.event_logging.v4.ClassificationComplexType value) {
      if (classificationBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          classification_ != null &&
          classification_ != uk.gov.gchq.event_logging.v4.ClassificationComplexType.getDefaultInstance()) {
          getClassificationBuilder().mergeFrom(value);
        } else {
          classification_ = value;
        }
      } else {
        classificationBuilder_.mergeFrom(value);
      }
      if (classification_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The security classification associated with this device.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 3 [json_name = "classification"];</code>
     */
    public Builder clearClassification() {
      bitField0_ = (bitField0_ & ~0x00000004);
      classification_ = null;
      if (classificationBuilder_ != null) {
        classificationBuilder_.dispose();
        classificationBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The security classification associated with this device.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 3 [json_name = "classification"];</code>
     */
    public uk.gov.gchq.event_logging.v4.ClassificationComplexType.Builder getClassificationBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getClassificationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The security classification associated with this device.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 3 [json_name = "classification"];</code>
     */
    public uk.gov.gchq.event_logging.v4.ClassificationComplexTypeOrBuilder getClassificationOrBuilder() {
      if (classificationBuilder_ != null) {
        return classificationBuilder_.getMessageOrBuilder();
      } else {
        return classification_ == null ?
            uk.gov.gchq.event_logging.v4.ClassificationComplexType.getDefaultInstance() : classification_;
      }
    }
    /**
     * <pre>
     * The security classification associated with this device.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 3 [json_name = "classification"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.ClassificationComplexType, uk.gov.gchq.event_logging.v4.ClassificationComplexType.Builder, uk.gov.gchq.event_logging.v4.ClassificationComplexTypeOrBuilder> 
        getClassificationFieldBuilder() {
      if (classificationBuilder_ == null) {
        classificationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.ClassificationComplexType, uk.gov.gchq.event_logging.v4.ClassificationComplexType.Builder, uk.gov.gchq.event_logging.v4.ClassificationComplexTypeOrBuilder>(
                getClassification(),
                getParentForChildren(),
                isClean());
        classification_ = null;
      }
      return classificationBuilder_;
    }

    private java.lang.Object hostName_ = "";
    /**
     * <pre>
     * The network host name of the device, e.g. someserver.somenet.org.uk. Ideally this field should always contain a fully qualified DNS name of the host.
     * </pre>
     *
     * <code>string host_name = 4 [json_name = "hostName"];</code>
     * @return The hostName.
     */
    public java.lang.String getHostName() {
      java.lang.Object ref = hostName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        hostName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The network host name of the device, e.g. someserver.somenet.org.uk. Ideally this field should always contain a fully qualified DNS name of the host.
     * </pre>
     *
     * <code>string host_name = 4 [json_name = "hostName"];</code>
     * @return The bytes for hostName.
     */
    public com.google.protobuf.ByteString
        getHostNameBytes() {
      java.lang.Object ref = hostName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hostName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The network host name of the device, e.g. someserver.somenet.org.uk. Ideally this field should always contain a fully qualified DNS name of the host.
     * </pre>
     *
     * <code>string host_name = 4 [json_name = "hostName"];</code>
     * @param value The hostName to set.
     * @return This builder for chaining.
     */
    public Builder setHostName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      hostName_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The network host name of the device, e.g. someserver.somenet.org.uk. Ideally this field should always contain a fully qualified DNS name of the host.
     * </pre>
     *
     * <code>string host_name = 4 [json_name = "hostName"];</code>
     * @return This builder for chaining.
     */
    public Builder clearHostName() {
      hostName_ = getDefaultInstance().getHostName();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The network host name of the device, e.g. someserver.somenet.org.uk. Ideally this field should always contain a fully qualified DNS name of the host.
     * </pre>
     *
     * <code>string host_name = 4 [json_name = "hostName"];</code>
     * @param value The bytes for hostName to set.
     * @return This builder for chaining.
     */
    public Builder setHostNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      hostName_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object ipAddress_ = "";
    /**
     * <pre>
     * The network IP address of the device, e.g. 192.168.0.3. Ideally this should always be supplied.
     * </pre>
     *
     * <code>string ip_address = 5 [json_name = "ipAddress", (.buf.validate.field) = { ... }</code>
     * @return The ipAddress.
     */
    public java.lang.String getIpAddress() {
      java.lang.Object ref = ipAddress_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ipAddress_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The network IP address of the device, e.g. 192.168.0.3. Ideally this should always be supplied.
     * </pre>
     *
     * <code>string ip_address = 5 [json_name = "ipAddress", (.buf.validate.field) = { ... }</code>
     * @return The bytes for ipAddress.
     */
    public com.google.protobuf.ByteString
        getIpAddressBytes() {
      java.lang.Object ref = ipAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ipAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The network IP address of the device, e.g. 192.168.0.3. Ideally this should always be supplied.
     * </pre>
     *
     * <code>string ip_address = 5 [json_name = "ipAddress", (.buf.validate.field) = { ... }</code>
     * @param value The ipAddress to set.
     * @return This builder for chaining.
     */
    public Builder setIpAddress(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ipAddress_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The network IP address of the device, e.g. 192.168.0.3. Ideally this should always be supplied.
     * </pre>
     *
     * <code>string ip_address = 5 [json_name = "ipAddress", (.buf.validate.field) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearIpAddress() {
      ipAddress_ = getDefaultInstance().getIpAddress();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The network IP address of the device, e.g. 192.168.0.3. Ideally this should always be supplied.
     * </pre>
     *
     * <code>string ip_address = 5 [json_name = "ipAddress", (.buf.validate.field) = { ... }</code>
     * @param value The bytes for ipAddress to set.
     * @return This builder for chaining.
     */
    public Builder setIpAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ipAddress_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private java.lang.Object macAddress_ = "";
    /**
     * <pre>
     * The Media Access Control (MAC) address of the device.
     * </pre>
     *
     * <code>string mac_address = 6 [json_name = "macAddress", (.buf.validate.field) = { ... }</code>
     * @return The macAddress.
     */
    public java.lang.String getMacAddress() {
      java.lang.Object ref = macAddress_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        macAddress_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The Media Access Control (MAC) address of the device.
     * </pre>
     *
     * <code>string mac_address = 6 [json_name = "macAddress", (.buf.validate.field) = { ... }</code>
     * @return The bytes for macAddress.
     */
    public com.google.protobuf.ByteString
        getMacAddressBytes() {
      java.lang.Object ref = macAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        macAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The Media Access Control (MAC) address of the device.
     * </pre>
     *
     * <code>string mac_address = 6 [json_name = "macAddress", (.buf.validate.field) = { ... }</code>
     * @param value The macAddress to set.
     * @return This builder for chaining.
     */
    public Builder setMacAddress(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      macAddress_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Media Access Control (MAC) address of the device.
     * </pre>
     *
     * <code>string mac_address = 6 [json_name = "macAddress", (.buf.validate.field) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearMacAddress() {
      macAddress_ = getDefaultInstance().getMacAddress();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Media Access Control (MAC) address of the device.
     * </pre>
     *
     * <code>string mac_address = 6 [json_name = "macAddress", (.buf.validate.field) = { ... }</code>
     * @param value The bytes for macAddress to set.
     * @return This builder for chaining.
     */
    public Builder setMacAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      macAddress_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    private int port_ ;
    /**
     * <pre>
     * The network port that is being used on the device, e.g. 443.
     * </pre>
     *
     * <code>int32 port = 7 [json_name = "port"];</code>
     * @return The port.
     */
    @java.lang.Override
    public int getPort() {
      return port_;
    }
    /**
     * <pre>
     * The network port that is being used on the device, e.g. 443.
     * </pre>
     *
     * <code>int32 port = 7 [json_name = "port"];</code>
     * @param value The port to set.
     * @return This builder for chaining.
     */
    public Builder setPort(int value) {

      port_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The network port that is being used on the device, e.g. 443.
     * </pre>
     *
     * <code>int32 port = 7 [json_name = "port"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPort() {
      bitField0_ = (bitField0_ & ~0x00000040);
      port_ = 0;
      onChanged();
      return this;
    }

    private uk.gov.gchq.event_logging.v4.LocationComplexType location_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.LocationComplexType, uk.gov.gchq.event_logging.v4.LocationComplexType.Builder, uk.gov.gchq.event_logging.v4.LocationComplexTypeOrBuilder> locationBuilder_;
    /**
     * <pre>
     * Describes the geographic location of the device.
     * </pre>
     *
     * <code>.event_logging.v4.LocationComplexType location = 8 [json_name = "location"];</code>
     * @return Whether the location field is set.
     */
    public boolean hasLocation() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Describes the geographic location of the device.
     * </pre>
     *
     * <code>.event_logging.v4.LocationComplexType location = 8 [json_name = "location"];</code>
     * @return The location.
     */
    public uk.gov.gchq.event_logging.v4.LocationComplexType getLocation() {
      if (locationBuilder_ == null) {
        return location_ == null ? uk.gov.gchq.event_logging.v4.LocationComplexType.getDefaultInstance() : location_;
      } else {
        return locationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Describes the geographic location of the device.
     * </pre>
     *
     * <code>.event_logging.v4.LocationComplexType location = 8 [json_name = "location"];</code>
     */
    public Builder setLocation(uk.gov.gchq.event_logging.v4.LocationComplexType value) {
      if (locationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        location_ = value;
      } else {
        locationBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Describes the geographic location of the device.
     * </pre>
     *
     * <code>.event_logging.v4.LocationComplexType location = 8 [json_name = "location"];</code>
     */
    public Builder setLocation(
        uk.gov.gchq.event_logging.v4.LocationComplexType.Builder builderForValue) {
      if (locationBuilder_ == null) {
        location_ = builderForValue.build();
      } else {
        locationBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Describes the geographic location of the device.
     * </pre>
     *
     * <code>.event_logging.v4.LocationComplexType location = 8 [json_name = "location"];</code>
     */
    public Builder mergeLocation(uk.gov.gchq.event_logging.v4.LocationComplexType value) {
      if (locationBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0) &&
          location_ != null &&
          location_ != uk.gov.gchq.event_logging.v4.LocationComplexType.getDefaultInstance()) {
          getLocationBuilder().mergeFrom(value);
        } else {
          location_ = value;
        }
      } else {
        locationBuilder_.mergeFrom(value);
      }
      if (location_ != null) {
        bitField0_ |= 0x00000080;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Describes the geographic location of the device.
     * </pre>
     *
     * <code>.event_logging.v4.LocationComplexType location = 8 [json_name = "location"];</code>
     */
    public Builder clearLocation() {
      bitField0_ = (bitField0_ & ~0x00000080);
      location_ = null;
      if (locationBuilder_ != null) {
        locationBuilder_.dispose();
        locationBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Describes the geographic location of the device.
     * </pre>
     *
     * <code>.event_logging.v4.LocationComplexType location = 8 [json_name = "location"];</code>
     */
    public uk.gov.gchq.event_logging.v4.LocationComplexType.Builder getLocationBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getLocationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Describes the geographic location of the device.
     * </pre>
     *
     * <code>.event_logging.v4.LocationComplexType location = 8 [json_name = "location"];</code>
     */
    public uk.gov.gchq.event_logging.v4.LocationComplexTypeOrBuilder getLocationOrBuilder() {
      if (locationBuilder_ != null) {
        return locationBuilder_.getMessageOrBuilder();
      } else {
        return location_ == null ?
            uk.gov.gchq.event_logging.v4.LocationComplexType.getDefaultInstance() : location_;
      }
    }
    /**
     * <pre>
     * Describes the geographic location of the device.
     * </pre>
     *
     * <code>.event_logging.v4.LocationComplexType location = 8 [json_name = "location"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.LocationComplexType, uk.gov.gchq.event_logging.v4.LocationComplexType.Builder, uk.gov.gchq.event_logging.v4.LocationComplexTypeOrBuilder> 
        getLocationFieldBuilder() {
      if (locationBuilder_ == null) {
        locationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.LocationComplexType, uk.gov.gchq.event_logging.v4.LocationComplexType.Builder, uk.gov.gchq.event_logging.v4.LocationComplexTypeOrBuilder>(
                getLocation(),
                getParentForChildren(),
                isClean());
        location_ = null;
      }
      return locationBuilder_;
    }

    private java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> data_ =
      java.util.Collections.emptyList();
    private void ensureDataIsMutable() {
      if (!((bitField0_ & 0x00000100) != 0)) {
        data_ = new java.util.ArrayList<uk.gov.gchq.event_logging.v4.DataComplexType>(data_);
        bitField0_ |= 0x00000100;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        uk.gov.gchq.event_logging.v4.DataComplexType, uk.gov.gchq.event_logging.v4.DataComplexType.Builder, uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> dataBuilder_;

    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> getDataList() {
      if (dataBuilder_ == null) {
        return java.util.Collections.unmodifiableList(data_);
      } else {
        return dataBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public int getDataCount() {
      if (dataBuilder_ == null) {
        return data_.size();
      } else {
        return dataBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType getData(int index) {
      if (dataBuilder_ == null) {
        return data_.get(index);
      } else {
        return dataBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder setData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType value) {
      if (dataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataIsMutable();
        data_.set(index, value);
        onChanged();
      } else {
        dataBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder setData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType.Builder builderForValue) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.set(index, builderForValue.build());
        onChanged();
      } else {
        dataBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(uk.gov.gchq.event_logging.v4.DataComplexType value) {
      if (dataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataIsMutable();
        data_.add(value);
        onChanged();
      } else {
        dataBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType value) {
      if (dataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataIsMutable();
        data_.add(index, value);
        onChanged();
      } else {
        dataBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(
        uk.gov.gchq.event_logging.v4.DataComplexType.Builder builderForValue) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.add(builderForValue.build());
        onChanged();
      } else {
        dataBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType.Builder builderForValue) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.add(index, builderForValue.build());
        onChanged();
      } else {
        dataBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addAllData(
        java.lang.Iterable<? extends uk.gov.gchq.event_logging.v4.DataComplexType> values) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, data_);
        onChanged();
      } else {
        dataBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder clearData() {
      if (dataBuilder_ == null) {
        data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
      } else {
        dataBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder removeData(int index) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.remove(index);
        onChanged();
      } else {
        dataBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType.Builder getDataBuilder(
        int index) {
      return getDataFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder getDataOrBuilder(
        int index) {
      if (dataBuilder_ == null) {
        return data_.get(index);  } else {
        return dataBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public java.util.List<? extends uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> 
         getDataOrBuilderList() {
      if (dataBuilder_ != null) {
        return dataBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(data_);
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType.Builder addDataBuilder() {
      return getDataFieldBuilder().addBuilder(
          uk.gov.gchq.event_logging.v4.DataComplexType.getDefaultInstance());
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType.Builder addDataBuilder(
        int index) {
      return getDataFieldBuilder().addBuilder(
          index, uk.gov.gchq.event_logging.v4.DataComplexType.getDefaultInstance());
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType.Builder> 
         getDataBuilderList() {
      return getDataFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        uk.gov.gchq.event_logging.v4.DataComplexType, uk.gov.gchq.event_logging.v4.DataComplexType.Builder, uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> 
        getDataFieldBuilder() {
      if (dataBuilder_ == null) {
        dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            uk.gov.gchq.event_logging.v4.DataComplexType, uk.gov.gchq.event_logging.v4.DataComplexType.Builder, uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder>(
                data_,
                ((bitField0_ & 0x00000100) != 0),
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      return dataBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:event_logging.v4.DeviceComplexType)
  }

  // @@protoc_insertion_point(class_scope:event_logging.v4.DeviceComplexType)
  private static final uk.gov.gchq.event_logging.v4.DeviceComplexType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new uk.gov.gchq.event_logging.v4.DeviceComplexType();
  }

  public static uk.gov.gchq.event_logging.v4.DeviceComplexType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DeviceComplexType>
      PARSER = new com.google.protobuf.AbstractParser<DeviceComplexType>() {
    @java.lang.Override
    public DeviceComplexType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<DeviceComplexType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DeviceComplexType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.DeviceComplexType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

