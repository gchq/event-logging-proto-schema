// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event_logging/v4/query_complex_type.proto

// Protobuf Java Version: 4.26.1
package uk.gov.gchq.event_logging.v4;

/**
 * Protobuf type {@code event_logging.v4.QueryComplexType}
 */
public final class QueryComplexType extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:event_logging.v4.QueryComplexType)
    QueryComplexTypeOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      QueryComplexType.class.getName());
  }
  // Use QueryComplexType.newBuilder() to construct.
  private QueryComplexType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private QueryComplexType() {
    id_ = "";
    name_ = "";
    description_ = "";
    raw_ = "";
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return uk.gov.gchq.event_logging.v4.QueryComplexTypeProto.internal_static_event_logging_v4_QueryComplexType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return uk.gov.gchq.event_logging.v4.QueryComplexTypeProto.internal_static_event_logging_v4_QueryComplexType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            uk.gov.gchq.event_logging.v4.QueryComplexType.class, uk.gov.gchq.event_logging.v4.QueryComplexType.Builder.class);
  }

  public interface AdvancedTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_logging.v4.QueryComplexType.AdvancedType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
     */
    java.util.List<uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType> 
        getChoiceWrapperList();
    /**
     * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
     */
    uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType getChoiceWrapper(int index);
    /**
     * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
     */
    int getChoiceWrapperCount();
    /**
     * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
     */
    java.util.List<? extends uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedTypeOrBuilder> 
        getChoiceWrapperOrBuilderList();
    /**
     * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
     */
    uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedTypeOrBuilder getChoiceWrapperOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A complex boolean tree or operators and terms that describes the query.
   * </pre>
   *
   * Protobuf type {@code event_logging.v4.QueryComplexType.AdvancedType}
   */
  public static final class AdvancedType extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:event_logging.v4.QueryComplexType.AdvancedType)
      AdvancedTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        AdvancedType.class.getName());
    }
    // Use AdvancedType.newBuilder() to construct.
    private AdvancedType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private AdvancedType() {
      choiceWrapper_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.gov.gchq.event_logging.v4.QueryComplexTypeProto.internal_static_event_logging_v4_QueryComplexType_AdvancedType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.gov.gchq.event_logging.v4.QueryComplexTypeProto.internal_static_event_logging_v4_QueryComplexType_AdvancedType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.class, uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.Builder.class);
    }

    public interface ChoiceWrapperAdvancedTypeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Describes a field to search and what to search for using name, condition and value, e.g. Title Contains 'Fox' or Title Equals 'The Quick Brown Fox'.
       * </pre>
       *
       * <code>.event_logging.v4.TermComplexType term = 1 [json_name = "term"];</code>
       * @return Whether the term field is set.
       */
      boolean hasTerm();
      /**
       * <pre>
       * Describes a field to search and what to search for using name, condition and value, e.g. Title Contains 'Fox' or Title Equals 'The Quick Brown Fox'.
       * </pre>
       *
       * <code>.event_logging.v4.TermComplexType term = 1 [json_name = "term"];</code>
       * @return The term.
       */
      uk.gov.gchq.event_logging.v4.TermComplexType getTerm();
      /**
       * <pre>
       * Describes a field to search and what to search for using name, condition and value, e.g. Title Contains 'Fox' or Title Equals 'The Quick Brown Fox'.
       * </pre>
       *
       * <code>.event_logging.v4.TermComplexType term = 1 [json_name = "term"];</code>
       */
      uk.gov.gchq.event_logging.v4.TermComplexTypeOrBuilder getTermOrBuilder();

      /**
       * <pre>
       * All of the enclosed items are to be treated as being AND'd together.
       * </pre>
       *
       * <code>.event_logging.v4.AndComplexType and = 2 [json_name = "and"];</code>
       * @return Whether the and field is set.
       */
      boolean hasAnd();
      /**
       * <pre>
       * All of the enclosed items are to be treated as being AND'd together.
       * </pre>
       *
       * <code>.event_logging.v4.AndComplexType and = 2 [json_name = "and"];</code>
       * @return The and.
       */
      uk.gov.gchq.event_logging.v4.AndComplexType getAnd();
      /**
       * <pre>
       * All of the enclosed items are to be treated as being AND'd together.
       * </pre>
       *
       * <code>.event_logging.v4.AndComplexType and = 2 [json_name = "and"];</code>
       */
      uk.gov.gchq.event_logging.v4.AndComplexTypeOrBuilder getAndOrBuilder();

      /**
       * <pre>
       * All of the enclosed items are to be treated as being OR'd together.
       * </pre>
       *
       * <code>.event_logging.v4.OrComplexType or = 3 [json_name = "or"];</code>
       * @return Whether the or field is set.
       */
      boolean hasOr();
      /**
       * <pre>
       * All of the enclosed items are to be treated as being OR'd together.
       * </pre>
       *
       * <code>.event_logging.v4.OrComplexType or = 3 [json_name = "or"];</code>
       * @return The or.
       */
      uk.gov.gchq.event_logging.v4.OrComplexType getOr();
      /**
       * <pre>
       * All of the enclosed items are to be treated as being OR'd together.
       * </pre>
       *
       * <code>.event_logging.v4.OrComplexType or = 3 [json_name = "or"];</code>
       */
      uk.gov.gchq.event_logging.v4.OrComplexTypeOrBuilder getOrOrBuilder();

      /**
       * <pre>
       * The enclosed structure operators and terms are negated.
       * </pre>
       *
       * <code>.event_logging.v4.NotComplexType not = 4 [json_name = "not"];</code>
       * @return Whether the not field is set.
       */
      boolean hasNot();
      /**
       * <pre>
       * The enclosed structure operators and terms are negated.
       * </pre>
       *
       * <code>.event_logging.v4.NotComplexType not = 4 [json_name = "not"];</code>
       * @return The not.
       */
      uk.gov.gchq.event_logging.v4.NotComplexType getNot();
      /**
       * <pre>
       * The enclosed structure operators and terms are negated.
       * </pre>
       *
       * <code>.event_logging.v4.NotComplexType not = 4 [json_name = "not"];</code>
       */
      uk.gov.gchq.event_logging.v4.NotComplexTypeOrBuilder getNotOrBuilder();
    }
    /**
     * Protobuf type {@code event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType}
     */
    public static final class ChoiceWrapperAdvancedType extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType)
        ChoiceWrapperAdvancedTypeOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 26,
          /* patch= */ 1,
          /* suffix= */ "",
          ChoiceWrapperAdvancedType.class.getName());
      }
      // Use ChoiceWrapperAdvancedType.newBuilder() to construct.
      private ChoiceWrapperAdvancedType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private ChoiceWrapperAdvancedType() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return uk.gov.gchq.event_logging.v4.QueryComplexTypeProto.internal_static_event_logging_v4_QueryComplexType_AdvancedType_ChoiceWrapperAdvancedType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return uk.gov.gchq.event_logging.v4.QueryComplexTypeProto.internal_static_event_logging_v4_QueryComplexType_AdvancedType_ChoiceWrapperAdvancedType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType.class, uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType.Builder.class);
      }

      private int bitField0_;
      public static final int TERM_FIELD_NUMBER = 1;
      private uk.gov.gchq.event_logging.v4.TermComplexType term_;
      /**
       * <pre>
       * Describes a field to search and what to search for using name, condition and value, e.g. Title Contains 'Fox' or Title Equals 'The Quick Brown Fox'.
       * </pre>
       *
       * <code>.event_logging.v4.TermComplexType term = 1 [json_name = "term"];</code>
       * @return Whether the term field is set.
       */
      @java.lang.Override
      public boolean hasTerm() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Describes a field to search and what to search for using name, condition and value, e.g. Title Contains 'Fox' or Title Equals 'The Quick Brown Fox'.
       * </pre>
       *
       * <code>.event_logging.v4.TermComplexType term = 1 [json_name = "term"];</code>
       * @return The term.
       */
      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.TermComplexType getTerm() {
        return term_ == null ? uk.gov.gchq.event_logging.v4.TermComplexType.getDefaultInstance() : term_;
      }
      /**
       * <pre>
       * Describes a field to search and what to search for using name, condition and value, e.g. Title Contains 'Fox' or Title Equals 'The Quick Brown Fox'.
       * </pre>
       *
       * <code>.event_logging.v4.TermComplexType term = 1 [json_name = "term"];</code>
       */
      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.TermComplexTypeOrBuilder getTermOrBuilder() {
        return term_ == null ? uk.gov.gchq.event_logging.v4.TermComplexType.getDefaultInstance() : term_;
      }

      public static final int AND_FIELD_NUMBER = 2;
      private uk.gov.gchq.event_logging.v4.AndComplexType and_;
      /**
       * <pre>
       * All of the enclosed items are to be treated as being AND'd together.
       * </pre>
       *
       * <code>.event_logging.v4.AndComplexType and = 2 [json_name = "and"];</code>
       * @return Whether the and field is set.
       */
      @java.lang.Override
      public boolean hasAnd() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * All of the enclosed items are to be treated as being AND'd together.
       * </pre>
       *
       * <code>.event_logging.v4.AndComplexType and = 2 [json_name = "and"];</code>
       * @return The and.
       */
      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.AndComplexType getAnd() {
        return and_ == null ? uk.gov.gchq.event_logging.v4.AndComplexType.getDefaultInstance() : and_;
      }
      /**
       * <pre>
       * All of the enclosed items are to be treated as being AND'd together.
       * </pre>
       *
       * <code>.event_logging.v4.AndComplexType and = 2 [json_name = "and"];</code>
       */
      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.AndComplexTypeOrBuilder getAndOrBuilder() {
        return and_ == null ? uk.gov.gchq.event_logging.v4.AndComplexType.getDefaultInstance() : and_;
      }

      public static final int OR_FIELD_NUMBER = 3;
      private uk.gov.gchq.event_logging.v4.OrComplexType or_;
      /**
       * <pre>
       * All of the enclosed items are to be treated as being OR'd together.
       * </pre>
       *
       * <code>.event_logging.v4.OrComplexType or = 3 [json_name = "or"];</code>
       * @return Whether the or field is set.
       */
      @java.lang.Override
      public boolean hasOr() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * All of the enclosed items are to be treated as being OR'd together.
       * </pre>
       *
       * <code>.event_logging.v4.OrComplexType or = 3 [json_name = "or"];</code>
       * @return The or.
       */
      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.OrComplexType getOr() {
        return or_ == null ? uk.gov.gchq.event_logging.v4.OrComplexType.getDefaultInstance() : or_;
      }
      /**
       * <pre>
       * All of the enclosed items are to be treated as being OR'd together.
       * </pre>
       *
       * <code>.event_logging.v4.OrComplexType or = 3 [json_name = "or"];</code>
       */
      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.OrComplexTypeOrBuilder getOrOrBuilder() {
        return or_ == null ? uk.gov.gchq.event_logging.v4.OrComplexType.getDefaultInstance() : or_;
      }

      public static final int NOT_FIELD_NUMBER = 4;
      private uk.gov.gchq.event_logging.v4.NotComplexType not_;
      /**
       * <pre>
       * The enclosed structure operators and terms are negated.
       * </pre>
       *
       * <code>.event_logging.v4.NotComplexType not = 4 [json_name = "not"];</code>
       * @return Whether the not field is set.
       */
      @java.lang.Override
      public boolean hasNot() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The enclosed structure operators and terms are negated.
       * </pre>
       *
       * <code>.event_logging.v4.NotComplexType not = 4 [json_name = "not"];</code>
       * @return The not.
       */
      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.NotComplexType getNot() {
        return not_ == null ? uk.gov.gchq.event_logging.v4.NotComplexType.getDefaultInstance() : not_;
      }
      /**
       * <pre>
       * The enclosed structure operators and terms are negated.
       * </pre>
       *
       * <code>.event_logging.v4.NotComplexType not = 4 [json_name = "not"];</code>
       */
      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.NotComplexTypeOrBuilder getNotOrBuilder() {
        return not_ == null ? uk.gov.gchq.event_logging.v4.NotComplexType.getDefaultInstance() : not_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeMessage(1, getTerm());
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeMessage(2, getAnd());
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeMessage(3, getOr());
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeMessage(4, getNot());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getTerm());
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getAnd());
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getOr());
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getNot());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType)) {
          return super.equals(obj);
        }
        uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType other = (uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType) obj;

        if (hasTerm() != other.hasTerm()) return false;
        if (hasTerm()) {
          if (!getTerm()
              .equals(other.getTerm())) return false;
        }
        if (hasAnd() != other.hasAnd()) return false;
        if (hasAnd()) {
          if (!getAnd()
              .equals(other.getAnd())) return false;
        }
        if (hasOr() != other.hasOr()) return false;
        if (hasOr()) {
          if (!getOr()
              .equals(other.getOr())) return false;
        }
        if (hasNot() != other.hasNot()) return false;
        if (hasNot()) {
          if (!getNot()
              .equals(other.getNot())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTerm()) {
          hash = (37 * hash) + TERM_FIELD_NUMBER;
          hash = (53 * hash) + getTerm().hashCode();
        }
        if (hasAnd()) {
          hash = (37 * hash) + AND_FIELD_NUMBER;
          hash = (53 * hash) + getAnd().hashCode();
        }
        if (hasOr()) {
          hash = (37 * hash) + OR_FIELD_NUMBER;
          hash = (53 * hash) + getOr().hashCode();
        }
        if (hasNot()) {
          hash = (37 * hash) + NOT_FIELD_NUMBER;
          hash = (53 * hash) + getNot().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType)
          uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedTypeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return uk.gov.gchq.event_logging.v4.QueryComplexTypeProto.internal_static_event_logging_v4_QueryComplexType_AdvancedType_ChoiceWrapperAdvancedType_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return uk.gov.gchq.event_logging.v4.QueryComplexTypeProto.internal_static_event_logging_v4_QueryComplexType_AdvancedType_ChoiceWrapperAdvancedType_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType.class, uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType.Builder.class);
        }

        // Construct using uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage
                  .alwaysUseFieldBuilders) {
            getTermFieldBuilder();
            getAndFieldBuilder();
            getOrFieldBuilder();
            getNotFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          term_ = null;
          if (termBuilder_ != null) {
            termBuilder_.dispose();
            termBuilder_ = null;
          }
          and_ = null;
          if (andBuilder_ != null) {
            andBuilder_.dispose();
            andBuilder_ = null;
          }
          or_ = null;
          if (orBuilder_ != null) {
            orBuilder_.dispose();
            orBuilder_ = null;
          }
          not_ = null;
          if (notBuilder_ != null) {
            notBuilder_.dispose();
            notBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return uk.gov.gchq.event_logging.v4.QueryComplexTypeProto.internal_static_event_logging_v4_QueryComplexType_AdvancedType_ChoiceWrapperAdvancedType_descriptor;
        }

        @java.lang.Override
        public uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType getDefaultInstanceForType() {
          return uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType.getDefaultInstance();
        }

        @java.lang.Override
        public uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType build() {
          uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType buildPartial() {
          uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType result = new uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.term_ = termBuilder_ == null
                ? term_
                : termBuilder_.build();
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.and_ = andBuilder_ == null
                ? and_
                : andBuilder_.build();
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.or_ = orBuilder_ == null
                ? or_
                : orBuilder_.build();
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.not_ = notBuilder_ == null
                ? not_
                : notBuilder_.build();
            to_bitField0_ |= 0x00000008;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType) {
            return mergeFrom((uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType other) {
          if (other == uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType.getDefaultInstance()) return this;
          if (other.hasTerm()) {
            mergeTerm(other.getTerm());
          }
          if (other.hasAnd()) {
            mergeAnd(other.getAnd());
          }
          if (other.hasOr()) {
            mergeOr(other.getOr());
          }
          if (other.hasNot()) {
            mergeNot(other.getNot());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getTermFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  input.readMessage(
                      getAndFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                case 26: {
                  input.readMessage(
                      getOrFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
                case 34: {
                  input.readMessage(
                      getNotFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000008;
                  break;
                } // case 34
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private uk.gov.gchq.event_logging.v4.TermComplexType term_;
        private com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.TermComplexType, uk.gov.gchq.event_logging.v4.TermComplexType.Builder, uk.gov.gchq.event_logging.v4.TermComplexTypeOrBuilder> termBuilder_;
        /**
         * <pre>
         * Describes a field to search and what to search for using name, condition and value, e.g. Title Contains 'Fox' or Title Equals 'The Quick Brown Fox'.
         * </pre>
         *
         * <code>.event_logging.v4.TermComplexType term = 1 [json_name = "term"];</code>
         * @return Whether the term field is set.
         */
        public boolean hasTerm() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Describes a field to search and what to search for using name, condition and value, e.g. Title Contains 'Fox' or Title Equals 'The Quick Brown Fox'.
         * </pre>
         *
         * <code>.event_logging.v4.TermComplexType term = 1 [json_name = "term"];</code>
         * @return The term.
         */
        public uk.gov.gchq.event_logging.v4.TermComplexType getTerm() {
          if (termBuilder_ == null) {
            return term_ == null ? uk.gov.gchq.event_logging.v4.TermComplexType.getDefaultInstance() : term_;
          } else {
            return termBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Describes a field to search and what to search for using name, condition and value, e.g. Title Contains 'Fox' or Title Equals 'The Quick Brown Fox'.
         * </pre>
         *
         * <code>.event_logging.v4.TermComplexType term = 1 [json_name = "term"];</code>
         */
        public Builder setTerm(uk.gov.gchq.event_logging.v4.TermComplexType value) {
          if (termBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            term_ = value;
          } else {
            termBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Describes a field to search and what to search for using name, condition and value, e.g. Title Contains 'Fox' or Title Equals 'The Quick Brown Fox'.
         * </pre>
         *
         * <code>.event_logging.v4.TermComplexType term = 1 [json_name = "term"];</code>
         */
        public Builder setTerm(
            uk.gov.gchq.event_logging.v4.TermComplexType.Builder builderForValue) {
          if (termBuilder_ == null) {
            term_ = builderForValue.build();
          } else {
            termBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Describes a field to search and what to search for using name, condition and value, e.g. Title Contains 'Fox' or Title Equals 'The Quick Brown Fox'.
         * </pre>
         *
         * <code>.event_logging.v4.TermComplexType term = 1 [json_name = "term"];</code>
         */
        public Builder mergeTerm(uk.gov.gchq.event_logging.v4.TermComplexType value) {
          if (termBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0) &&
              term_ != null &&
              term_ != uk.gov.gchq.event_logging.v4.TermComplexType.getDefaultInstance()) {
              getTermBuilder().mergeFrom(value);
            } else {
              term_ = value;
            }
          } else {
            termBuilder_.mergeFrom(value);
          }
          if (term_ != null) {
            bitField0_ |= 0x00000001;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * Describes a field to search and what to search for using name, condition and value, e.g. Title Contains 'Fox' or Title Equals 'The Quick Brown Fox'.
         * </pre>
         *
         * <code>.event_logging.v4.TermComplexType term = 1 [json_name = "term"];</code>
         */
        public Builder clearTerm() {
          bitField0_ = (bitField0_ & ~0x00000001);
          term_ = null;
          if (termBuilder_ != null) {
            termBuilder_.dispose();
            termBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Describes a field to search and what to search for using name, condition and value, e.g. Title Contains 'Fox' or Title Equals 'The Quick Brown Fox'.
         * </pre>
         *
         * <code>.event_logging.v4.TermComplexType term = 1 [json_name = "term"];</code>
         */
        public uk.gov.gchq.event_logging.v4.TermComplexType.Builder getTermBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getTermFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Describes a field to search and what to search for using name, condition and value, e.g. Title Contains 'Fox' or Title Equals 'The Quick Brown Fox'.
         * </pre>
         *
         * <code>.event_logging.v4.TermComplexType term = 1 [json_name = "term"];</code>
         */
        public uk.gov.gchq.event_logging.v4.TermComplexTypeOrBuilder getTermOrBuilder() {
          if (termBuilder_ != null) {
            return termBuilder_.getMessageOrBuilder();
          } else {
            return term_ == null ?
                uk.gov.gchq.event_logging.v4.TermComplexType.getDefaultInstance() : term_;
          }
        }
        /**
         * <pre>
         * Describes a field to search and what to search for using name, condition and value, e.g. Title Contains 'Fox' or Title Equals 'The Quick Brown Fox'.
         * </pre>
         *
         * <code>.event_logging.v4.TermComplexType term = 1 [json_name = "term"];</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.TermComplexType, uk.gov.gchq.event_logging.v4.TermComplexType.Builder, uk.gov.gchq.event_logging.v4.TermComplexTypeOrBuilder> 
            getTermFieldBuilder() {
          if (termBuilder_ == null) {
            termBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                uk.gov.gchq.event_logging.v4.TermComplexType, uk.gov.gchq.event_logging.v4.TermComplexType.Builder, uk.gov.gchq.event_logging.v4.TermComplexTypeOrBuilder>(
                    getTerm(),
                    getParentForChildren(),
                    isClean());
            term_ = null;
          }
          return termBuilder_;
        }

        private uk.gov.gchq.event_logging.v4.AndComplexType and_;
        private com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.AndComplexType, uk.gov.gchq.event_logging.v4.AndComplexType.Builder, uk.gov.gchq.event_logging.v4.AndComplexTypeOrBuilder> andBuilder_;
        /**
         * <pre>
         * All of the enclosed items are to be treated as being AND'd together.
         * </pre>
         *
         * <code>.event_logging.v4.AndComplexType and = 2 [json_name = "and"];</code>
         * @return Whether the and field is set.
         */
        public boolean hasAnd() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * All of the enclosed items are to be treated as being AND'd together.
         * </pre>
         *
         * <code>.event_logging.v4.AndComplexType and = 2 [json_name = "and"];</code>
         * @return The and.
         */
        public uk.gov.gchq.event_logging.v4.AndComplexType getAnd() {
          if (andBuilder_ == null) {
            return and_ == null ? uk.gov.gchq.event_logging.v4.AndComplexType.getDefaultInstance() : and_;
          } else {
            return andBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * All of the enclosed items are to be treated as being AND'd together.
         * </pre>
         *
         * <code>.event_logging.v4.AndComplexType and = 2 [json_name = "and"];</code>
         */
        public Builder setAnd(uk.gov.gchq.event_logging.v4.AndComplexType value) {
          if (andBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            and_ = value;
          } else {
            andBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * All of the enclosed items are to be treated as being AND'd together.
         * </pre>
         *
         * <code>.event_logging.v4.AndComplexType and = 2 [json_name = "and"];</code>
         */
        public Builder setAnd(
            uk.gov.gchq.event_logging.v4.AndComplexType.Builder builderForValue) {
          if (andBuilder_ == null) {
            and_ = builderForValue.build();
          } else {
            andBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * All of the enclosed items are to be treated as being AND'd together.
         * </pre>
         *
         * <code>.event_logging.v4.AndComplexType and = 2 [json_name = "and"];</code>
         */
        public Builder mergeAnd(uk.gov.gchq.event_logging.v4.AndComplexType value) {
          if (andBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0) &&
              and_ != null &&
              and_ != uk.gov.gchq.event_logging.v4.AndComplexType.getDefaultInstance()) {
              getAndBuilder().mergeFrom(value);
            } else {
              and_ = value;
            }
          } else {
            andBuilder_.mergeFrom(value);
          }
          if (and_ != null) {
            bitField0_ |= 0x00000002;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * All of the enclosed items are to be treated as being AND'd together.
         * </pre>
         *
         * <code>.event_logging.v4.AndComplexType and = 2 [json_name = "and"];</code>
         */
        public Builder clearAnd() {
          bitField0_ = (bitField0_ & ~0x00000002);
          and_ = null;
          if (andBuilder_ != null) {
            andBuilder_.dispose();
            andBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * All of the enclosed items are to be treated as being AND'd together.
         * </pre>
         *
         * <code>.event_logging.v4.AndComplexType and = 2 [json_name = "and"];</code>
         */
        public uk.gov.gchq.event_logging.v4.AndComplexType.Builder getAndBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getAndFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * All of the enclosed items are to be treated as being AND'd together.
         * </pre>
         *
         * <code>.event_logging.v4.AndComplexType and = 2 [json_name = "and"];</code>
         */
        public uk.gov.gchq.event_logging.v4.AndComplexTypeOrBuilder getAndOrBuilder() {
          if (andBuilder_ != null) {
            return andBuilder_.getMessageOrBuilder();
          } else {
            return and_ == null ?
                uk.gov.gchq.event_logging.v4.AndComplexType.getDefaultInstance() : and_;
          }
        }
        /**
         * <pre>
         * All of the enclosed items are to be treated as being AND'd together.
         * </pre>
         *
         * <code>.event_logging.v4.AndComplexType and = 2 [json_name = "and"];</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.AndComplexType, uk.gov.gchq.event_logging.v4.AndComplexType.Builder, uk.gov.gchq.event_logging.v4.AndComplexTypeOrBuilder> 
            getAndFieldBuilder() {
          if (andBuilder_ == null) {
            andBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                uk.gov.gchq.event_logging.v4.AndComplexType, uk.gov.gchq.event_logging.v4.AndComplexType.Builder, uk.gov.gchq.event_logging.v4.AndComplexTypeOrBuilder>(
                    getAnd(),
                    getParentForChildren(),
                    isClean());
            and_ = null;
          }
          return andBuilder_;
        }

        private uk.gov.gchq.event_logging.v4.OrComplexType or_;
        private com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.OrComplexType, uk.gov.gchq.event_logging.v4.OrComplexType.Builder, uk.gov.gchq.event_logging.v4.OrComplexTypeOrBuilder> orBuilder_;
        /**
         * <pre>
         * All of the enclosed items are to be treated as being OR'd together.
         * </pre>
         *
         * <code>.event_logging.v4.OrComplexType or = 3 [json_name = "or"];</code>
         * @return Whether the or field is set.
         */
        public boolean hasOr() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * All of the enclosed items are to be treated as being OR'd together.
         * </pre>
         *
         * <code>.event_logging.v4.OrComplexType or = 3 [json_name = "or"];</code>
         * @return The or.
         */
        public uk.gov.gchq.event_logging.v4.OrComplexType getOr() {
          if (orBuilder_ == null) {
            return or_ == null ? uk.gov.gchq.event_logging.v4.OrComplexType.getDefaultInstance() : or_;
          } else {
            return orBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * All of the enclosed items are to be treated as being OR'd together.
         * </pre>
         *
         * <code>.event_logging.v4.OrComplexType or = 3 [json_name = "or"];</code>
         */
        public Builder setOr(uk.gov.gchq.event_logging.v4.OrComplexType value) {
          if (orBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            or_ = value;
          } else {
            orBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * All of the enclosed items are to be treated as being OR'd together.
         * </pre>
         *
         * <code>.event_logging.v4.OrComplexType or = 3 [json_name = "or"];</code>
         */
        public Builder setOr(
            uk.gov.gchq.event_logging.v4.OrComplexType.Builder builderForValue) {
          if (orBuilder_ == null) {
            or_ = builderForValue.build();
          } else {
            orBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * All of the enclosed items are to be treated as being OR'd together.
         * </pre>
         *
         * <code>.event_logging.v4.OrComplexType or = 3 [json_name = "or"];</code>
         */
        public Builder mergeOr(uk.gov.gchq.event_logging.v4.OrComplexType value) {
          if (orBuilder_ == null) {
            if (((bitField0_ & 0x00000004) != 0) &&
              or_ != null &&
              or_ != uk.gov.gchq.event_logging.v4.OrComplexType.getDefaultInstance()) {
              getOrBuilder().mergeFrom(value);
            } else {
              or_ = value;
            }
          } else {
            orBuilder_.mergeFrom(value);
          }
          if (or_ != null) {
            bitField0_ |= 0x00000004;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * All of the enclosed items are to be treated as being OR'd together.
         * </pre>
         *
         * <code>.event_logging.v4.OrComplexType or = 3 [json_name = "or"];</code>
         */
        public Builder clearOr() {
          bitField0_ = (bitField0_ & ~0x00000004);
          or_ = null;
          if (orBuilder_ != null) {
            orBuilder_.dispose();
            orBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * All of the enclosed items are to be treated as being OR'd together.
         * </pre>
         *
         * <code>.event_logging.v4.OrComplexType or = 3 [json_name = "or"];</code>
         */
        public uk.gov.gchq.event_logging.v4.OrComplexType.Builder getOrBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getOrFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * All of the enclosed items are to be treated as being OR'd together.
         * </pre>
         *
         * <code>.event_logging.v4.OrComplexType or = 3 [json_name = "or"];</code>
         */
        public uk.gov.gchq.event_logging.v4.OrComplexTypeOrBuilder getOrOrBuilder() {
          if (orBuilder_ != null) {
            return orBuilder_.getMessageOrBuilder();
          } else {
            return or_ == null ?
                uk.gov.gchq.event_logging.v4.OrComplexType.getDefaultInstance() : or_;
          }
        }
        /**
         * <pre>
         * All of the enclosed items are to be treated as being OR'd together.
         * </pre>
         *
         * <code>.event_logging.v4.OrComplexType or = 3 [json_name = "or"];</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.OrComplexType, uk.gov.gchq.event_logging.v4.OrComplexType.Builder, uk.gov.gchq.event_logging.v4.OrComplexTypeOrBuilder> 
            getOrFieldBuilder() {
          if (orBuilder_ == null) {
            orBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                uk.gov.gchq.event_logging.v4.OrComplexType, uk.gov.gchq.event_logging.v4.OrComplexType.Builder, uk.gov.gchq.event_logging.v4.OrComplexTypeOrBuilder>(
                    getOr(),
                    getParentForChildren(),
                    isClean());
            or_ = null;
          }
          return orBuilder_;
        }

        private uk.gov.gchq.event_logging.v4.NotComplexType not_;
        private com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.NotComplexType, uk.gov.gchq.event_logging.v4.NotComplexType.Builder, uk.gov.gchq.event_logging.v4.NotComplexTypeOrBuilder> notBuilder_;
        /**
         * <pre>
         * The enclosed structure operators and terms are negated.
         * </pre>
         *
         * <code>.event_logging.v4.NotComplexType not = 4 [json_name = "not"];</code>
         * @return Whether the not field is set.
         */
        public boolean hasNot() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * The enclosed structure operators and terms are negated.
         * </pre>
         *
         * <code>.event_logging.v4.NotComplexType not = 4 [json_name = "not"];</code>
         * @return The not.
         */
        public uk.gov.gchq.event_logging.v4.NotComplexType getNot() {
          if (notBuilder_ == null) {
            return not_ == null ? uk.gov.gchq.event_logging.v4.NotComplexType.getDefaultInstance() : not_;
          } else {
            return notBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The enclosed structure operators and terms are negated.
         * </pre>
         *
         * <code>.event_logging.v4.NotComplexType not = 4 [json_name = "not"];</code>
         */
        public Builder setNot(uk.gov.gchq.event_logging.v4.NotComplexType value) {
          if (notBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            not_ = value;
          } else {
            notBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The enclosed structure operators and terms are negated.
         * </pre>
         *
         * <code>.event_logging.v4.NotComplexType not = 4 [json_name = "not"];</code>
         */
        public Builder setNot(
            uk.gov.gchq.event_logging.v4.NotComplexType.Builder builderForValue) {
          if (notBuilder_ == null) {
            not_ = builderForValue.build();
          } else {
            notBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The enclosed structure operators and terms are negated.
         * </pre>
         *
         * <code>.event_logging.v4.NotComplexType not = 4 [json_name = "not"];</code>
         */
        public Builder mergeNot(uk.gov.gchq.event_logging.v4.NotComplexType value) {
          if (notBuilder_ == null) {
            if (((bitField0_ & 0x00000008) != 0) &&
              not_ != null &&
              not_ != uk.gov.gchq.event_logging.v4.NotComplexType.getDefaultInstance()) {
              getNotBuilder().mergeFrom(value);
            } else {
              not_ = value;
            }
          } else {
            notBuilder_.mergeFrom(value);
          }
          if (not_ != null) {
            bitField0_ |= 0x00000008;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * The enclosed structure operators and terms are negated.
         * </pre>
         *
         * <code>.event_logging.v4.NotComplexType not = 4 [json_name = "not"];</code>
         */
        public Builder clearNot() {
          bitField0_ = (bitField0_ & ~0x00000008);
          not_ = null;
          if (notBuilder_ != null) {
            notBuilder_.dispose();
            notBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The enclosed structure operators and terms are negated.
         * </pre>
         *
         * <code>.event_logging.v4.NotComplexType not = 4 [json_name = "not"];</code>
         */
        public uk.gov.gchq.event_logging.v4.NotComplexType.Builder getNotBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getNotFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The enclosed structure operators and terms are negated.
         * </pre>
         *
         * <code>.event_logging.v4.NotComplexType not = 4 [json_name = "not"];</code>
         */
        public uk.gov.gchq.event_logging.v4.NotComplexTypeOrBuilder getNotOrBuilder() {
          if (notBuilder_ != null) {
            return notBuilder_.getMessageOrBuilder();
          } else {
            return not_ == null ?
                uk.gov.gchq.event_logging.v4.NotComplexType.getDefaultInstance() : not_;
          }
        }
        /**
         * <pre>
         * The enclosed structure operators and terms are negated.
         * </pre>
         *
         * <code>.event_logging.v4.NotComplexType not = 4 [json_name = "not"];</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.NotComplexType, uk.gov.gchq.event_logging.v4.NotComplexType.Builder, uk.gov.gchq.event_logging.v4.NotComplexTypeOrBuilder> 
            getNotFieldBuilder() {
          if (notBuilder_ == null) {
            notBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                uk.gov.gchq.event_logging.v4.NotComplexType, uk.gov.gchq.event_logging.v4.NotComplexType.Builder, uk.gov.gchq.event_logging.v4.NotComplexTypeOrBuilder>(
                    getNot(),
                    getParentForChildren(),
                    isClean());
            not_ = null;
          }
          return notBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType)
      }

      // @@protoc_insertion_point(class_scope:event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType)
      private static final uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType();
      }

      public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ChoiceWrapperAdvancedType>
          PARSER = new com.google.protobuf.AbstractParser<ChoiceWrapperAdvancedType>() {
        @java.lang.Override
        public ChoiceWrapperAdvancedType parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ChoiceWrapperAdvancedType> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ChoiceWrapperAdvancedType> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int CHOICE_WRAPPER_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType> choiceWrapper_;
    /**
     * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType> getChoiceWrapperList() {
      return choiceWrapper_;
    }
    /**
     * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<? extends uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedTypeOrBuilder> 
        getChoiceWrapperOrBuilderList() {
      return choiceWrapper_;
    }
    /**
     * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public int getChoiceWrapperCount() {
      return choiceWrapper_.size();
    }
    /**
     * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType getChoiceWrapper(int index) {
      return choiceWrapper_.get(index);
    }
    /**
     * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedTypeOrBuilder getChoiceWrapperOrBuilder(
        int index) {
      return choiceWrapper_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < choiceWrapper_.size(); i++) {
        output.writeMessage(1, choiceWrapper_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < choiceWrapper_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, choiceWrapper_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType)) {
        return super.equals(obj);
      }
      uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType other = (uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType) obj;

      if (!getChoiceWrapperList()
          .equals(other.getChoiceWrapperList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getChoiceWrapperCount() > 0) {
        hash = (37 * hash) + CHOICE_WRAPPER_FIELD_NUMBER;
        hash = (53 * hash) + getChoiceWrapperList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A complex boolean tree or operators and terms that describes the query.
     * </pre>
     *
     * Protobuf type {@code event_logging.v4.QueryComplexType.AdvancedType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_logging.v4.QueryComplexType.AdvancedType)
        uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return uk.gov.gchq.event_logging.v4.QueryComplexTypeProto.internal_static_event_logging_v4_QueryComplexType_AdvancedType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return uk.gov.gchq.event_logging.v4.QueryComplexTypeProto.internal_static_event_logging_v4_QueryComplexType_AdvancedType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.class, uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.Builder.class);
      }

      // Construct using uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (choiceWrapperBuilder_ == null) {
          choiceWrapper_ = java.util.Collections.emptyList();
        } else {
          choiceWrapper_ = null;
          choiceWrapperBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return uk.gov.gchq.event_logging.v4.QueryComplexTypeProto.internal_static_event_logging_v4_QueryComplexType_AdvancedType_descriptor;
      }

      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType getDefaultInstanceForType() {
        return uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.getDefaultInstance();
      }

      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType build() {
        uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType buildPartial() {
        uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType result = new uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType result) {
        if (choiceWrapperBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            choiceWrapper_ = java.util.Collections.unmodifiableList(choiceWrapper_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.choiceWrapper_ = choiceWrapper_;
        } else {
          result.choiceWrapper_ = choiceWrapperBuilder_.build();
        }
      }

      private void buildPartial0(uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType) {
          return mergeFrom((uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType other) {
        if (other == uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.getDefaultInstance()) return this;
        if (choiceWrapperBuilder_ == null) {
          if (!other.choiceWrapper_.isEmpty()) {
            if (choiceWrapper_.isEmpty()) {
              choiceWrapper_ = other.choiceWrapper_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureChoiceWrapperIsMutable();
              choiceWrapper_.addAll(other.choiceWrapper_);
            }
            onChanged();
          }
        } else {
          if (!other.choiceWrapper_.isEmpty()) {
            if (choiceWrapperBuilder_.isEmpty()) {
              choiceWrapperBuilder_.dispose();
              choiceWrapperBuilder_ = null;
              choiceWrapper_ = other.choiceWrapper_;
              bitField0_ = (bitField0_ & ~0x00000001);
              choiceWrapperBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getChoiceWrapperFieldBuilder() : null;
            } else {
              choiceWrapperBuilder_.addAllMessages(other.choiceWrapper_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType m =
                    input.readMessage(
                        uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType.parser(),
                        extensionRegistry);
                if (choiceWrapperBuilder_ == null) {
                  ensureChoiceWrapperIsMutable();
                  choiceWrapper_.add(m);
                } else {
                  choiceWrapperBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType> choiceWrapper_ =
        java.util.Collections.emptyList();
      private void ensureChoiceWrapperIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          choiceWrapper_ = new java.util.ArrayList<uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType>(choiceWrapper_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType, uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType.Builder, uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedTypeOrBuilder> choiceWrapperBuilder_;

      /**
       * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
       */
      public java.util.List<uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType> getChoiceWrapperList() {
        if (choiceWrapperBuilder_ == null) {
          return java.util.Collections.unmodifiableList(choiceWrapper_);
        } else {
          return choiceWrapperBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
       */
      public int getChoiceWrapperCount() {
        if (choiceWrapperBuilder_ == null) {
          return choiceWrapper_.size();
        } else {
          return choiceWrapperBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
       */
      public uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType getChoiceWrapper(int index) {
        if (choiceWrapperBuilder_ == null) {
          return choiceWrapper_.get(index);
        } else {
          return choiceWrapperBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
       */
      public Builder setChoiceWrapper(
          int index, uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType value) {
        if (choiceWrapperBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChoiceWrapperIsMutable();
          choiceWrapper_.set(index, value);
          onChanged();
        } else {
          choiceWrapperBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
       */
      public Builder setChoiceWrapper(
          int index, uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType.Builder builderForValue) {
        if (choiceWrapperBuilder_ == null) {
          ensureChoiceWrapperIsMutable();
          choiceWrapper_.set(index, builderForValue.build());
          onChanged();
        } else {
          choiceWrapperBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
       */
      public Builder addChoiceWrapper(uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType value) {
        if (choiceWrapperBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChoiceWrapperIsMutable();
          choiceWrapper_.add(value);
          onChanged();
        } else {
          choiceWrapperBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
       */
      public Builder addChoiceWrapper(
          int index, uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType value) {
        if (choiceWrapperBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChoiceWrapperIsMutable();
          choiceWrapper_.add(index, value);
          onChanged();
        } else {
          choiceWrapperBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
       */
      public Builder addChoiceWrapper(
          uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType.Builder builderForValue) {
        if (choiceWrapperBuilder_ == null) {
          ensureChoiceWrapperIsMutable();
          choiceWrapper_.add(builderForValue.build());
          onChanged();
        } else {
          choiceWrapperBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
       */
      public Builder addChoiceWrapper(
          int index, uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType.Builder builderForValue) {
        if (choiceWrapperBuilder_ == null) {
          ensureChoiceWrapperIsMutable();
          choiceWrapper_.add(index, builderForValue.build());
          onChanged();
        } else {
          choiceWrapperBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
       */
      public Builder addAllChoiceWrapper(
          java.lang.Iterable<? extends uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType> values) {
        if (choiceWrapperBuilder_ == null) {
          ensureChoiceWrapperIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, choiceWrapper_);
          onChanged();
        } else {
          choiceWrapperBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
       */
      public Builder clearChoiceWrapper() {
        if (choiceWrapperBuilder_ == null) {
          choiceWrapper_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          choiceWrapperBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
       */
      public Builder removeChoiceWrapper(int index) {
        if (choiceWrapperBuilder_ == null) {
          ensureChoiceWrapperIsMutable();
          choiceWrapper_.remove(index);
          onChanged();
        } else {
          choiceWrapperBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
       */
      public uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType.Builder getChoiceWrapperBuilder(
          int index) {
        return getChoiceWrapperFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
       */
      public uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedTypeOrBuilder getChoiceWrapperOrBuilder(
          int index) {
        if (choiceWrapperBuilder_ == null) {
          return choiceWrapper_.get(index);  } else {
          return choiceWrapperBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
       */
      public java.util.List<? extends uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedTypeOrBuilder> 
           getChoiceWrapperOrBuilderList() {
        if (choiceWrapperBuilder_ != null) {
          return choiceWrapperBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(choiceWrapper_);
        }
      }
      /**
       * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
       */
      public uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType.Builder addChoiceWrapperBuilder() {
        return getChoiceWrapperFieldBuilder().addBuilder(
            uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType.getDefaultInstance());
      }
      /**
       * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
       */
      public uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType.Builder addChoiceWrapperBuilder(
          int index) {
        return getChoiceWrapperFieldBuilder().addBuilder(
            index, uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType.getDefaultInstance());
      }
      /**
       * <code>repeated .event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType choice_wrapper = 1 [json_name = "choiceWrapper", (.buf.validate.field) = { ... }</code>
       */
      public java.util.List<uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType.Builder> 
           getChoiceWrapperBuilderList() {
        return getChoiceWrapperFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType, uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType.Builder, uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedTypeOrBuilder> 
          getChoiceWrapperFieldBuilder() {
        if (choiceWrapperBuilder_ == null) {
          choiceWrapperBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType, uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedType.Builder, uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.ChoiceWrapperAdvancedTypeOrBuilder>(
                  choiceWrapper_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          choiceWrapper_ = null;
        }
        return choiceWrapperBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:event_logging.v4.QueryComplexType.AdvancedType)
    }

    // @@protoc_insertion_point(class_scope:event_logging.v4.QueryComplexType.AdvancedType)
    private static final uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType();
    }

    public static uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AdvancedType>
        PARSER = new com.google.protobuf.AbstractParser<AdvancedType>() {
      @java.lang.Override
      public AdvancedType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AdvancedType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AdvancedType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SimpleTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_logging.v4.QueryComplexType.SimpleType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Values to include in the query results, typically delimited by a comma.
     * </pre>
     *
     * <code>string include = 1 [json_name = "include"];</code>
     * @return The include.
     */
    java.lang.String getInclude();
    /**
     * <pre>
     * Values to include in the query results, typically delimited by a comma.
     * </pre>
     *
     * <code>string include = 1 [json_name = "include"];</code>
     * @return The bytes for include.
     */
    com.google.protobuf.ByteString
        getIncludeBytes();

    /**
     * <pre>
     * Values to exclude in the query results, typically delimited by a comma.
     * </pre>
     *
     * <code>string exclude = 2 [json_name = "exclude"];</code>
     * @return The exclude.
     */
    java.lang.String getExclude();
    /**
     * <pre>
     * Values to exclude in the query results, typically delimited by a comma.
     * </pre>
     *
     * <code>string exclude = 2 [json_name = "exclude"];</code>
     * @return The bytes for exclude.
     */
    com.google.protobuf.ByteString
        getExcludeBytes();
  }
  /**
   * <pre>
   * A simple representation of a query using includes and excludes terms. This is suitable for simple filtered lists, e.g. for a list of names excluding "John,Bob".
   * </pre>
   *
   * Protobuf type {@code event_logging.v4.QueryComplexType.SimpleType}
   */
  public static final class SimpleType extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:event_logging.v4.QueryComplexType.SimpleType)
      SimpleTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        SimpleType.class.getName());
    }
    // Use SimpleType.newBuilder() to construct.
    private SimpleType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private SimpleType() {
      include_ = "";
      exclude_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.gov.gchq.event_logging.v4.QueryComplexTypeProto.internal_static_event_logging_v4_QueryComplexType_SimpleType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.gov.gchq.event_logging.v4.QueryComplexTypeProto.internal_static_event_logging_v4_QueryComplexType_SimpleType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType.class, uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType.Builder.class);
    }

    public static final int INCLUDE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object include_ = "";
    /**
     * <pre>
     * Values to include in the query results, typically delimited by a comma.
     * </pre>
     *
     * <code>string include = 1 [json_name = "include"];</code>
     * @return The include.
     */
    @java.lang.Override
    public java.lang.String getInclude() {
      java.lang.Object ref = include_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        include_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Values to include in the query results, typically delimited by a comma.
     * </pre>
     *
     * <code>string include = 1 [json_name = "include"];</code>
     * @return The bytes for include.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIncludeBytes() {
      java.lang.Object ref = include_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        include_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXCLUDE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object exclude_ = "";
    /**
     * <pre>
     * Values to exclude in the query results, typically delimited by a comma.
     * </pre>
     *
     * <code>string exclude = 2 [json_name = "exclude"];</code>
     * @return The exclude.
     */
    @java.lang.Override
    public java.lang.String getExclude() {
      java.lang.Object ref = exclude_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        exclude_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Values to exclude in the query results, typically delimited by a comma.
     * </pre>
     *
     * <code>string exclude = 2 [json_name = "exclude"];</code>
     * @return The bytes for exclude.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getExcludeBytes() {
      java.lang.Object ref = exclude_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        exclude_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(include_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, include_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(exclude_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, exclude_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(include_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, include_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(exclude_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, exclude_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType)) {
        return super.equals(obj);
      }
      uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType other = (uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType) obj;

      if (!getInclude()
          .equals(other.getInclude())) return false;
      if (!getExclude()
          .equals(other.getExclude())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INCLUDE_FIELD_NUMBER;
      hash = (53 * hash) + getInclude().hashCode();
      hash = (37 * hash) + EXCLUDE_FIELD_NUMBER;
      hash = (53 * hash) + getExclude().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A simple representation of a query using includes and excludes terms. This is suitable for simple filtered lists, e.g. for a list of names excluding "John,Bob".
     * </pre>
     *
     * Protobuf type {@code event_logging.v4.QueryComplexType.SimpleType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_logging.v4.QueryComplexType.SimpleType)
        uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return uk.gov.gchq.event_logging.v4.QueryComplexTypeProto.internal_static_event_logging_v4_QueryComplexType_SimpleType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return uk.gov.gchq.event_logging.v4.QueryComplexTypeProto.internal_static_event_logging_v4_QueryComplexType_SimpleType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType.class, uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType.Builder.class);
      }

      // Construct using uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        include_ = "";
        exclude_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return uk.gov.gchq.event_logging.v4.QueryComplexTypeProto.internal_static_event_logging_v4_QueryComplexType_SimpleType_descriptor;
      }

      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType getDefaultInstanceForType() {
        return uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType.getDefaultInstance();
      }

      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType build() {
        uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType buildPartial() {
        uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType result = new uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.include_ = include_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.exclude_ = exclude_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType) {
          return mergeFrom((uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType other) {
        if (other == uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType.getDefaultInstance()) return this;
        if (!other.getInclude().isEmpty()) {
          include_ = other.include_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getExclude().isEmpty()) {
          exclude_ = other.exclude_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                include_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                exclude_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object include_ = "";
      /**
       * <pre>
       * Values to include in the query results, typically delimited by a comma.
       * </pre>
       *
       * <code>string include = 1 [json_name = "include"];</code>
       * @return The include.
       */
      public java.lang.String getInclude() {
        java.lang.Object ref = include_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          include_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Values to include in the query results, typically delimited by a comma.
       * </pre>
       *
       * <code>string include = 1 [json_name = "include"];</code>
       * @return The bytes for include.
       */
      public com.google.protobuf.ByteString
          getIncludeBytes() {
        java.lang.Object ref = include_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          include_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Values to include in the query results, typically delimited by a comma.
       * </pre>
       *
       * <code>string include = 1 [json_name = "include"];</code>
       * @param value The include to set.
       * @return This builder for chaining.
       */
      public Builder setInclude(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        include_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Values to include in the query results, typically delimited by a comma.
       * </pre>
       *
       * <code>string include = 1 [json_name = "include"];</code>
       * @return This builder for chaining.
       */
      public Builder clearInclude() {
        include_ = getDefaultInstance().getInclude();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Values to include in the query results, typically delimited by a comma.
       * </pre>
       *
       * <code>string include = 1 [json_name = "include"];</code>
       * @param value The bytes for include to set.
       * @return This builder for chaining.
       */
      public Builder setIncludeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        include_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object exclude_ = "";
      /**
       * <pre>
       * Values to exclude in the query results, typically delimited by a comma.
       * </pre>
       *
       * <code>string exclude = 2 [json_name = "exclude"];</code>
       * @return The exclude.
       */
      public java.lang.String getExclude() {
        java.lang.Object ref = exclude_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          exclude_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Values to exclude in the query results, typically delimited by a comma.
       * </pre>
       *
       * <code>string exclude = 2 [json_name = "exclude"];</code>
       * @return The bytes for exclude.
       */
      public com.google.protobuf.ByteString
          getExcludeBytes() {
        java.lang.Object ref = exclude_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          exclude_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Values to exclude in the query results, typically delimited by a comma.
       * </pre>
       *
       * <code>string exclude = 2 [json_name = "exclude"];</code>
       * @param value The exclude to set.
       * @return This builder for chaining.
       */
      public Builder setExclude(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        exclude_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Values to exclude in the query results, typically delimited by a comma.
       * </pre>
       *
       * <code>string exclude = 2 [json_name = "exclude"];</code>
       * @return This builder for chaining.
       */
      public Builder clearExclude() {
        exclude_ = getDefaultInstance().getExclude();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Values to exclude in the query results, typically delimited by a comma.
       * </pre>
       *
       * <code>string exclude = 2 [json_name = "exclude"];</code>
       * @param value The bytes for exclude to set.
       * @return This builder for chaining.
       */
      public Builder setExcludeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        exclude_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:event_logging.v4.QueryComplexType.SimpleType)
    }

    // @@protoc_insertion_point(class_scope:event_logging.v4.QueryComplexType.SimpleType)
    private static final uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType();
    }

    public static uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SimpleType>
        PARSER = new com.google.protobuf.AbstractParser<SimpleType>() {
      @java.lang.Override
      public SimpleType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SimpleType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SimpleType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object id_ = "";
  /**
   * <pre>
   * An identifier to uniquely identify the query that was executed. This may be used to link the execution of a query (i.e. Search/Query/Id) with the results that are persisted and viewed at another time (i.e. View/SearchResults/Query/Id).
   * </pre>
   *
   * <code>string id = 1 [json_name = "id"];</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * An identifier to uniquely identify the query that was executed. This may be used to link the execution of a query (i.e. Search/Query/Id) with the results that are persisted and viewed at another time (i.e. View/SearchResults/Query/Id).
   * </pre>
   *
   * <code>string id = 1 [json_name = "id"];</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NAME_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * The name of the query that was executed. This may be used to link the execution of a query with the results that are persisted and viewed at another time.
   * </pre>
   *
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the query that was executed. This may be used to link the execution of a query with the results that are persisted and viewed at another time.
   * </pre>
   *
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DESCRIPTION_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object description_ = "";
  /**
   * <pre>
   * A human-readable description of what the query is searching for.
   * </pre>
   *
   * <code>string description = 3 [json_name = "description"];</code>
   * @return The description.
   */
  @java.lang.Override
  public java.lang.String getDescription() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      description_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A human-readable description of what the query is searching for.
   * </pre>
   *
   * <code>string description = 3 [json_name = "description"];</code>
   * @return The bytes for description.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDescriptionBytes() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      description_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ADVANCED_FIELD_NUMBER = 4;
  private uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType advanced_;
  /**
   * <pre>
   * A complex boolean tree or operators and terms that describes the query.
   * </pre>
   *
   * <code>.event_logging.v4.QueryComplexType.AdvancedType advanced = 4 [json_name = "advanced"];</code>
   * @return Whether the advanced field is set.
   */
  @java.lang.Override
  public boolean hasAdvanced() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * A complex boolean tree or operators and terms that describes the query.
   * </pre>
   *
   * <code>.event_logging.v4.QueryComplexType.AdvancedType advanced = 4 [json_name = "advanced"];</code>
   * @return The advanced.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType getAdvanced() {
    return advanced_ == null ? uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.getDefaultInstance() : advanced_;
  }
  /**
   * <pre>
   * A complex boolean tree or operators and terms that describes the query.
   * </pre>
   *
   * <code>.event_logging.v4.QueryComplexType.AdvancedType advanced = 4 [json_name = "advanced"];</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedTypeOrBuilder getAdvancedOrBuilder() {
    return advanced_ == null ? uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.getDefaultInstance() : advanced_;
  }

  public static final int SIMPLE_FIELD_NUMBER = 5;
  private uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType simple_;
  /**
   * <pre>
   * A simple representation of a query using includes and excludes terms. This is suitable for simple filtered lists, e.g. for a list of names excluding "John,Bob".
   * </pre>
   *
   * <code>.event_logging.v4.QueryComplexType.SimpleType simple = 5 [json_name = "simple"];</code>
   * @return Whether the simple field is set.
   */
  @java.lang.Override
  public boolean hasSimple() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * A simple representation of a query using includes and excludes terms. This is suitable for simple filtered lists, e.g. for a list of names excluding "John,Bob".
   * </pre>
   *
   * <code>.event_logging.v4.QueryComplexType.SimpleType simple = 5 [json_name = "simple"];</code>
   * @return The simple.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType getSimple() {
    return simple_ == null ? uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType.getDefaultInstance() : simple_;
  }
  /**
   * <pre>
   * A simple representation of a query using includes and excludes terms. This is suitable for simple filtered lists, e.g. for a list of names excluding "John,Bob".
   * </pre>
   *
   * <code>.event_logging.v4.QueryComplexType.SimpleType simple = 5 [json_name = "simple"];</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleTypeOrBuilder getSimpleOrBuilder() {
    return simple_ == null ? uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType.getDefaultInstance() : simple_;
  }

  public static final int RAW_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object raw_ = "";
  /**
   * <pre>
   * The raw query in the query language used by the application executing the query, e.g. SQL, xpath, etc.
   * </pre>
   *
   * <code>string raw = 6 [json_name = "raw"];</code>
   * @return The raw.
   */
  @java.lang.Override
  public java.lang.String getRaw() {
    java.lang.Object ref = raw_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      raw_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The raw query in the query language used by the application executing the query, e.g. SQL, xpath, etc.
   * </pre>
   *
   * <code>string raw = 6 [json_name = "raw"];</code>
   * @return The bytes for raw.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getRawBytes() {
    java.lang.Object ref = raw_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      raw_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, id_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, name_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(description_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 3, description_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(4, getAdvanced());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(5, getSimple());
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(raw_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 6, raw_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, id_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, name_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(description_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(3, description_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getAdvanced());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getSimple());
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(raw_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(6, raw_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof uk.gov.gchq.event_logging.v4.QueryComplexType)) {
      return super.equals(obj);
    }
    uk.gov.gchq.event_logging.v4.QueryComplexType other = (uk.gov.gchq.event_logging.v4.QueryComplexType) obj;

    if (!getId()
        .equals(other.getId())) return false;
    if (!getName()
        .equals(other.getName())) return false;
    if (!getDescription()
        .equals(other.getDescription())) return false;
    if (hasAdvanced() != other.hasAdvanced()) return false;
    if (hasAdvanced()) {
      if (!getAdvanced()
          .equals(other.getAdvanced())) return false;
    }
    if (hasSimple() != other.hasSimple()) return false;
    if (hasSimple()) {
      if (!getSimple()
          .equals(other.getSimple())) return false;
    }
    if (!getRaw()
        .equals(other.getRaw())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
    hash = (53 * hash) + getDescription().hashCode();
    if (hasAdvanced()) {
      hash = (37 * hash) + ADVANCED_FIELD_NUMBER;
      hash = (53 * hash) + getAdvanced().hashCode();
    }
    if (hasSimple()) {
      hash = (37 * hash) + SIMPLE_FIELD_NUMBER;
      hash = (53 * hash) + getSimple().hashCode();
    }
    hash = (37 * hash) + RAW_FIELD_NUMBER;
    hash = (53 * hash) + getRaw().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static uk.gov.gchq.event_logging.v4.QueryComplexType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.QueryComplexType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.QueryComplexType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.QueryComplexType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.QueryComplexType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.QueryComplexType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.QueryComplexType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static uk.gov.gchq.event_logging.v4.QueryComplexType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static uk.gov.gchq.event_logging.v4.QueryComplexType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static uk.gov.gchq.event_logging.v4.QueryComplexType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.QueryComplexType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static uk.gov.gchq.event_logging.v4.QueryComplexType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(uk.gov.gchq.event_logging.v4.QueryComplexType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code event_logging.v4.QueryComplexType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:event_logging.v4.QueryComplexType)
      uk.gov.gchq.event_logging.v4.QueryComplexTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.gov.gchq.event_logging.v4.QueryComplexTypeProto.internal_static_event_logging_v4_QueryComplexType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.gov.gchq.event_logging.v4.QueryComplexTypeProto.internal_static_event_logging_v4_QueryComplexType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              uk.gov.gchq.event_logging.v4.QueryComplexType.class, uk.gov.gchq.event_logging.v4.QueryComplexType.Builder.class);
    }

    // Construct using uk.gov.gchq.event_logging.v4.QueryComplexType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getAdvancedFieldBuilder();
        getSimpleFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      id_ = "";
      name_ = "";
      description_ = "";
      advanced_ = null;
      if (advancedBuilder_ != null) {
        advancedBuilder_.dispose();
        advancedBuilder_ = null;
      }
      simple_ = null;
      if (simpleBuilder_ != null) {
        simpleBuilder_.dispose();
        simpleBuilder_ = null;
      }
      raw_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return uk.gov.gchq.event_logging.v4.QueryComplexTypeProto.internal_static_event_logging_v4_QueryComplexType_descriptor;
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.QueryComplexType getDefaultInstanceForType() {
      return uk.gov.gchq.event_logging.v4.QueryComplexType.getDefaultInstance();
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.QueryComplexType build() {
      uk.gov.gchq.event_logging.v4.QueryComplexType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.QueryComplexType buildPartial() {
      uk.gov.gchq.event_logging.v4.QueryComplexType result = new uk.gov.gchq.event_logging.v4.QueryComplexType(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(uk.gov.gchq.event_logging.v4.QueryComplexType result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.id_ = id_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.description_ = description_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.advanced_ = advancedBuilder_ == null
            ? advanced_
            : advancedBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.simple_ = simpleBuilder_ == null
            ? simple_
            : simpleBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.raw_ = raw_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof uk.gov.gchq.event_logging.v4.QueryComplexType) {
        return mergeFrom((uk.gov.gchq.event_logging.v4.QueryComplexType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(uk.gov.gchq.event_logging.v4.QueryComplexType other) {
      if (other == uk.gov.gchq.event_logging.v4.QueryComplexType.getDefaultInstance()) return this;
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getDescription().isEmpty()) {
        description_ = other.description_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (other.hasAdvanced()) {
        mergeAdvanced(other.getAdvanced());
      }
      if (other.hasSimple()) {
        mergeSimple(other.getSimple());
      }
      if (!other.getRaw().isEmpty()) {
        raw_ = other.raw_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              id_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              description_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getAdvancedFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getSimpleFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              raw_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object id_ = "";
    /**
     * <pre>
     * An identifier to uniquely identify the query that was executed. This may be used to link the execution of a query (i.e. Search/Query/Id) with the results that are persisted and viewed at another time (i.e. View/SearchResults/Query/Id).
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * An identifier to uniquely identify the query that was executed. This may be used to link the execution of a query (i.e. Search/Query/Id) with the results that are persisted and viewed at another time (i.e. View/SearchResults/Query/Id).
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * An identifier to uniquely identify the query that was executed. This may be used to link the execution of a query (i.e. Search/Query/Id) with the results that are persisted and viewed at another time (i.e. View/SearchResults/Query/Id).
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      id_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An identifier to uniquely identify the query that was executed. This may be used to link the execution of a query (i.e. Search/Query/Id) with the results that are persisted and viewed at another time (i.e. View/SearchResults/Query/Id).
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      id_ = getDefaultInstance().getId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An identifier to uniquely identify the query that was executed. This may be used to link the execution of a query (i.e. Search/Query/Id) with the results that are persisted and viewed at another time (i.e. View/SearchResults/Query/Id).
     * </pre>
     *
     * <code>string id = 1 [json_name = "id"];</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      id_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * The name of the query that was executed. This may be used to link the execution of a query with the results that are persisted and viewed at another time.
     * </pre>
     *
     * <code>string name = 2 [json_name = "name"];</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the query that was executed. This may be used to link the execution of a query with the results that are persisted and viewed at another time.
     * </pre>
     *
     * <code>string name = 2 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the query that was executed. This may be used to link the execution of a query with the results that are persisted and viewed at another time.
     * </pre>
     *
     * <code>string name = 2 [json_name = "name"];</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the query that was executed. This may be used to link the execution of a query with the results that are persisted and viewed at another time.
     * </pre>
     *
     * <code>string name = 2 [json_name = "name"];</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the query that was executed. This may be used to link the execution of a query with the results that are persisted and viewed at another time.
     * </pre>
     *
     * <code>string name = 2 [json_name = "name"];</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object description_ = "";
    /**
     * <pre>
     * A human-readable description of what the query is searching for.
     * </pre>
     *
     * <code>string description = 3 [json_name = "description"];</code>
     * @return The description.
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A human-readable description of what the query is searching for.
     * </pre>
     *
     * <code>string description = 3 [json_name = "description"];</code>
     * @return The bytes for description.
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A human-readable description of what the query is searching for.
     * </pre>
     *
     * <code>string description = 3 [json_name = "description"];</code>
     * @param value The description to set.
     * @return This builder for chaining.
     */
    public Builder setDescription(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      description_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A human-readable description of what the query is searching for.
     * </pre>
     *
     * <code>string description = 3 [json_name = "description"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDescription() {
      description_ = getDefaultInstance().getDescription();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A human-readable description of what the query is searching for.
     * </pre>
     *
     * <code>string description = 3 [json_name = "description"];</code>
     * @param value The bytes for description to set.
     * @return This builder for chaining.
     */
    public Builder setDescriptionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      description_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType advanced_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType, uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.Builder, uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedTypeOrBuilder> advancedBuilder_;
    /**
     * <pre>
     * A complex boolean tree or operators and terms that describes the query.
     * </pre>
     *
     * <code>.event_logging.v4.QueryComplexType.AdvancedType advanced = 4 [json_name = "advanced"];</code>
     * @return Whether the advanced field is set.
     */
    public boolean hasAdvanced() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * A complex boolean tree or operators and terms that describes the query.
     * </pre>
     *
     * <code>.event_logging.v4.QueryComplexType.AdvancedType advanced = 4 [json_name = "advanced"];</code>
     * @return The advanced.
     */
    public uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType getAdvanced() {
      if (advancedBuilder_ == null) {
        return advanced_ == null ? uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.getDefaultInstance() : advanced_;
      } else {
        return advancedBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * A complex boolean tree or operators and terms that describes the query.
     * </pre>
     *
     * <code>.event_logging.v4.QueryComplexType.AdvancedType advanced = 4 [json_name = "advanced"];</code>
     */
    public Builder setAdvanced(uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType value) {
      if (advancedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        advanced_ = value;
      } else {
        advancedBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A complex boolean tree or operators and terms that describes the query.
     * </pre>
     *
     * <code>.event_logging.v4.QueryComplexType.AdvancedType advanced = 4 [json_name = "advanced"];</code>
     */
    public Builder setAdvanced(
        uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.Builder builderForValue) {
      if (advancedBuilder_ == null) {
        advanced_ = builderForValue.build();
      } else {
        advancedBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A complex boolean tree or operators and terms that describes the query.
     * </pre>
     *
     * <code>.event_logging.v4.QueryComplexType.AdvancedType advanced = 4 [json_name = "advanced"];</code>
     */
    public Builder mergeAdvanced(uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType value) {
      if (advancedBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          advanced_ != null &&
          advanced_ != uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.getDefaultInstance()) {
          getAdvancedBuilder().mergeFrom(value);
        } else {
          advanced_ = value;
        }
      } else {
        advancedBuilder_.mergeFrom(value);
      }
      if (advanced_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * A complex boolean tree or operators and terms that describes the query.
     * </pre>
     *
     * <code>.event_logging.v4.QueryComplexType.AdvancedType advanced = 4 [json_name = "advanced"];</code>
     */
    public Builder clearAdvanced() {
      bitField0_ = (bitField0_ & ~0x00000008);
      advanced_ = null;
      if (advancedBuilder_ != null) {
        advancedBuilder_.dispose();
        advancedBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A complex boolean tree or operators and terms that describes the query.
     * </pre>
     *
     * <code>.event_logging.v4.QueryComplexType.AdvancedType advanced = 4 [json_name = "advanced"];</code>
     */
    public uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.Builder getAdvancedBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getAdvancedFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A complex boolean tree or operators and terms that describes the query.
     * </pre>
     *
     * <code>.event_logging.v4.QueryComplexType.AdvancedType advanced = 4 [json_name = "advanced"];</code>
     */
    public uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedTypeOrBuilder getAdvancedOrBuilder() {
      if (advancedBuilder_ != null) {
        return advancedBuilder_.getMessageOrBuilder();
      } else {
        return advanced_ == null ?
            uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.getDefaultInstance() : advanced_;
      }
    }
    /**
     * <pre>
     * A complex boolean tree or operators and terms that describes the query.
     * </pre>
     *
     * <code>.event_logging.v4.QueryComplexType.AdvancedType advanced = 4 [json_name = "advanced"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType, uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.Builder, uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedTypeOrBuilder> 
        getAdvancedFieldBuilder() {
      if (advancedBuilder_ == null) {
        advancedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType, uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedType.Builder, uk.gov.gchq.event_logging.v4.QueryComplexType.AdvancedTypeOrBuilder>(
                getAdvanced(),
                getParentForChildren(),
                isClean());
        advanced_ = null;
      }
      return advancedBuilder_;
    }

    private uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType simple_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType, uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType.Builder, uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleTypeOrBuilder> simpleBuilder_;
    /**
     * <pre>
     * A simple representation of a query using includes and excludes terms. This is suitable for simple filtered lists, e.g. for a list of names excluding "John,Bob".
     * </pre>
     *
     * <code>.event_logging.v4.QueryComplexType.SimpleType simple = 5 [json_name = "simple"];</code>
     * @return Whether the simple field is set.
     */
    public boolean hasSimple() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * A simple representation of a query using includes and excludes terms. This is suitable for simple filtered lists, e.g. for a list of names excluding "John,Bob".
     * </pre>
     *
     * <code>.event_logging.v4.QueryComplexType.SimpleType simple = 5 [json_name = "simple"];</code>
     * @return The simple.
     */
    public uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType getSimple() {
      if (simpleBuilder_ == null) {
        return simple_ == null ? uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType.getDefaultInstance() : simple_;
      } else {
        return simpleBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * A simple representation of a query using includes and excludes terms. This is suitable for simple filtered lists, e.g. for a list of names excluding "John,Bob".
     * </pre>
     *
     * <code>.event_logging.v4.QueryComplexType.SimpleType simple = 5 [json_name = "simple"];</code>
     */
    public Builder setSimple(uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType value) {
      if (simpleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        simple_ = value;
      } else {
        simpleBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A simple representation of a query using includes and excludes terms. This is suitable for simple filtered lists, e.g. for a list of names excluding "John,Bob".
     * </pre>
     *
     * <code>.event_logging.v4.QueryComplexType.SimpleType simple = 5 [json_name = "simple"];</code>
     */
    public Builder setSimple(
        uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType.Builder builderForValue) {
      if (simpleBuilder_ == null) {
        simple_ = builderForValue.build();
      } else {
        simpleBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A simple representation of a query using includes and excludes terms. This is suitable for simple filtered lists, e.g. for a list of names excluding "John,Bob".
     * </pre>
     *
     * <code>.event_logging.v4.QueryComplexType.SimpleType simple = 5 [json_name = "simple"];</code>
     */
    public Builder mergeSimple(uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType value) {
      if (simpleBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          simple_ != null &&
          simple_ != uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType.getDefaultInstance()) {
          getSimpleBuilder().mergeFrom(value);
        } else {
          simple_ = value;
        }
      } else {
        simpleBuilder_.mergeFrom(value);
      }
      if (simple_ != null) {
        bitField0_ |= 0x00000010;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * A simple representation of a query using includes and excludes terms. This is suitable for simple filtered lists, e.g. for a list of names excluding "John,Bob".
     * </pre>
     *
     * <code>.event_logging.v4.QueryComplexType.SimpleType simple = 5 [json_name = "simple"];</code>
     */
    public Builder clearSimple() {
      bitField0_ = (bitField0_ & ~0x00000010);
      simple_ = null;
      if (simpleBuilder_ != null) {
        simpleBuilder_.dispose();
        simpleBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A simple representation of a query using includes and excludes terms. This is suitable for simple filtered lists, e.g. for a list of names excluding "John,Bob".
     * </pre>
     *
     * <code>.event_logging.v4.QueryComplexType.SimpleType simple = 5 [json_name = "simple"];</code>
     */
    public uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType.Builder getSimpleBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getSimpleFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A simple representation of a query using includes and excludes terms. This is suitable for simple filtered lists, e.g. for a list of names excluding "John,Bob".
     * </pre>
     *
     * <code>.event_logging.v4.QueryComplexType.SimpleType simple = 5 [json_name = "simple"];</code>
     */
    public uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleTypeOrBuilder getSimpleOrBuilder() {
      if (simpleBuilder_ != null) {
        return simpleBuilder_.getMessageOrBuilder();
      } else {
        return simple_ == null ?
            uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType.getDefaultInstance() : simple_;
      }
    }
    /**
     * <pre>
     * A simple representation of a query using includes and excludes terms. This is suitable for simple filtered lists, e.g. for a list of names excluding "John,Bob".
     * </pre>
     *
     * <code>.event_logging.v4.QueryComplexType.SimpleType simple = 5 [json_name = "simple"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType, uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType.Builder, uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleTypeOrBuilder> 
        getSimpleFieldBuilder() {
      if (simpleBuilder_ == null) {
        simpleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType, uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleType.Builder, uk.gov.gchq.event_logging.v4.QueryComplexType.SimpleTypeOrBuilder>(
                getSimple(),
                getParentForChildren(),
                isClean());
        simple_ = null;
      }
      return simpleBuilder_;
    }

    private java.lang.Object raw_ = "";
    /**
     * <pre>
     * The raw query in the query language used by the application executing the query, e.g. SQL, xpath, etc.
     * </pre>
     *
     * <code>string raw = 6 [json_name = "raw"];</code>
     * @return The raw.
     */
    public java.lang.String getRaw() {
      java.lang.Object ref = raw_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        raw_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The raw query in the query language used by the application executing the query, e.g. SQL, xpath, etc.
     * </pre>
     *
     * <code>string raw = 6 [json_name = "raw"];</code>
     * @return The bytes for raw.
     */
    public com.google.protobuf.ByteString
        getRawBytes() {
      java.lang.Object ref = raw_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        raw_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The raw query in the query language used by the application executing the query, e.g. SQL, xpath, etc.
     * </pre>
     *
     * <code>string raw = 6 [json_name = "raw"];</code>
     * @param value The raw to set.
     * @return This builder for chaining.
     */
    public Builder setRaw(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      raw_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The raw query in the query language used by the application executing the query, e.g. SQL, xpath, etc.
     * </pre>
     *
     * <code>string raw = 6 [json_name = "raw"];</code>
     * @return This builder for chaining.
     */
    public Builder clearRaw() {
      raw_ = getDefaultInstance().getRaw();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The raw query in the query language used by the application executing the query, e.g. SQL, xpath, etc.
     * </pre>
     *
     * <code>string raw = 6 [json_name = "raw"];</code>
     * @param value The bytes for raw to set.
     * @return This builder for chaining.
     */
    public Builder setRawBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      raw_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:event_logging.v4.QueryComplexType)
  }

  // @@protoc_insertion_point(class_scope:event_logging.v4.QueryComplexType)
  private static final uk.gov.gchq.event_logging.v4.QueryComplexType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new uk.gov.gchq.event_logging.v4.QueryComplexType();
  }

  public static uk.gov.gchq.event_logging.v4.QueryComplexType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<QueryComplexType>
      PARSER = new com.google.protobuf.AbstractParser<QueryComplexType>() {
    @java.lang.Override
    public QueryComplexType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<QueryComplexType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<QueryComplexType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.QueryComplexType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

