// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event_logging/v4/hardware_complex_type.proto

// Protobuf Java Version: 4.26.1
package uk.gov.gchq.event_logging.v4;

/**
 * <pre>
 * Used to describe a hardware item that may be added or removed from a system.
 * </pre>
 *
 * Protobuf type {@code event_logging.v4.HardwareComplexType}
 */
public final class HardwareComplexType extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:event_logging.v4.HardwareComplexType)
    HardwareComplexTypeOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      HardwareComplexType.class.getName());
  }
  // Use HardwareComplexType.newBuilder() to construct.
  private HardwareComplexType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private HardwareComplexType() {
    type_ = 0;
    id_ = "";
    name_ = "";
    model_ = "";
    manufacturer_ = "";
    data_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return uk.gov.gchq.event_logging.v4.HardwareComplexTypeProto.internal_static_event_logging_v4_HardwareComplexType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return uk.gov.gchq.event_logging.v4.HardwareComplexTypeProto.internal_static_event_logging_v4_HardwareComplexType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            uk.gov.gchq.event_logging.v4.HardwareComplexType.class, uk.gov.gchq.event_logging.v4.HardwareComplexType.Builder.class);
  }

  public static final int TYPE_FIELD_NUMBER = 1;
  private int type_ = 0;
  /**
   * <pre>
   * The type of hardware, e.g. hard disk drive.
   * </pre>
   *
   * <code>.event_logging.v4.HardwareTypeSimpleType type = 1 [json_name = "type", (.buf.validate.field) = { ... }</code>
   * @return The enum numeric value on the wire for type.
   */
  @java.lang.Override public int getTypeValue() {
    return type_;
  }
  /**
   * <pre>
   * The type of hardware, e.g. hard disk drive.
   * </pre>
   *
   * <code>.event_logging.v4.HardwareTypeSimpleType type = 1 [json_name = "type", (.buf.validate.field) = { ... }</code>
   * @return The type.
   */
  @java.lang.Override public uk.gov.gchq.event_logging.v4.HardwareTypeSimpleType getType() {
    uk.gov.gchq.event_logging.v4.HardwareTypeSimpleType result = uk.gov.gchq.event_logging.v4.HardwareTypeSimpleType.forNumber(type_);
    return result == null ? uk.gov.gchq.event_logging.v4.HardwareTypeSimpleType.UNRECOGNIZED : result;
  }

  public static final int ID_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object id_ = "";
  /**
   * <pre>
   * A unique identifier for the piece of hardware, e.g. an asset number.
   * </pre>
   *
   * <code>string id = 2 [json_name = "id"];</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A unique identifier for the piece of hardware, e.g. an asset number.
   * </pre>
   *
   * <code>string id = 2 [json_name = "id"];</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NAME_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * A friendly name for the hardware, e.g. a name that has been defined in an asset management or device monitoring system.
   * </pre>
   *
   * <code>string name = 3 [json_name = "name"];</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A friendly name for the hardware, e.g. a name that has been defined in an asset management or device monitoring system.
   * </pre>
   *
   * <code>string name = 3 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MODEL_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object model_ = "";
  /**
   * <pre>
   * The model name as defined by the manufacturer.
   * </pre>
   *
   * <code>string model = 4 [json_name = "model"];</code>
   * @return The model.
   */
  @java.lang.Override
  public java.lang.String getModel() {
    java.lang.Object ref = model_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      model_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The model name as defined by the manufacturer.
   * </pre>
   *
   * <code>string model = 4 [json_name = "model"];</code>
   * @return The bytes for model.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getModelBytes() {
    java.lang.Object ref = model_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      model_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MANUFACTURER_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object manufacturer_ = "";
  /**
   * <pre>
   * The manufacturer of the piece of hardware.
   * </pre>
   *
   * <code>string manufacturer = 5 [json_name = "manufacturer"];</code>
   * @return The manufacturer.
   */
  @java.lang.Override
  public java.lang.String getManufacturer() {
    java.lang.Object ref = manufacturer_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      manufacturer_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The manufacturer of the piece of hardware.
   * </pre>
   *
   * <code>string manufacturer = 5 [json_name = "manufacturer"];</code>
   * @return The bytes for manufacturer.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getManufacturerBytes() {
    java.lang.Object ref = manufacturer_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      manufacturer_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CAPACITY_FIELD_NUMBER = 6;
  private int capacity_ = 0;
  /**
   * <pre>
   * The capacity of the device in bytes.
   * </pre>
   *
   * <code>uint32 capacity = 6 [json_name = "capacity", (.buf.validate.field) = { ... }</code>
   * @return The capacity.
   */
  @java.lang.Override
  public int getCapacity() {
    return capacity_;
  }

  public static final int DATA_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> data_;
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 7 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> getDataList() {
    return data_;
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 7 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public java.util.List<? extends uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> 
      getDataOrBuilderList() {
    return data_;
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 7 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public int getDataCount() {
    return data_.size();
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 7 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.DataComplexType getData(int index) {
    return data_.get(index);
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 7 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder getDataOrBuilder(
      int index) {
    return data_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (type_ != uk.gov.gchq.event_logging.v4.HardwareTypeSimpleType.HARDWARE_TYPE_SIMPLE_TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(1, type_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, id_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 3, name_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(model_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 4, model_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(manufacturer_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 5, manufacturer_);
    }
    if (capacity_ != 0) {
      output.writeUInt32(6, capacity_);
    }
    for (int i = 0; i < data_.size(); i++) {
      output.writeMessage(7, data_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (type_ != uk.gov.gchq.event_logging.v4.HardwareTypeSimpleType.HARDWARE_TYPE_SIMPLE_TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, type_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, id_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(3, name_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(model_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(4, model_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(manufacturer_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(5, manufacturer_);
    }
    if (capacity_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(6, capacity_);
    }
    for (int i = 0; i < data_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, data_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof uk.gov.gchq.event_logging.v4.HardwareComplexType)) {
      return super.equals(obj);
    }
    uk.gov.gchq.event_logging.v4.HardwareComplexType other = (uk.gov.gchq.event_logging.v4.HardwareComplexType) obj;

    if (type_ != other.type_) return false;
    if (!getId()
        .equals(other.getId())) return false;
    if (!getName()
        .equals(other.getName())) return false;
    if (!getModel()
        .equals(other.getModel())) return false;
    if (!getManufacturer()
        .equals(other.getManufacturer())) return false;
    if (getCapacity()
        != other.getCapacity()) return false;
    if (!getDataList()
        .equals(other.getDataList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + MODEL_FIELD_NUMBER;
    hash = (53 * hash) + getModel().hashCode();
    hash = (37 * hash) + MANUFACTURER_FIELD_NUMBER;
    hash = (53 * hash) + getManufacturer().hashCode();
    hash = (37 * hash) + CAPACITY_FIELD_NUMBER;
    hash = (53 * hash) + getCapacity();
    if (getDataCount() > 0) {
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getDataList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static uk.gov.gchq.event_logging.v4.HardwareComplexType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.HardwareComplexType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.HardwareComplexType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.HardwareComplexType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.HardwareComplexType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.HardwareComplexType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.HardwareComplexType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static uk.gov.gchq.event_logging.v4.HardwareComplexType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static uk.gov.gchq.event_logging.v4.HardwareComplexType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static uk.gov.gchq.event_logging.v4.HardwareComplexType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.HardwareComplexType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static uk.gov.gchq.event_logging.v4.HardwareComplexType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(uk.gov.gchq.event_logging.v4.HardwareComplexType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Used to describe a hardware item that may be added or removed from a system.
   * </pre>
   *
   * Protobuf type {@code event_logging.v4.HardwareComplexType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:event_logging.v4.HardwareComplexType)
      uk.gov.gchq.event_logging.v4.HardwareComplexTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.gov.gchq.event_logging.v4.HardwareComplexTypeProto.internal_static_event_logging_v4_HardwareComplexType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.gov.gchq.event_logging.v4.HardwareComplexTypeProto.internal_static_event_logging_v4_HardwareComplexType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              uk.gov.gchq.event_logging.v4.HardwareComplexType.class, uk.gov.gchq.event_logging.v4.HardwareComplexType.Builder.class);
    }

    // Construct using uk.gov.gchq.event_logging.v4.HardwareComplexType.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      type_ = 0;
      id_ = "";
      name_ = "";
      model_ = "";
      manufacturer_ = "";
      capacity_ = 0;
      if (dataBuilder_ == null) {
        data_ = java.util.Collections.emptyList();
      } else {
        data_ = null;
        dataBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return uk.gov.gchq.event_logging.v4.HardwareComplexTypeProto.internal_static_event_logging_v4_HardwareComplexType_descriptor;
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.HardwareComplexType getDefaultInstanceForType() {
      return uk.gov.gchq.event_logging.v4.HardwareComplexType.getDefaultInstance();
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.HardwareComplexType build() {
      uk.gov.gchq.event_logging.v4.HardwareComplexType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.HardwareComplexType buildPartial() {
      uk.gov.gchq.event_logging.v4.HardwareComplexType result = new uk.gov.gchq.event_logging.v4.HardwareComplexType(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(uk.gov.gchq.event_logging.v4.HardwareComplexType result) {
      if (dataBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0)) {
          data_ = java.util.Collections.unmodifiableList(data_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.data_ = data_;
      } else {
        result.data_ = dataBuilder_.build();
      }
    }

    private void buildPartial0(uk.gov.gchq.event_logging.v4.HardwareComplexType result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.type_ = type_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.id_ = id_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.model_ = model_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.manufacturer_ = manufacturer_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.capacity_ = capacity_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof uk.gov.gchq.event_logging.v4.HardwareComplexType) {
        return mergeFrom((uk.gov.gchq.event_logging.v4.HardwareComplexType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(uk.gov.gchq.event_logging.v4.HardwareComplexType other) {
      if (other == uk.gov.gchq.event_logging.v4.HardwareComplexType.getDefaultInstance()) return this;
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getModel().isEmpty()) {
        model_ = other.model_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getManufacturer().isEmpty()) {
        manufacturer_ = other.manufacturer_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (other.getCapacity() != 0) {
        setCapacity(other.getCapacity());
      }
      if (dataBuilder_ == null) {
        if (!other.data_.isEmpty()) {
          if (data_.isEmpty()) {
            data_ = other.data_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureDataIsMutable();
            data_.addAll(other.data_);
          }
          onChanged();
        }
      } else {
        if (!other.data_.isEmpty()) {
          if (dataBuilder_.isEmpty()) {
            dataBuilder_.dispose();
            dataBuilder_ = null;
            data_ = other.data_;
            bitField0_ = (bitField0_ & ~0x00000040);
            dataBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getDataFieldBuilder() : null;
          } else {
            dataBuilder_.addAllMessages(other.data_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              type_ = input.readEnum();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              id_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              model_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              manufacturer_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 48: {
              capacity_ = input.readUInt32();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 58: {
              uk.gov.gchq.event_logging.v4.DataComplexType m =
                  input.readMessage(
                      uk.gov.gchq.event_logging.v4.DataComplexType.parser(),
                      extensionRegistry);
              if (dataBuilder_ == null) {
                ensureDataIsMutable();
                data_.add(m);
              } else {
                dataBuilder_.addMessage(m);
              }
              break;
            } // case 58
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int type_ = 0;
    /**
     * <pre>
     * The type of hardware, e.g. hard disk drive.
     * </pre>
     *
     * <code>.event_logging.v4.HardwareTypeSimpleType type = 1 [json_name = "type", (.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * The type of hardware, e.g. hard disk drive.
     * </pre>
     *
     * <code>.event_logging.v4.HardwareTypeSimpleType type = 1 [json_name = "type", (.buf.validate.field) = { ... }</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      type_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of hardware, e.g. hard disk drive.
     * </pre>
     *
     * <code>.event_logging.v4.HardwareTypeSimpleType type = 1 [json_name = "type", (.buf.validate.field) = { ... }</code>
     * @return The type.
     */
    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.HardwareTypeSimpleType getType() {
      uk.gov.gchq.event_logging.v4.HardwareTypeSimpleType result = uk.gov.gchq.event_logging.v4.HardwareTypeSimpleType.forNumber(type_);
      return result == null ? uk.gov.gchq.event_logging.v4.HardwareTypeSimpleType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The type of hardware, e.g. hard disk drive.
     * </pre>
     *
     * <code>.event_logging.v4.HardwareTypeSimpleType type = 1 [json_name = "type", (.buf.validate.field) = { ... }</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(uk.gov.gchq.event_logging.v4.HardwareTypeSimpleType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of hardware, e.g. hard disk drive.
     * </pre>
     *
     * <code>.event_logging.v4.HardwareTypeSimpleType type = 1 [json_name = "type", (.buf.validate.field) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object id_ = "";
    /**
     * <pre>
     * A unique identifier for the piece of hardware, e.g. an asset number.
     * </pre>
     *
     * <code>string id = 2 [json_name = "id"];</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A unique identifier for the piece of hardware, e.g. an asset number.
     * </pre>
     *
     * <code>string id = 2 [json_name = "id"];</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A unique identifier for the piece of hardware, e.g. an asset number.
     * </pre>
     *
     * <code>string id = 2 [json_name = "id"];</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      id_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A unique identifier for the piece of hardware, e.g. an asset number.
     * </pre>
     *
     * <code>string id = 2 [json_name = "id"];</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      id_ = getDefaultInstance().getId();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A unique identifier for the piece of hardware, e.g. an asset number.
     * </pre>
     *
     * <code>string id = 2 [json_name = "id"];</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      id_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * A friendly name for the hardware, e.g. a name that has been defined in an asset management or device monitoring system.
     * </pre>
     *
     * <code>string name = 3 [json_name = "name"];</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A friendly name for the hardware, e.g. a name that has been defined in an asset management or device monitoring system.
     * </pre>
     *
     * <code>string name = 3 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A friendly name for the hardware, e.g. a name that has been defined in an asset management or device monitoring system.
     * </pre>
     *
     * <code>string name = 3 [json_name = "name"];</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A friendly name for the hardware, e.g. a name that has been defined in an asset management or device monitoring system.
     * </pre>
     *
     * <code>string name = 3 [json_name = "name"];</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A friendly name for the hardware, e.g. a name that has been defined in an asset management or device monitoring system.
     * </pre>
     *
     * <code>string name = 3 [json_name = "name"];</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object model_ = "";
    /**
     * <pre>
     * The model name as defined by the manufacturer.
     * </pre>
     *
     * <code>string model = 4 [json_name = "model"];</code>
     * @return The model.
     */
    public java.lang.String getModel() {
      java.lang.Object ref = model_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        model_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The model name as defined by the manufacturer.
     * </pre>
     *
     * <code>string model = 4 [json_name = "model"];</code>
     * @return The bytes for model.
     */
    public com.google.protobuf.ByteString
        getModelBytes() {
      java.lang.Object ref = model_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        model_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The model name as defined by the manufacturer.
     * </pre>
     *
     * <code>string model = 4 [json_name = "model"];</code>
     * @param value The model to set.
     * @return This builder for chaining.
     */
    public Builder setModel(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      model_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The model name as defined by the manufacturer.
     * </pre>
     *
     * <code>string model = 4 [json_name = "model"];</code>
     * @return This builder for chaining.
     */
    public Builder clearModel() {
      model_ = getDefaultInstance().getModel();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The model name as defined by the manufacturer.
     * </pre>
     *
     * <code>string model = 4 [json_name = "model"];</code>
     * @param value The bytes for model to set.
     * @return This builder for chaining.
     */
    public Builder setModelBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      model_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object manufacturer_ = "";
    /**
     * <pre>
     * The manufacturer of the piece of hardware.
     * </pre>
     *
     * <code>string manufacturer = 5 [json_name = "manufacturer"];</code>
     * @return The manufacturer.
     */
    public java.lang.String getManufacturer() {
      java.lang.Object ref = manufacturer_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        manufacturer_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The manufacturer of the piece of hardware.
     * </pre>
     *
     * <code>string manufacturer = 5 [json_name = "manufacturer"];</code>
     * @return The bytes for manufacturer.
     */
    public com.google.protobuf.ByteString
        getManufacturerBytes() {
      java.lang.Object ref = manufacturer_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        manufacturer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The manufacturer of the piece of hardware.
     * </pre>
     *
     * <code>string manufacturer = 5 [json_name = "manufacturer"];</code>
     * @param value The manufacturer to set.
     * @return This builder for chaining.
     */
    public Builder setManufacturer(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      manufacturer_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The manufacturer of the piece of hardware.
     * </pre>
     *
     * <code>string manufacturer = 5 [json_name = "manufacturer"];</code>
     * @return This builder for chaining.
     */
    public Builder clearManufacturer() {
      manufacturer_ = getDefaultInstance().getManufacturer();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The manufacturer of the piece of hardware.
     * </pre>
     *
     * <code>string manufacturer = 5 [json_name = "manufacturer"];</code>
     * @param value The bytes for manufacturer to set.
     * @return This builder for chaining.
     */
    public Builder setManufacturerBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      manufacturer_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private int capacity_ ;
    /**
     * <pre>
     * The capacity of the device in bytes.
     * </pre>
     *
     * <code>uint32 capacity = 6 [json_name = "capacity", (.buf.validate.field) = { ... }</code>
     * @return The capacity.
     */
    @java.lang.Override
    public int getCapacity() {
      return capacity_;
    }
    /**
     * <pre>
     * The capacity of the device in bytes.
     * </pre>
     *
     * <code>uint32 capacity = 6 [json_name = "capacity", (.buf.validate.field) = { ... }</code>
     * @param value The capacity to set.
     * @return This builder for chaining.
     */
    public Builder setCapacity(int value) {

      capacity_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The capacity of the device in bytes.
     * </pre>
     *
     * <code>uint32 capacity = 6 [json_name = "capacity", (.buf.validate.field) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearCapacity() {
      bitField0_ = (bitField0_ & ~0x00000020);
      capacity_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> data_ =
      java.util.Collections.emptyList();
    private void ensureDataIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        data_ = new java.util.ArrayList<uk.gov.gchq.event_logging.v4.DataComplexType>(data_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        uk.gov.gchq.event_logging.v4.DataComplexType, uk.gov.gchq.event_logging.v4.DataComplexType.Builder, uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> dataBuilder_;

    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 7 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> getDataList() {
      if (dataBuilder_ == null) {
        return java.util.Collections.unmodifiableList(data_);
      } else {
        return dataBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 7 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public int getDataCount() {
      if (dataBuilder_ == null) {
        return data_.size();
      } else {
        return dataBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 7 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType getData(int index) {
      if (dataBuilder_ == null) {
        return data_.get(index);
      } else {
        return dataBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 7 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder setData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType value) {
      if (dataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataIsMutable();
        data_.set(index, value);
        onChanged();
      } else {
        dataBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 7 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder setData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType.Builder builderForValue) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.set(index, builderForValue.build());
        onChanged();
      } else {
        dataBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 7 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(uk.gov.gchq.event_logging.v4.DataComplexType value) {
      if (dataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataIsMutable();
        data_.add(value);
        onChanged();
      } else {
        dataBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 7 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType value) {
      if (dataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataIsMutable();
        data_.add(index, value);
        onChanged();
      } else {
        dataBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 7 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(
        uk.gov.gchq.event_logging.v4.DataComplexType.Builder builderForValue) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.add(builderForValue.build());
        onChanged();
      } else {
        dataBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 7 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType.Builder builderForValue) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.add(index, builderForValue.build());
        onChanged();
      } else {
        dataBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 7 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addAllData(
        java.lang.Iterable<? extends uk.gov.gchq.event_logging.v4.DataComplexType> values) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, data_);
        onChanged();
      } else {
        dataBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 7 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder clearData() {
      if (dataBuilder_ == null) {
        data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        dataBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 7 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder removeData(int index) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.remove(index);
        onChanged();
      } else {
        dataBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 7 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType.Builder getDataBuilder(
        int index) {
      return getDataFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 7 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder getDataOrBuilder(
        int index) {
      if (dataBuilder_ == null) {
        return data_.get(index);  } else {
        return dataBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 7 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public java.util.List<? extends uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> 
         getDataOrBuilderList() {
      if (dataBuilder_ != null) {
        return dataBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(data_);
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 7 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType.Builder addDataBuilder() {
      return getDataFieldBuilder().addBuilder(
          uk.gov.gchq.event_logging.v4.DataComplexType.getDefaultInstance());
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 7 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType.Builder addDataBuilder(
        int index) {
      return getDataFieldBuilder().addBuilder(
          index, uk.gov.gchq.event_logging.v4.DataComplexType.getDefaultInstance());
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 7 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType.Builder> 
         getDataBuilderList() {
      return getDataFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        uk.gov.gchq.event_logging.v4.DataComplexType, uk.gov.gchq.event_logging.v4.DataComplexType.Builder, uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> 
        getDataFieldBuilder() {
      if (dataBuilder_ == null) {
        dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            uk.gov.gchq.event_logging.v4.DataComplexType, uk.gov.gchq.event_logging.v4.DataComplexType.Builder, uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder>(
                data_,
                ((bitField0_ & 0x00000040) != 0),
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      return dataBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:event_logging.v4.HardwareComplexType)
  }

  // @@protoc_insertion_point(class_scope:event_logging.v4.HardwareComplexType)
  private static final uk.gov.gchq.event_logging.v4.HardwareComplexType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new uk.gov.gchq.event_logging.v4.HardwareComplexType();
  }

  public static uk.gov.gchq.event_logging.v4.HardwareComplexType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<HardwareComplexType>
      PARSER = new com.google.protobuf.AbstractParser<HardwareComplexType>() {
    @java.lang.Override
    public HardwareComplexType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<HardwareComplexType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HardwareComplexType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.HardwareComplexType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

