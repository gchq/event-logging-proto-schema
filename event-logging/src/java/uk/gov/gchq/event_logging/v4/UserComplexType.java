// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event_logging/v4/user_complex_type.proto

// Protobuf Java Version: 4.26.1
package uk.gov.gchq.event_logging.v4;

/**
 * <pre>
 * Describes a user entity that may represent a human or be a processing user account.
 * </pre>
 *
 * Protobuf type {@code event_logging.v4.UserComplexType}
 */
public final class UserComplexType extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:event_logging.v4.UserComplexType)
    UserComplexTypeOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      UserComplexType.class.getName());
  }
  // Use UserComplexType.newBuilder() to construct.
  private UserComplexType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private UserComplexType() {
    meta_ = java.util.Collections.emptyList();
    type_ = "";
    id_ = "";
    name_ = "";
    description_ = "";
    state_ = "";
    domain_ = "";
    emailAddress_ = "";
    data_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return uk.gov.gchq.event_logging.v4.UserComplexTypeProto.internal_static_event_logging_v4_UserComplexType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return uk.gov.gchq.event_logging.v4.UserComplexTypeProto.internal_static_event_logging_v4_UserComplexType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            uk.gov.gchq.event_logging.v4.UserComplexType.class, uk.gov.gchq.event_logging.v4.UserComplexType.Builder.class);
  }

  public interface PermissionsTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_logging.v4.UserComplexType.PermissionsType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A permission rule associated with an object, e.g. read and write access being granted to a user.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
     */
    java.util.List<uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType> 
        getPermissionList();
    /**
     * <pre>
     * A permission rule associated with an object, e.g. read and write access being granted to a user.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
     */
    uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType getPermission(int index);
    /**
     * <pre>
     * A permission rule associated with an object, e.g. read and write access being granted to a user.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
     */
    int getPermissionCount();
    /**
     * <pre>
     * A permission rule associated with an object, e.g. read and write access being granted to a user.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
     */
    java.util.List<? extends uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionTypeOrBuilder> 
        getPermissionOrBuilderList();
    /**
     * <pre>
     * A permission rule associated with an object, e.g. read and write access being granted to a user.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
     */
    uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionTypeOrBuilder getPermissionOrBuilder(
        int index);
  }
  /**
   * <pre>
   * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
   * </pre>
   *
   * Protobuf type {@code event_logging.v4.UserComplexType.PermissionsType}
   */
  public static final class PermissionsType extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:event_logging.v4.UserComplexType.PermissionsType)
      PermissionsTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        PermissionsType.class.getName());
    }
    // Use PermissionsType.newBuilder() to construct.
    private PermissionsType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private PermissionsType() {
      permission_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.gov.gchq.event_logging.v4.UserComplexTypeProto.internal_static_event_logging_v4_UserComplexType_PermissionsType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.gov.gchq.event_logging.v4.UserComplexTypeProto.internal_static_event_logging_v4_UserComplexType_PermissionsType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.class, uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.Builder.class);
    }

    public interface PermissionTypeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:event_logging.v4.UserComplexType.PermissionsType.PermissionType)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * A user that has been granted (or is prevented from having) some form of permission.
       * </pre>
       *
       * <code>.event_logging.v4.UserComplexType user = 1 [json_name = "user", (.buf.validate.field) = { ... }</code>
       * @return Whether the user field is set.
       */
      boolean hasUser();
      /**
       * <pre>
       * A user that has been granted (or is prevented from having) some form of permission.
       * </pre>
       *
       * <code>.event_logging.v4.UserComplexType user = 1 [json_name = "user", (.buf.validate.field) = { ... }</code>
       * @return The user.
       */
      uk.gov.gchq.event_logging.v4.UserComplexType getUser();
      /**
       * <pre>
       * A user that has been granted (or is prevented from having) some form of permission.
       * </pre>
       *
       * <code>.event_logging.v4.UserComplexType user = 1 [json_name = "user", (.buf.validate.field) = { ... }</code>
       */
      uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder getUserOrBuilder();

      /**
       * <pre>
       * A named group of users that has been granted (or is prevented from having) some form of permission.
       * </pre>
       *
       * <code>.event_logging.v4.GroupComplexType group = 2 [json_name = "group", (.buf.validate.field) = { ... }</code>
       * @return Whether the group field is set.
       */
      boolean hasGroup();
      /**
       * <pre>
       * A named group of users that has been granted (or is prevented from having) some form of permission.
       * </pre>
       *
       * <code>.event_logging.v4.GroupComplexType group = 2 [json_name = "group", (.buf.validate.field) = { ... }</code>
       * @return The group.
       */
      uk.gov.gchq.event_logging.v4.GroupComplexType getGroup();
      /**
       * <pre>
       * A named group of users that has been granted (or is prevented from having) some form of permission.
       * </pre>
       *
       * <code>.event_logging.v4.GroupComplexType group = 2 [json_name = "group", (.buf.validate.field) = { ... }</code>
       */
      uk.gov.gchq.event_logging.v4.GroupComplexTypeOrBuilder getGroupOrBuilder();

      /**
       * <pre>
       * The permission attributes that have been explicitly allowed.
       * </pre>
       *
       * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [json_name = "allow", (.buf.validate.field) = { ... }</code>
       * @return A list containing the allow.
       */
      java.util.List<uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType> getAllowList();
      /**
       * <pre>
       * The permission attributes that have been explicitly allowed.
       * </pre>
       *
       * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [json_name = "allow", (.buf.validate.field) = { ... }</code>
       * @return The count of allow.
       */
      int getAllowCount();
      /**
       * <pre>
       * The permission attributes that have been explicitly allowed.
       * </pre>
       *
       * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [json_name = "allow", (.buf.validate.field) = { ... }</code>
       * @param index The index of the element to return.
       * @return The allow at the given index.
       */
      uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType getAllow(int index);
      /**
       * <pre>
       * The permission attributes that have been explicitly allowed.
       * </pre>
       *
       * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [json_name = "allow", (.buf.validate.field) = { ... }</code>
       * @return A list containing the enum numeric values on the wire for allow.
       */
      java.util.List<java.lang.Integer>
      getAllowValueList();
      /**
       * <pre>
       * The permission attributes that have been explicitly allowed.
       * </pre>
       *
       * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [json_name = "allow", (.buf.validate.field) = { ... }</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of allow at the given index.
       */
      int getAllowValue(int index);

      /**
       * <pre>
       * The permission attributes that have been explicitly denied.
       * </pre>
       *
       * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [json_name = "deny", (.buf.validate.field) = { ... }</code>
       * @return A list containing the deny.
       */
      java.util.List<uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType> getDenyList();
      /**
       * <pre>
       * The permission attributes that have been explicitly denied.
       * </pre>
       *
       * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [json_name = "deny", (.buf.validate.field) = { ... }</code>
       * @return The count of deny.
       */
      int getDenyCount();
      /**
       * <pre>
       * The permission attributes that have been explicitly denied.
       * </pre>
       *
       * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [json_name = "deny", (.buf.validate.field) = { ... }</code>
       * @param index The index of the element to return.
       * @return The deny at the given index.
       */
      uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType getDeny(int index);
      /**
       * <pre>
       * The permission attributes that have been explicitly denied.
       * </pre>
       *
       * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [json_name = "deny", (.buf.validate.field) = { ... }</code>
       * @return A list containing the enum numeric values on the wire for deny.
       */
      java.util.List<java.lang.Integer>
      getDenyValueList();
      /**
       * <pre>
       * The permission attributes that have been explicitly denied.
       * </pre>
       *
       * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [json_name = "deny", (.buf.validate.field) = { ... }</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of deny at the given index.
       */
      int getDenyValue(int index);
    }
    /**
     * <pre>
     * A permission rule associated with an object, e.g. read and write access being granted to a user.
     * </pre>
     *
     * Protobuf type {@code event_logging.v4.UserComplexType.PermissionsType.PermissionType}
     */
    public static final class PermissionType extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:event_logging.v4.UserComplexType.PermissionsType.PermissionType)
        PermissionTypeOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 26,
          /* patch= */ 1,
          /* suffix= */ "",
          PermissionType.class.getName());
      }
      // Use PermissionType.newBuilder() to construct.
      private PermissionType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private PermissionType() {
        allow_ = java.util.Collections.emptyList();
        deny_ = java.util.Collections.emptyList();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return uk.gov.gchq.event_logging.v4.UserComplexTypeProto.internal_static_event_logging_v4_UserComplexType_PermissionsType_PermissionType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return uk.gov.gchq.event_logging.v4.UserComplexTypeProto.internal_static_event_logging_v4_UserComplexType_PermissionsType_PermissionType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType.class, uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType.Builder.class);
      }

      private int bitField0_;
      public static final int USER_FIELD_NUMBER = 1;
      private uk.gov.gchq.event_logging.v4.UserComplexType user_;
      /**
       * <pre>
       * A user that has been granted (or is prevented from having) some form of permission.
       * </pre>
       *
       * <code>.event_logging.v4.UserComplexType user = 1 [json_name = "user", (.buf.validate.field) = { ... }</code>
       * @return Whether the user field is set.
       */
      @java.lang.Override
      public boolean hasUser() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * A user that has been granted (or is prevented from having) some form of permission.
       * </pre>
       *
       * <code>.event_logging.v4.UserComplexType user = 1 [json_name = "user", (.buf.validate.field) = { ... }</code>
       * @return The user.
       */
      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.UserComplexType getUser() {
        return user_ == null ? uk.gov.gchq.event_logging.v4.UserComplexType.getDefaultInstance() : user_;
      }
      /**
       * <pre>
       * A user that has been granted (or is prevented from having) some form of permission.
       * </pre>
       *
       * <code>.event_logging.v4.UserComplexType user = 1 [json_name = "user", (.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder getUserOrBuilder() {
        return user_ == null ? uk.gov.gchq.event_logging.v4.UserComplexType.getDefaultInstance() : user_;
      }

      public static final int GROUP_FIELD_NUMBER = 2;
      private uk.gov.gchq.event_logging.v4.GroupComplexType group_;
      /**
       * <pre>
       * A named group of users that has been granted (or is prevented from having) some form of permission.
       * </pre>
       *
       * <code>.event_logging.v4.GroupComplexType group = 2 [json_name = "group", (.buf.validate.field) = { ... }</code>
       * @return Whether the group field is set.
       */
      @java.lang.Override
      public boolean hasGroup() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * A named group of users that has been granted (or is prevented from having) some form of permission.
       * </pre>
       *
       * <code>.event_logging.v4.GroupComplexType group = 2 [json_name = "group", (.buf.validate.field) = { ... }</code>
       * @return The group.
       */
      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.GroupComplexType getGroup() {
        return group_ == null ? uk.gov.gchq.event_logging.v4.GroupComplexType.getDefaultInstance() : group_;
      }
      /**
       * <pre>
       * A named group of users that has been granted (or is prevented from having) some form of permission.
       * </pre>
       *
       * <code>.event_logging.v4.GroupComplexType group = 2 [json_name = "group", (.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.GroupComplexTypeOrBuilder getGroupOrBuilder() {
        return group_ == null ? uk.gov.gchq.event_logging.v4.GroupComplexType.getDefaultInstance() : group_;
      }

      public static final int ALLOW_FIELD_NUMBER = 11;
      @SuppressWarnings("serial")
      private java.util.List<java.lang.Integer> allow_;
      private static final com.google.protobuf.Internal.ListAdapter.Converter<
          java.lang.Integer, uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType> allow_converter_ =
              new com.google.protobuf.Internal.ListAdapter.Converter<
                  java.lang.Integer, uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType>() {
                public uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType convert(java.lang.Integer from) {
                  uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType result = uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType.forNumber(from);
                  return result == null ? uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType.UNRECOGNIZED : result;
                }
              };
      /**
       * <pre>
       * The permission attributes that have been explicitly allowed.
       * </pre>
       *
       * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [json_name = "allow", (.buf.validate.field) = { ... }</code>
       * @return A list containing the allow.
       */
      @java.lang.Override
      public java.util.List<uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType> getAllowList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType>(allow_, allow_converter_);
      }
      /**
       * <pre>
       * The permission attributes that have been explicitly allowed.
       * </pre>
       *
       * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [json_name = "allow", (.buf.validate.field) = { ... }</code>
       * @return The count of allow.
       */
      @java.lang.Override
      public int getAllowCount() {
        return allow_.size();
      }
      /**
       * <pre>
       * The permission attributes that have been explicitly allowed.
       * </pre>
       *
       * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [json_name = "allow", (.buf.validate.field) = { ... }</code>
       * @param index The index of the element to return.
       * @return The allow at the given index.
       */
      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType getAllow(int index) {
        return allow_converter_.convert(allow_.get(index));
      }
      /**
       * <pre>
       * The permission attributes that have been explicitly allowed.
       * </pre>
       *
       * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [json_name = "allow", (.buf.validate.field) = { ... }</code>
       * @return A list containing the enum numeric values on the wire for allow.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
      getAllowValueList() {
        return allow_;
      }
      /**
       * <pre>
       * The permission attributes that have been explicitly allowed.
       * </pre>
       *
       * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [json_name = "allow", (.buf.validate.field) = { ... }</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of allow at the given index.
       */
      @java.lang.Override
      public int getAllowValue(int index) {
        return allow_.get(index);
      }
      private int allowMemoizedSerializedSize;

      public static final int DENY_FIELD_NUMBER = 12;
      @SuppressWarnings("serial")
      private java.util.List<java.lang.Integer> deny_;
      private static final com.google.protobuf.Internal.ListAdapter.Converter<
          java.lang.Integer, uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType> deny_converter_ =
              new com.google.protobuf.Internal.ListAdapter.Converter<
                  java.lang.Integer, uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType>() {
                public uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType convert(java.lang.Integer from) {
                  uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType result = uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType.forNumber(from);
                  return result == null ? uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType.UNRECOGNIZED : result;
                }
              };
      /**
       * <pre>
       * The permission attributes that have been explicitly denied.
       * </pre>
       *
       * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [json_name = "deny", (.buf.validate.field) = { ... }</code>
       * @return A list containing the deny.
       */
      @java.lang.Override
      public java.util.List<uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType> getDenyList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType>(deny_, deny_converter_);
      }
      /**
       * <pre>
       * The permission attributes that have been explicitly denied.
       * </pre>
       *
       * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [json_name = "deny", (.buf.validate.field) = { ... }</code>
       * @return The count of deny.
       */
      @java.lang.Override
      public int getDenyCount() {
        return deny_.size();
      }
      /**
       * <pre>
       * The permission attributes that have been explicitly denied.
       * </pre>
       *
       * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [json_name = "deny", (.buf.validate.field) = { ... }</code>
       * @param index The index of the element to return.
       * @return The deny at the given index.
       */
      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType getDeny(int index) {
        return deny_converter_.convert(deny_.get(index));
      }
      /**
       * <pre>
       * The permission attributes that have been explicitly denied.
       * </pre>
       *
       * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [json_name = "deny", (.buf.validate.field) = { ... }</code>
       * @return A list containing the enum numeric values on the wire for deny.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
      getDenyValueList() {
        return deny_;
      }
      /**
       * <pre>
       * The permission attributes that have been explicitly denied.
       * </pre>
       *
       * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [json_name = "deny", (.buf.validate.field) = { ... }</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of deny at the given index.
       */
      @java.lang.Override
      public int getDenyValue(int index) {
        return deny_.get(index);
      }
      private int denyMemoizedSerializedSize;

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeMessage(1, getUser());
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeMessage(2, getGroup());
        }
        if (getAllowList().size() > 0) {
          output.writeUInt32NoTag(90);
          output.writeUInt32NoTag(allowMemoizedSerializedSize);
        }
        for (int i = 0; i < allow_.size(); i++) {
          output.writeEnumNoTag(allow_.get(i));
        }
        if (getDenyList().size() > 0) {
          output.writeUInt32NoTag(98);
          output.writeUInt32NoTag(denyMemoizedSerializedSize);
        }
        for (int i = 0; i < deny_.size(); i++) {
          output.writeEnumNoTag(deny_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getUser());
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getGroup());
        }
        {
          int dataSize = 0;
          for (int i = 0; i < allow_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeEnumSizeNoTag(allow_.get(i));
          }
          size += dataSize;
          if (!getAllowList().isEmpty()) {  size += 1;
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(dataSize);
          }allowMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < deny_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeEnumSizeNoTag(deny_.get(i));
          }
          size += dataSize;
          if (!getDenyList().isEmpty()) {  size += 1;
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(dataSize);
          }denyMemoizedSerializedSize = dataSize;
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType)) {
          return super.equals(obj);
        }
        uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType other = (uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType) obj;

        if (hasUser() != other.hasUser()) return false;
        if (hasUser()) {
          if (!getUser()
              .equals(other.getUser())) return false;
        }
        if (hasGroup() != other.hasGroup()) return false;
        if (hasGroup()) {
          if (!getGroup()
              .equals(other.getGroup())) return false;
        }
        if (!allow_.equals(other.allow_)) return false;
        if (!deny_.equals(other.deny_)) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasUser()) {
          hash = (37 * hash) + USER_FIELD_NUMBER;
          hash = (53 * hash) + getUser().hashCode();
        }
        if (hasGroup()) {
          hash = (37 * hash) + GROUP_FIELD_NUMBER;
          hash = (53 * hash) + getGroup().hashCode();
        }
        if (getAllowCount() > 0) {
          hash = (37 * hash) + ALLOW_FIELD_NUMBER;
          hash = (53 * hash) + allow_.hashCode();
        }
        if (getDenyCount() > 0) {
          hash = (37 * hash) + DENY_FIELD_NUMBER;
          hash = (53 * hash) + deny_.hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * Protobuf type {@code event_logging.v4.UserComplexType.PermissionsType.PermissionType}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:event_logging.v4.UserComplexType.PermissionsType.PermissionType)
          uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionTypeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return uk.gov.gchq.event_logging.v4.UserComplexTypeProto.internal_static_event_logging_v4_UserComplexType_PermissionsType_PermissionType_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return uk.gov.gchq.event_logging.v4.UserComplexTypeProto.internal_static_event_logging_v4_UserComplexType_PermissionsType_PermissionType_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType.class, uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType.Builder.class);
        }

        // Construct using uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage
                  .alwaysUseFieldBuilders) {
            getUserFieldBuilder();
            getGroupFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          user_ = null;
          if (userBuilder_ != null) {
            userBuilder_.dispose();
            userBuilder_ = null;
          }
          group_ = null;
          if (groupBuilder_ != null) {
            groupBuilder_.dispose();
            groupBuilder_ = null;
          }
          allow_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          deny_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return uk.gov.gchq.event_logging.v4.UserComplexTypeProto.internal_static_event_logging_v4_UserComplexType_PermissionsType_PermissionType_descriptor;
        }

        @java.lang.Override
        public uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType getDefaultInstanceForType() {
          return uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType.getDefaultInstance();
        }

        @java.lang.Override
        public uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType build() {
          uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType buildPartial() {
          uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType result = new uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType result) {
          if (((bitField0_ & 0x00000004) != 0)) {
            allow_ = java.util.Collections.unmodifiableList(allow_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.allow_ = allow_;
          if (((bitField0_ & 0x00000008) != 0)) {
            deny_ = java.util.Collections.unmodifiableList(deny_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.deny_ = deny_;
        }

        private void buildPartial0(uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.user_ = userBuilder_ == null
                ? user_
                : userBuilder_.build();
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.group_ = groupBuilder_ == null
                ? group_
                : groupBuilder_.build();
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType) {
            return mergeFrom((uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType other) {
          if (other == uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType.getDefaultInstance()) return this;
          if (other.hasUser()) {
            mergeUser(other.getUser());
          }
          if (other.hasGroup()) {
            mergeGroup(other.getGroup());
          }
          if (!other.allow_.isEmpty()) {
            if (allow_.isEmpty()) {
              allow_ = other.allow_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureAllowIsMutable();
              allow_.addAll(other.allow_);
            }
            onChanged();
          }
          if (!other.deny_.isEmpty()) {
            if (deny_.isEmpty()) {
              deny_ = other.deny_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureDenyIsMutable();
              deny_.addAll(other.deny_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getUserFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  input.readMessage(
                      getGroupFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                case 88: {
                  int tmpRaw = input.readEnum();
                  ensureAllowIsMutable();
                  allow_.add(tmpRaw);
                  break;
                } // case 88
                case 90: {
                  int length = input.readRawVarint32();
                  int oldLimit = input.pushLimit(length);
                  while(input.getBytesUntilLimit() > 0) {
                    int tmpRaw = input.readEnum();
                    ensureAllowIsMutable();
                    allow_.add(tmpRaw);
                  }
                  input.popLimit(oldLimit);
                  break;
                } // case 90
                case 96: {
                  int tmpRaw = input.readEnum();
                  ensureDenyIsMutable();
                  deny_.add(tmpRaw);
                  break;
                } // case 96
                case 98: {
                  int length = input.readRawVarint32();
                  int oldLimit = input.pushLimit(length);
                  while(input.getBytesUntilLimit() > 0) {
                    int tmpRaw = input.readEnum();
                    ensureDenyIsMutable();
                    deny_.add(tmpRaw);
                  }
                  input.popLimit(oldLimit);
                  break;
                } // case 98
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private uk.gov.gchq.event_logging.v4.UserComplexType user_;
        private com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.UserComplexType, uk.gov.gchq.event_logging.v4.UserComplexType.Builder, uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder> userBuilder_;
        /**
         * <pre>
         * A user that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.UserComplexType user = 1 [json_name = "user", (.buf.validate.field) = { ... }</code>
         * @return Whether the user field is set.
         */
        public boolean hasUser() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * A user that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.UserComplexType user = 1 [json_name = "user", (.buf.validate.field) = { ... }</code>
         * @return The user.
         */
        public uk.gov.gchq.event_logging.v4.UserComplexType getUser() {
          if (userBuilder_ == null) {
            return user_ == null ? uk.gov.gchq.event_logging.v4.UserComplexType.getDefaultInstance() : user_;
          } else {
            return userBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * A user that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.UserComplexType user = 1 [json_name = "user", (.buf.validate.field) = { ... }</code>
         */
        public Builder setUser(uk.gov.gchq.event_logging.v4.UserComplexType value) {
          if (userBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            user_ = value;
          } else {
            userBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * A user that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.UserComplexType user = 1 [json_name = "user", (.buf.validate.field) = { ... }</code>
         */
        public Builder setUser(
            uk.gov.gchq.event_logging.v4.UserComplexType.Builder builderForValue) {
          if (userBuilder_ == null) {
            user_ = builderForValue.build();
          } else {
            userBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * A user that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.UserComplexType user = 1 [json_name = "user", (.buf.validate.field) = { ... }</code>
         */
        public Builder mergeUser(uk.gov.gchq.event_logging.v4.UserComplexType value) {
          if (userBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0) &&
              user_ != null &&
              user_ != uk.gov.gchq.event_logging.v4.UserComplexType.getDefaultInstance()) {
              getUserBuilder().mergeFrom(value);
            } else {
              user_ = value;
            }
          } else {
            userBuilder_.mergeFrom(value);
          }
          if (user_ != null) {
            bitField0_ |= 0x00000001;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * A user that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.UserComplexType user = 1 [json_name = "user", (.buf.validate.field) = { ... }</code>
         */
        public Builder clearUser() {
          bitField0_ = (bitField0_ & ~0x00000001);
          user_ = null;
          if (userBuilder_ != null) {
            userBuilder_.dispose();
            userBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * A user that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.UserComplexType user = 1 [json_name = "user", (.buf.validate.field) = { ... }</code>
         */
        public uk.gov.gchq.event_logging.v4.UserComplexType.Builder getUserBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getUserFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * A user that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.UserComplexType user = 1 [json_name = "user", (.buf.validate.field) = { ... }</code>
         */
        public uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder getUserOrBuilder() {
          if (userBuilder_ != null) {
            return userBuilder_.getMessageOrBuilder();
          } else {
            return user_ == null ?
                uk.gov.gchq.event_logging.v4.UserComplexType.getDefaultInstance() : user_;
          }
        }
        /**
         * <pre>
         * A user that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.UserComplexType user = 1 [json_name = "user", (.buf.validate.field) = { ... }</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.UserComplexType, uk.gov.gchq.event_logging.v4.UserComplexType.Builder, uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder> 
            getUserFieldBuilder() {
          if (userBuilder_ == null) {
            userBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                uk.gov.gchq.event_logging.v4.UserComplexType, uk.gov.gchq.event_logging.v4.UserComplexType.Builder, uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder>(
                    getUser(),
                    getParentForChildren(),
                    isClean());
            user_ = null;
          }
          return userBuilder_;
        }

        private uk.gov.gchq.event_logging.v4.GroupComplexType group_;
        private com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.GroupComplexType, uk.gov.gchq.event_logging.v4.GroupComplexType.Builder, uk.gov.gchq.event_logging.v4.GroupComplexTypeOrBuilder> groupBuilder_;
        /**
         * <pre>
         * A named group of users that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.GroupComplexType group = 2 [json_name = "group", (.buf.validate.field) = { ... }</code>
         * @return Whether the group field is set.
         */
        public boolean hasGroup() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * A named group of users that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.GroupComplexType group = 2 [json_name = "group", (.buf.validate.field) = { ... }</code>
         * @return The group.
         */
        public uk.gov.gchq.event_logging.v4.GroupComplexType getGroup() {
          if (groupBuilder_ == null) {
            return group_ == null ? uk.gov.gchq.event_logging.v4.GroupComplexType.getDefaultInstance() : group_;
          } else {
            return groupBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * A named group of users that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.GroupComplexType group = 2 [json_name = "group", (.buf.validate.field) = { ... }</code>
         */
        public Builder setGroup(uk.gov.gchq.event_logging.v4.GroupComplexType value) {
          if (groupBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            group_ = value;
          } else {
            groupBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * A named group of users that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.GroupComplexType group = 2 [json_name = "group", (.buf.validate.field) = { ... }</code>
         */
        public Builder setGroup(
            uk.gov.gchq.event_logging.v4.GroupComplexType.Builder builderForValue) {
          if (groupBuilder_ == null) {
            group_ = builderForValue.build();
          } else {
            groupBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * A named group of users that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.GroupComplexType group = 2 [json_name = "group", (.buf.validate.field) = { ... }</code>
         */
        public Builder mergeGroup(uk.gov.gchq.event_logging.v4.GroupComplexType value) {
          if (groupBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0) &&
              group_ != null &&
              group_ != uk.gov.gchq.event_logging.v4.GroupComplexType.getDefaultInstance()) {
              getGroupBuilder().mergeFrom(value);
            } else {
              group_ = value;
            }
          } else {
            groupBuilder_.mergeFrom(value);
          }
          if (group_ != null) {
            bitField0_ |= 0x00000002;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * A named group of users that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.GroupComplexType group = 2 [json_name = "group", (.buf.validate.field) = { ... }</code>
         */
        public Builder clearGroup() {
          bitField0_ = (bitField0_ & ~0x00000002);
          group_ = null;
          if (groupBuilder_ != null) {
            groupBuilder_.dispose();
            groupBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * A named group of users that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.GroupComplexType group = 2 [json_name = "group", (.buf.validate.field) = { ... }</code>
         */
        public uk.gov.gchq.event_logging.v4.GroupComplexType.Builder getGroupBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getGroupFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * A named group of users that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.GroupComplexType group = 2 [json_name = "group", (.buf.validate.field) = { ... }</code>
         */
        public uk.gov.gchq.event_logging.v4.GroupComplexTypeOrBuilder getGroupOrBuilder() {
          if (groupBuilder_ != null) {
            return groupBuilder_.getMessageOrBuilder();
          } else {
            return group_ == null ?
                uk.gov.gchq.event_logging.v4.GroupComplexType.getDefaultInstance() : group_;
          }
        }
        /**
         * <pre>
         * A named group of users that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.GroupComplexType group = 2 [json_name = "group", (.buf.validate.field) = { ... }</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.GroupComplexType, uk.gov.gchq.event_logging.v4.GroupComplexType.Builder, uk.gov.gchq.event_logging.v4.GroupComplexTypeOrBuilder> 
            getGroupFieldBuilder() {
          if (groupBuilder_ == null) {
            groupBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                uk.gov.gchq.event_logging.v4.GroupComplexType, uk.gov.gchq.event_logging.v4.GroupComplexType.Builder, uk.gov.gchq.event_logging.v4.GroupComplexTypeOrBuilder>(
                    getGroup(),
                    getParentForChildren(),
                    isClean());
            group_ = null;
          }
          return groupBuilder_;
        }

        private java.util.List<java.lang.Integer> allow_ =
          java.util.Collections.emptyList();
        private void ensureAllowIsMutable() {
          if (!((bitField0_ & 0x00000004) != 0)) {
            allow_ = new java.util.ArrayList<java.lang.Integer>(allow_);
            bitField0_ |= 0x00000004;
          }
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly allowed.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [json_name = "allow", (.buf.validate.field) = { ... }</code>
         * @return A list containing the allow.
         */
        public java.util.List<uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType> getAllowList() {
          return new com.google.protobuf.Internal.ListAdapter<
              java.lang.Integer, uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType>(allow_, allow_converter_);
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly allowed.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [json_name = "allow", (.buf.validate.field) = { ... }</code>
         * @return The count of allow.
         */
        public int getAllowCount() {
          return allow_.size();
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly allowed.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [json_name = "allow", (.buf.validate.field) = { ... }</code>
         * @param index The index of the element to return.
         * @return The allow at the given index.
         */
        public uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType getAllow(int index) {
          return allow_converter_.convert(allow_.get(index));
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly allowed.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [json_name = "allow", (.buf.validate.field) = { ... }</code>
         * @param index The index to set the value at.
         * @param value The allow to set.
         * @return This builder for chaining.
         */
        public Builder setAllow(
            int index, uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllowIsMutable();
          allow_.set(index, value.getNumber());
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly allowed.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [json_name = "allow", (.buf.validate.field) = { ... }</code>
         * @param value The allow to add.
         * @return This builder for chaining.
         */
        public Builder addAllow(uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllowIsMutable();
          allow_.add(value.getNumber());
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly allowed.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [json_name = "allow", (.buf.validate.field) = { ... }</code>
         * @param values The allow to add.
         * @return This builder for chaining.
         */
        public Builder addAllAllow(
            java.lang.Iterable<? extends uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType> values) {
          ensureAllowIsMutable();
          for (uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType value : values) {
            allow_.add(value.getNumber());
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly allowed.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [json_name = "allow", (.buf.validate.field) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearAllow() {
          allow_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly allowed.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [json_name = "allow", (.buf.validate.field) = { ... }</code>
         * @return A list containing the enum numeric values on the wire for allow.
         */
        public java.util.List<java.lang.Integer>
        getAllowValueList() {
          return java.util.Collections.unmodifiableList(allow_);
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly allowed.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [json_name = "allow", (.buf.validate.field) = { ... }</code>
         * @param index The index of the value to return.
         * @return The enum numeric value on the wire of allow at the given index.
         */
        public int getAllowValue(int index) {
          return allow_.get(index);
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly allowed.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [json_name = "allow", (.buf.validate.field) = { ... }</code>
         * @param index The index to set the value at.
         * @param value The enum numeric value on the wire for allow to set.
         * @return This builder for chaining.
         */
        public Builder setAllowValue(
            int index, int value) {
          ensureAllowIsMutable();
          allow_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly allowed.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [json_name = "allow", (.buf.validate.field) = { ... }</code>
         * @param value The enum numeric value on the wire for allow to add.
         * @return This builder for chaining.
         */
        public Builder addAllowValue(int value) {
          ensureAllowIsMutable();
          allow_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly allowed.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [json_name = "allow", (.buf.validate.field) = { ... }</code>
         * @param values The enum numeric values on the wire for allow to add.
         * @return This builder for chaining.
         */
        public Builder addAllAllowValue(
            java.lang.Iterable<java.lang.Integer> values) {
          ensureAllowIsMutable();
          for (int value : values) {
            allow_.add(value);
          }
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> deny_ =
          java.util.Collections.emptyList();
        private void ensureDenyIsMutable() {
          if (!((bitField0_ & 0x00000008) != 0)) {
            deny_ = new java.util.ArrayList<java.lang.Integer>(deny_);
            bitField0_ |= 0x00000008;
          }
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly denied.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [json_name = "deny", (.buf.validate.field) = { ... }</code>
         * @return A list containing the deny.
         */
        public java.util.List<uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType> getDenyList() {
          return new com.google.protobuf.Internal.ListAdapter<
              java.lang.Integer, uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType>(deny_, deny_converter_);
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly denied.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [json_name = "deny", (.buf.validate.field) = { ... }</code>
         * @return The count of deny.
         */
        public int getDenyCount() {
          return deny_.size();
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly denied.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [json_name = "deny", (.buf.validate.field) = { ... }</code>
         * @param index The index of the element to return.
         * @return The deny at the given index.
         */
        public uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType getDeny(int index) {
          return deny_converter_.convert(deny_.get(index));
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly denied.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [json_name = "deny", (.buf.validate.field) = { ... }</code>
         * @param index The index to set the value at.
         * @param value The deny to set.
         * @return This builder for chaining.
         */
        public Builder setDeny(
            int index, uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDenyIsMutable();
          deny_.set(index, value.getNumber());
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly denied.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [json_name = "deny", (.buf.validate.field) = { ... }</code>
         * @param value The deny to add.
         * @return This builder for chaining.
         */
        public Builder addDeny(uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDenyIsMutable();
          deny_.add(value.getNumber());
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly denied.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [json_name = "deny", (.buf.validate.field) = { ... }</code>
         * @param values The deny to add.
         * @return This builder for chaining.
         */
        public Builder addAllDeny(
            java.lang.Iterable<? extends uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType> values) {
          ensureDenyIsMutable();
          for (uk.gov.gchq.event_logging.v4.PermissionAttributeSimpleType value : values) {
            deny_.add(value.getNumber());
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly denied.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [json_name = "deny", (.buf.validate.field) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearDeny() {
          deny_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly denied.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [json_name = "deny", (.buf.validate.field) = { ... }</code>
         * @return A list containing the enum numeric values on the wire for deny.
         */
        public java.util.List<java.lang.Integer>
        getDenyValueList() {
          return java.util.Collections.unmodifiableList(deny_);
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly denied.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [json_name = "deny", (.buf.validate.field) = { ... }</code>
         * @param index The index of the value to return.
         * @return The enum numeric value on the wire of deny at the given index.
         */
        public int getDenyValue(int index) {
          return deny_.get(index);
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly denied.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [json_name = "deny", (.buf.validate.field) = { ... }</code>
         * @param index The index to set the value at.
         * @param value The enum numeric value on the wire for deny to set.
         * @return This builder for chaining.
         */
        public Builder setDenyValue(
            int index, int value) {
          ensureDenyIsMutable();
          deny_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly denied.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [json_name = "deny", (.buf.validate.field) = { ... }</code>
         * @param value The enum numeric value on the wire for deny to add.
         * @return This builder for chaining.
         */
        public Builder addDenyValue(int value) {
          ensureDenyIsMutable();
          deny_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly denied.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [json_name = "deny", (.buf.validate.field) = { ... }</code>
         * @param values The enum numeric values on the wire for deny to add.
         * @return This builder for chaining.
         */
        public Builder addAllDenyValue(
            java.lang.Iterable<java.lang.Integer> values) {
          ensureDenyIsMutable();
          for (int value : values) {
            deny_.add(value);
          }
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:event_logging.v4.UserComplexType.PermissionsType.PermissionType)
      }

      // @@protoc_insertion_point(class_scope:event_logging.v4.UserComplexType.PermissionsType.PermissionType)
      private static final uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType();
      }

      public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PermissionType>
          PARSER = new com.google.protobuf.AbstractParser<PermissionType>() {
        @java.lang.Override
        public PermissionType parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<PermissionType> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PermissionType> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int PERMISSION_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType> permission_;
    /**
     * <pre>
     * A permission rule associated with an object, e.g. read and write access being granted to a user.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType> getPermissionList() {
      return permission_;
    }
    /**
     * <pre>
     * A permission rule associated with an object, e.g. read and write access being granted to a user.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<? extends uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionTypeOrBuilder> 
        getPermissionOrBuilderList() {
      return permission_;
    }
    /**
     * <pre>
     * A permission rule associated with an object, e.g. read and write access being granted to a user.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public int getPermissionCount() {
      return permission_.size();
    }
    /**
     * <pre>
     * A permission rule associated with an object, e.g. read and write access being granted to a user.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType getPermission(int index) {
      return permission_.get(index);
    }
    /**
     * <pre>
     * A permission rule associated with an object, e.g. read and write access being granted to a user.
     * </pre>
     *
     * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionTypeOrBuilder getPermissionOrBuilder(
        int index) {
      return permission_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < permission_.size(); i++) {
        output.writeMessage(1, permission_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < permission_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, permission_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType)) {
        return super.equals(obj);
      }
      uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType other = (uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType) obj;

      if (!getPermissionList()
          .equals(other.getPermissionList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPermissionCount() > 0) {
        hash = (37 * hash) + PERMISSION_FIELD_NUMBER;
        hash = (53 * hash) + getPermissionList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
     * </pre>
     *
     * Protobuf type {@code event_logging.v4.UserComplexType.PermissionsType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_logging.v4.UserComplexType.PermissionsType)
        uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return uk.gov.gchq.event_logging.v4.UserComplexTypeProto.internal_static_event_logging_v4_UserComplexType_PermissionsType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return uk.gov.gchq.event_logging.v4.UserComplexTypeProto.internal_static_event_logging_v4_UserComplexType_PermissionsType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.class, uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.Builder.class);
      }

      // Construct using uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (permissionBuilder_ == null) {
          permission_ = java.util.Collections.emptyList();
        } else {
          permission_ = null;
          permissionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return uk.gov.gchq.event_logging.v4.UserComplexTypeProto.internal_static_event_logging_v4_UserComplexType_PermissionsType_descriptor;
      }

      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType getDefaultInstanceForType() {
        return uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.getDefaultInstance();
      }

      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType build() {
        uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType buildPartial() {
        uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType result = new uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType result) {
        if (permissionBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            permission_ = java.util.Collections.unmodifiableList(permission_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.permission_ = permission_;
        } else {
          result.permission_ = permissionBuilder_.build();
        }
      }

      private void buildPartial0(uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType) {
          return mergeFrom((uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType other) {
        if (other == uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.getDefaultInstance()) return this;
        if (permissionBuilder_ == null) {
          if (!other.permission_.isEmpty()) {
            if (permission_.isEmpty()) {
              permission_ = other.permission_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePermissionIsMutable();
              permission_.addAll(other.permission_);
            }
            onChanged();
          }
        } else {
          if (!other.permission_.isEmpty()) {
            if (permissionBuilder_.isEmpty()) {
              permissionBuilder_.dispose();
              permissionBuilder_ = null;
              permission_ = other.permission_;
              bitField0_ = (bitField0_ & ~0x00000001);
              permissionBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPermissionFieldBuilder() : null;
            } else {
              permissionBuilder_.addAllMessages(other.permission_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType m =
                    input.readMessage(
                        uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType.parser(),
                        extensionRegistry);
                if (permissionBuilder_ == null) {
                  ensurePermissionIsMutable();
                  permission_.add(m);
                } else {
                  permissionBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType> permission_ =
        java.util.Collections.emptyList();
      private void ensurePermissionIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          permission_ = new java.util.ArrayList<uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType>(permission_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType, uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType.Builder, uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionTypeOrBuilder> permissionBuilder_;

      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
       */
      public java.util.List<uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType> getPermissionList() {
        if (permissionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(permission_);
        } else {
          return permissionBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
       */
      public int getPermissionCount() {
        if (permissionBuilder_ == null) {
          return permission_.size();
        } else {
          return permissionBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
       */
      public uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType getPermission(int index) {
        if (permissionBuilder_ == null) {
          return permission_.get(index);
        } else {
          return permissionBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
       */
      public Builder setPermission(
          int index, uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType value) {
        if (permissionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePermissionIsMutable();
          permission_.set(index, value);
          onChanged();
        } else {
          permissionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
       */
      public Builder setPermission(
          int index, uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType.Builder builderForValue) {
        if (permissionBuilder_ == null) {
          ensurePermissionIsMutable();
          permission_.set(index, builderForValue.build());
          onChanged();
        } else {
          permissionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
       */
      public Builder addPermission(uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType value) {
        if (permissionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePermissionIsMutable();
          permission_.add(value);
          onChanged();
        } else {
          permissionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
       */
      public Builder addPermission(
          int index, uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType value) {
        if (permissionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePermissionIsMutable();
          permission_.add(index, value);
          onChanged();
        } else {
          permissionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
       */
      public Builder addPermission(
          uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType.Builder builderForValue) {
        if (permissionBuilder_ == null) {
          ensurePermissionIsMutable();
          permission_.add(builderForValue.build());
          onChanged();
        } else {
          permissionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
       */
      public Builder addPermission(
          int index, uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType.Builder builderForValue) {
        if (permissionBuilder_ == null) {
          ensurePermissionIsMutable();
          permission_.add(index, builderForValue.build());
          onChanged();
        } else {
          permissionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
       */
      public Builder addAllPermission(
          java.lang.Iterable<? extends uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType> values) {
        if (permissionBuilder_ == null) {
          ensurePermissionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, permission_);
          onChanged();
        } else {
          permissionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
       */
      public Builder clearPermission() {
        if (permissionBuilder_ == null) {
          permission_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          permissionBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
       */
      public Builder removePermission(int index) {
        if (permissionBuilder_ == null) {
          ensurePermissionIsMutable();
          permission_.remove(index);
          onChanged();
        } else {
          permissionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
       */
      public uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType.Builder getPermissionBuilder(
          int index) {
        return getPermissionFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
       */
      public uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionTypeOrBuilder getPermissionOrBuilder(
          int index) {
        if (permissionBuilder_ == null) {
          return permission_.get(index);  } else {
          return permissionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
       */
      public java.util.List<? extends uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionTypeOrBuilder> 
           getPermissionOrBuilderList() {
        if (permissionBuilder_ != null) {
          return permissionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(permission_);
        }
      }
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
       */
      public uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType.Builder addPermissionBuilder() {
        return getPermissionFieldBuilder().addBuilder(
            uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType.getDefaultInstance());
      }
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
       */
      public uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType.Builder addPermissionBuilder(
          int index) {
        return getPermissionFieldBuilder().addBuilder(
            index, uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType.getDefaultInstance());
      }
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.UserComplexType.PermissionsType.PermissionType permission = 1 [json_name = "permission", (.buf.validate.field) = { ... }</code>
       */
      public java.util.List<uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType.Builder> 
           getPermissionBuilderList() {
        return getPermissionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType, uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType.Builder, uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionTypeOrBuilder> 
          getPermissionFieldBuilder() {
        if (permissionBuilder_ == null) {
          permissionBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType, uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionType.Builder, uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.PermissionTypeOrBuilder>(
                  permission_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          permission_ = null;
        }
        return permissionBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:event_logging.v4.UserComplexType.PermissionsType)
    }

    // @@protoc_insertion_point(class_scope:event_logging.v4.UserComplexType.PermissionsType)
    private static final uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType();
    }

    public static uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PermissionsType>
        PARSER = new com.google.protobuf.AbstractParser<PermissionsType>() {
      @java.lang.Override
      public PermissionsType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PermissionsType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PermissionsType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int META_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<uk.gov.gchq.event_logging.v4.AnyContentComplexType> meta_;
  /**
   * <pre>
   * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
   * </pre>
   *
   * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [json_name = "meta", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public java.util.List<uk.gov.gchq.event_logging.v4.AnyContentComplexType> getMetaList() {
    return meta_;
  }
  /**
   * <pre>
   * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
   * </pre>
   *
   * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [json_name = "meta", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public java.util.List<? extends uk.gov.gchq.event_logging.v4.AnyContentComplexTypeOrBuilder> 
      getMetaOrBuilderList() {
    return meta_;
  }
  /**
   * <pre>
   * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
   * </pre>
   *
   * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [json_name = "meta", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public int getMetaCount() {
    return meta_.size();
  }
  /**
   * <pre>
   * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
   * </pre>
   *
   * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [json_name = "meta", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.AnyContentComplexType getMeta(int index) {
    return meta_.get(index);
  }
  /**
   * <pre>
   * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
   * </pre>
   *
   * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [json_name = "meta", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.AnyContentComplexTypeOrBuilder getMetaOrBuilder(
      int index) {
    return meta_.get(index);
  }

  public static final int TYPE_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object type_ = "";
  /**
   * <pre>
   * The type of the object in question and specific to the object type from the list above, e.g. a 'Resource' object may have a type such as 'image' or 'script'.
   * </pre>
   *
   * <code>string type = 2 [json_name = "type"];</code>
   * @return The type.
   */
  @java.lang.Override
  public java.lang.String getType() {
    java.lang.Object ref = type_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      type_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The type of the object in question and specific to the object type from the list above, e.g. a 'Resource' object may have a type such as 'image' or 'script'.
   * </pre>
   *
   * <code>string type = 2 [json_name = "type"];</code>
   * @return The bytes for type.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTypeBytes() {
    java.lang.Object ref = type_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      type_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ID_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object id_ = "";
  /**
   * <pre>
   * An identifier for the object, e.g a document ID in a document management system. This ID is likely to be specific to the system that generated the event.
   * </pre>
   *
   * <code>string id = 3 [json_name = "id"];</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * An identifier for the object, e.g a document ID in a document management system. This ID is likely to be specific to the system that generated the event.
   * </pre>
   *
   * <code>string id = 3 [json_name = "id"];</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NAME_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * The name of the object, e.g. a filename.
   * </pre>
   *
   * <code>string name = 4 [json_name = "name"];</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the object, e.g. a filename.
   * </pre>
   *
   * <code>string name = 4 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DESCRIPTION_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object description_ = "";
  /**
   * <pre>
   * Human readable description of what the object is.
   * </pre>
   *
   * <code>string description = 5 [json_name = "description"];</code>
   * @return The description.
   */
  @java.lang.Override
  public java.lang.String getDescription() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      description_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Human readable description of what the object is.
   * </pre>
   *
   * <code>string description = 5 [json_name = "description"];</code>
   * @return The bytes for description.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDescriptionBytes() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      description_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CLASSIFICATION_FIELD_NUMBER = 6;
  private uk.gov.gchq.event_logging.v4.ClassificationComplexType classification_;
  /**
   * <pre>
   * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
   * </pre>
   *
   * <code>.event_logging.v4.ClassificationComplexType classification = 6 [json_name = "classification"];</code>
   * @return Whether the classification field is set.
   */
  @java.lang.Override
  public boolean hasClassification() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
   * </pre>
   *
   * <code>.event_logging.v4.ClassificationComplexType classification = 6 [json_name = "classification"];</code>
   * @return The classification.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.ClassificationComplexType getClassification() {
    return classification_ == null ? uk.gov.gchq.event_logging.v4.ClassificationComplexType.getDefaultInstance() : classification_;
  }
  /**
   * <pre>
   * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
   * </pre>
   *
   * <code>.event_logging.v4.ClassificationComplexType classification = 6 [json_name = "classification"];</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.ClassificationComplexTypeOrBuilder getClassificationOrBuilder() {
    return classification_ == null ? uk.gov.gchq.event_logging.v4.ClassificationComplexType.getDefaultInstance() : classification_;
  }

  public static final int STATE_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private volatile java.lang.Object state_ = "";
  /**
   * <pre>
   * Any state information about the object, e.g. 'Archived'.
   * </pre>
   *
   * <code>string state = 7 [json_name = "state"];</code>
   * @return The state.
   */
  @java.lang.Override
  public java.lang.String getState() {
    java.lang.Object ref = state_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      state_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Any state information about the object, e.g. 'Archived'.
   * </pre>
   *
   * <code>string state = 7 [json_name = "state"];</code>
   * @return The bytes for state.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getStateBytes() {
    java.lang.Object ref = state_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      state_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int GROUPS_FIELD_NUMBER = 8;
  private uk.gov.gchq.event_logging.v4.GroupsComplexType groups_;
  /**
   * <pre>
   * Any groups associated with the object, e.g. group membership of a user account.
   * </pre>
   *
   * <code>.event_logging.v4.GroupsComplexType groups = 8 [json_name = "groups"];</code>
   * @return Whether the groups field is set.
   */
  @java.lang.Override
  public boolean hasGroups() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Any groups associated with the object, e.g. group membership of a user account.
   * </pre>
   *
   * <code>.event_logging.v4.GroupsComplexType groups = 8 [json_name = "groups"];</code>
   * @return The groups.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.GroupsComplexType getGroups() {
    return groups_ == null ? uk.gov.gchq.event_logging.v4.GroupsComplexType.getDefaultInstance() : groups_;
  }
  /**
   * <pre>
   * Any groups associated with the object, e.g. group membership of a user account.
   * </pre>
   *
   * <code>.event_logging.v4.GroupsComplexType groups = 8 [json_name = "groups"];</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.GroupsComplexTypeOrBuilder getGroupsOrBuilder() {
    return groups_ == null ? uk.gov.gchq.event_logging.v4.GroupsComplexType.getDefaultInstance() : groups_;
  }

  public static final int PERMISSIONS_FIELD_NUMBER = 9;
  private uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType permissions_;
  /**
   * <pre>
   * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
   * </pre>
   *
   * <code>.event_logging.v4.UserComplexType.PermissionsType permissions = 9 [json_name = "permissions"];</code>
   * @return Whether the permissions field is set.
   */
  @java.lang.Override
  public boolean hasPermissions() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
   * </pre>
   *
   * <code>.event_logging.v4.UserComplexType.PermissionsType permissions = 9 [json_name = "permissions"];</code>
   * @return The permissions.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType getPermissions() {
    return permissions_ == null ? uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.getDefaultInstance() : permissions_;
  }
  /**
   * <pre>
   * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
   * </pre>
   *
   * <code>.event_logging.v4.UserComplexType.PermissionsType permissions = 9 [json_name = "permissions"];</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsTypeOrBuilder getPermissionsOrBuilder() {
    return permissions_ == null ? uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.getDefaultInstance() : permissions_;
  }

  public static final int TAGS_FIELD_NUMBER = 10;
  private uk.gov.gchq.event_logging.v4.MetaDataTagsComplexType tags_;
  /**
   * <pre>
   * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
   * </pre>
   *
   * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10 [json_name = "tags"];</code>
   * @return Whether the tags field is set.
   */
  @java.lang.Override
  public boolean hasTags() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
   * </pre>
   *
   * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10 [json_name = "tags"];</code>
   * @return The tags.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.MetaDataTagsComplexType getTags() {
    return tags_ == null ? uk.gov.gchq.event_logging.v4.MetaDataTagsComplexType.getDefaultInstance() : tags_;
  }
  /**
   * <pre>
   * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
   * </pre>
   *
   * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10 [json_name = "tags"];</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.MetaDataTagsComplexTypeOrBuilder getTagsOrBuilder() {
    return tags_ == null ? uk.gov.gchq.event_logging.v4.MetaDataTagsComplexType.getDefaultInstance() : tags_;
  }

  public static final int DOMAIN_FIELD_NUMBER = 11;
  @SuppressWarnings("serial")
  private volatile java.lang.Object domain_ = "";
  /**
   * <pre>
   * The security domain that the user exists within, e.g. an Active Directory or OpenLDAP domain.
   * </pre>
   *
   * <code>string domain = 11 [json_name = "domain"];</code>
   * @return The domain.
   */
  @java.lang.Override
  public java.lang.String getDomain() {
    java.lang.Object ref = domain_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      domain_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The security domain that the user exists within, e.g. an Active Directory or OpenLDAP domain.
   * </pre>
   *
   * <code>string domain = 11 [json_name = "domain"];</code>
   * @return The bytes for domain.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDomainBytes() {
    java.lang.Object ref = domain_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      domain_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int EMAIL_ADDRESS_FIELD_NUMBER = 12;
  @SuppressWarnings("serial")
  private volatile java.lang.Object emailAddress_ = "";
  /**
   * <pre>
   * The email address of the user.
   * </pre>
   *
   * <code>string email_address = 12 [json_name = "emailAddress"];</code>
   * @return The emailAddress.
   */
  @java.lang.Override
  public java.lang.String getEmailAddress() {
    java.lang.Object ref = emailAddress_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      emailAddress_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The email address of the user.
   * </pre>
   *
   * <code>string email_address = 12 [json_name = "emailAddress"];</code>
   * @return The bytes for emailAddress.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getEmailAddressBytes() {
    java.lang.Object ref = emailAddress_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      emailAddress_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int USER_DETAILS_FIELD_NUMBER = 13;
  private uk.gov.gchq.event_logging.v4.UserDetailsComplexType userDetails_;
  /**
   * <pre>
   * The details of the person represented by the user account or identity.
   * </pre>
   *
   * <code>.event_logging.v4.UserDetailsComplexType user_details = 13 [json_name = "userDetails"];</code>
   * @return Whether the userDetails field is set.
   */
  @java.lang.Override
  public boolean hasUserDetails() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * The details of the person represented by the user account or identity.
   * </pre>
   *
   * <code>.event_logging.v4.UserDetailsComplexType user_details = 13 [json_name = "userDetails"];</code>
   * @return The userDetails.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.UserDetailsComplexType getUserDetails() {
    return userDetails_ == null ? uk.gov.gchq.event_logging.v4.UserDetailsComplexType.getDefaultInstance() : userDetails_;
  }
  /**
   * <pre>
   * The details of the person represented by the user account or identity.
   * </pre>
   *
   * <code>.event_logging.v4.UserDetailsComplexType user_details = 13 [json_name = "userDetails"];</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.UserDetailsComplexTypeOrBuilder getUserDetailsOrBuilder() {
    return userDetails_ == null ? uk.gov.gchq.event_logging.v4.UserDetailsComplexType.getDefaultInstance() : userDetails_;
  }

  public static final int DATA_FIELD_NUMBER = 14;
  @SuppressWarnings("serial")
  private java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> data_;
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 14 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> getDataList() {
    return data_;
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 14 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public java.util.List<? extends uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> 
      getDataOrBuilderList() {
    return data_;
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 14 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public int getDataCount() {
    return data_.size();
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 14 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.DataComplexType getData(int index) {
    return data_.get(index);
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 14 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder getDataOrBuilder(
      int index) {
    return data_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < meta_.size(); i++) {
      output.writeMessage(1, meta_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(type_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, type_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 3, id_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 4, name_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(description_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 5, description_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(6, getClassification());
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(state_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 7, state_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(8, getGroups());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(9, getPermissions());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeMessage(10, getTags());
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(domain_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 11, domain_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(emailAddress_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 12, emailAddress_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeMessage(13, getUserDetails());
    }
    for (int i = 0; i < data_.size(); i++) {
      output.writeMessage(14, data_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < meta_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, meta_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(type_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, type_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(3, id_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(4, name_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(description_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(5, description_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getClassification());
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(state_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(7, state_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getGroups());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getPermissions());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getTags());
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(domain_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(11, domain_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(emailAddress_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(12, emailAddress_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, getUserDetails());
    }
    for (int i = 0; i < data_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, data_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof uk.gov.gchq.event_logging.v4.UserComplexType)) {
      return super.equals(obj);
    }
    uk.gov.gchq.event_logging.v4.UserComplexType other = (uk.gov.gchq.event_logging.v4.UserComplexType) obj;

    if (!getMetaList()
        .equals(other.getMetaList())) return false;
    if (!getType()
        .equals(other.getType())) return false;
    if (!getId()
        .equals(other.getId())) return false;
    if (!getName()
        .equals(other.getName())) return false;
    if (!getDescription()
        .equals(other.getDescription())) return false;
    if (hasClassification() != other.hasClassification()) return false;
    if (hasClassification()) {
      if (!getClassification()
          .equals(other.getClassification())) return false;
    }
    if (!getState()
        .equals(other.getState())) return false;
    if (hasGroups() != other.hasGroups()) return false;
    if (hasGroups()) {
      if (!getGroups()
          .equals(other.getGroups())) return false;
    }
    if (hasPermissions() != other.hasPermissions()) return false;
    if (hasPermissions()) {
      if (!getPermissions()
          .equals(other.getPermissions())) return false;
    }
    if (hasTags() != other.hasTags()) return false;
    if (hasTags()) {
      if (!getTags()
          .equals(other.getTags())) return false;
    }
    if (!getDomain()
        .equals(other.getDomain())) return false;
    if (!getEmailAddress()
        .equals(other.getEmailAddress())) return false;
    if (hasUserDetails() != other.hasUserDetails()) return false;
    if (hasUserDetails()) {
      if (!getUserDetails()
          .equals(other.getUserDetails())) return false;
    }
    if (!getDataList()
        .equals(other.getDataList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getMetaCount() > 0) {
      hash = (37 * hash) + META_FIELD_NUMBER;
      hash = (53 * hash) + getMetaList().hashCode();
    }
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getType().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
    hash = (53 * hash) + getDescription().hashCode();
    if (hasClassification()) {
      hash = (37 * hash) + CLASSIFICATION_FIELD_NUMBER;
      hash = (53 * hash) + getClassification().hashCode();
    }
    hash = (37 * hash) + STATE_FIELD_NUMBER;
    hash = (53 * hash) + getState().hashCode();
    if (hasGroups()) {
      hash = (37 * hash) + GROUPS_FIELD_NUMBER;
      hash = (53 * hash) + getGroups().hashCode();
    }
    if (hasPermissions()) {
      hash = (37 * hash) + PERMISSIONS_FIELD_NUMBER;
      hash = (53 * hash) + getPermissions().hashCode();
    }
    if (hasTags()) {
      hash = (37 * hash) + TAGS_FIELD_NUMBER;
      hash = (53 * hash) + getTags().hashCode();
    }
    hash = (37 * hash) + DOMAIN_FIELD_NUMBER;
    hash = (53 * hash) + getDomain().hashCode();
    hash = (37 * hash) + EMAIL_ADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + getEmailAddress().hashCode();
    if (hasUserDetails()) {
      hash = (37 * hash) + USER_DETAILS_FIELD_NUMBER;
      hash = (53 * hash) + getUserDetails().hashCode();
    }
    if (getDataCount() > 0) {
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getDataList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static uk.gov.gchq.event_logging.v4.UserComplexType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.UserComplexType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.UserComplexType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.UserComplexType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.UserComplexType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.UserComplexType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.UserComplexType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static uk.gov.gchq.event_logging.v4.UserComplexType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static uk.gov.gchq.event_logging.v4.UserComplexType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static uk.gov.gchq.event_logging.v4.UserComplexType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.UserComplexType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static uk.gov.gchq.event_logging.v4.UserComplexType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(uk.gov.gchq.event_logging.v4.UserComplexType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Describes a user entity that may represent a human or be a processing user account.
   * </pre>
   *
   * Protobuf type {@code event_logging.v4.UserComplexType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:event_logging.v4.UserComplexType)
      uk.gov.gchq.event_logging.v4.UserComplexTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.gov.gchq.event_logging.v4.UserComplexTypeProto.internal_static_event_logging_v4_UserComplexType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.gov.gchq.event_logging.v4.UserComplexTypeProto.internal_static_event_logging_v4_UserComplexType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              uk.gov.gchq.event_logging.v4.UserComplexType.class, uk.gov.gchq.event_logging.v4.UserComplexType.Builder.class);
    }

    // Construct using uk.gov.gchq.event_logging.v4.UserComplexType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getMetaFieldBuilder();
        getClassificationFieldBuilder();
        getGroupsFieldBuilder();
        getPermissionsFieldBuilder();
        getTagsFieldBuilder();
        getUserDetailsFieldBuilder();
        getDataFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (metaBuilder_ == null) {
        meta_ = java.util.Collections.emptyList();
      } else {
        meta_ = null;
        metaBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = "";
      id_ = "";
      name_ = "";
      description_ = "";
      classification_ = null;
      if (classificationBuilder_ != null) {
        classificationBuilder_.dispose();
        classificationBuilder_ = null;
      }
      state_ = "";
      groups_ = null;
      if (groupsBuilder_ != null) {
        groupsBuilder_.dispose();
        groupsBuilder_ = null;
      }
      permissions_ = null;
      if (permissionsBuilder_ != null) {
        permissionsBuilder_.dispose();
        permissionsBuilder_ = null;
      }
      tags_ = null;
      if (tagsBuilder_ != null) {
        tagsBuilder_.dispose();
        tagsBuilder_ = null;
      }
      domain_ = "";
      emailAddress_ = "";
      userDetails_ = null;
      if (userDetailsBuilder_ != null) {
        userDetailsBuilder_.dispose();
        userDetailsBuilder_ = null;
      }
      if (dataBuilder_ == null) {
        data_ = java.util.Collections.emptyList();
      } else {
        data_ = null;
        dataBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00002000);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return uk.gov.gchq.event_logging.v4.UserComplexTypeProto.internal_static_event_logging_v4_UserComplexType_descriptor;
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.UserComplexType getDefaultInstanceForType() {
      return uk.gov.gchq.event_logging.v4.UserComplexType.getDefaultInstance();
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.UserComplexType build() {
      uk.gov.gchq.event_logging.v4.UserComplexType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.UserComplexType buildPartial() {
      uk.gov.gchq.event_logging.v4.UserComplexType result = new uk.gov.gchq.event_logging.v4.UserComplexType(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(uk.gov.gchq.event_logging.v4.UserComplexType result) {
      if (metaBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          meta_ = java.util.Collections.unmodifiableList(meta_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.meta_ = meta_;
      } else {
        result.meta_ = metaBuilder_.build();
      }
      if (dataBuilder_ == null) {
        if (((bitField0_ & 0x00002000) != 0)) {
          data_ = java.util.Collections.unmodifiableList(data_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.data_ = data_;
      } else {
        result.data_ = dataBuilder_.build();
      }
    }

    private void buildPartial0(uk.gov.gchq.event_logging.v4.UserComplexType result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.type_ = type_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.id_ = id_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.description_ = description_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.classification_ = classificationBuilder_ == null
            ? classification_
            : classificationBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.state_ = state_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.groups_ = groupsBuilder_ == null
            ? groups_
            : groupsBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.permissions_ = permissionsBuilder_ == null
            ? permissions_
            : permissionsBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.tags_ = tagsBuilder_ == null
            ? tags_
            : tagsBuilder_.build();
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.domain_ = domain_;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.emailAddress_ = emailAddress_;
      }
      if (((from_bitField0_ & 0x00001000) != 0)) {
        result.userDetails_ = userDetailsBuilder_ == null
            ? userDetails_
            : userDetailsBuilder_.build();
        to_bitField0_ |= 0x00000010;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof uk.gov.gchq.event_logging.v4.UserComplexType) {
        return mergeFrom((uk.gov.gchq.event_logging.v4.UserComplexType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(uk.gov.gchq.event_logging.v4.UserComplexType other) {
      if (other == uk.gov.gchq.event_logging.v4.UserComplexType.getDefaultInstance()) return this;
      if (metaBuilder_ == null) {
        if (!other.meta_.isEmpty()) {
          if (meta_.isEmpty()) {
            meta_ = other.meta_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureMetaIsMutable();
            meta_.addAll(other.meta_);
          }
          onChanged();
        }
      } else {
        if (!other.meta_.isEmpty()) {
          if (metaBuilder_.isEmpty()) {
            metaBuilder_.dispose();
            metaBuilder_ = null;
            meta_ = other.meta_;
            bitField0_ = (bitField0_ & ~0x00000001);
            metaBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getMetaFieldBuilder() : null;
          } else {
            metaBuilder_.addAllMessages(other.meta_);
          }
        }
      }
      if (!other.getType().isEmpty()) {
        type_ = other.type_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getDescription().isEmpty()) {
        description_ = other.description_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (other.hasClassification()) {
        mergeClassification(other.getClassification());
      }
      if (!other.getState().isEmpty()) {
        state_ = other.state_;
        bitField0_ |= 0x00000040;
        onChanged();
      }
      if (other.hasGroups()) {
        mergeGroups(other.getGroups());
      }
      if (other.hasPermissions()) {
        mergePermissions(other.getPermissions());
      }
      if (other.hasTags()) {
        mergeTags(other.getTags());
      }
      if (!other.getDomain().isEmpty()) {
        domain_ = other.domain_;
        bitField0_ |= 0x00000400;
        onChanged();
      }
      if (!other.getEmailAddress().isEmpty()) {
        emailAddress_ = other.emailAddress_;
        bitField0_ |= 0x00000800;
        onChanged();
      }
      if (other.hasUserDetails()) {
        mergeUserDetails(other.getUserDetails());
      }
      if (dataBuilder_ == null) {
        if (!other.data_.isEmpty()) {
          if (data_.isEmpty()) {
            data_ = other.data_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureDataIsMutable();
            data_.addAll(other.data_);
          }
          onChanged();
        }
      } else {
        if (!other.data_.isEmpty()) {
          if (dataBuilder_.isEmpty()) {
            dataBuilder_.dispose();
            dataBuilder_ = null;
            data_ = other.data_;
            bitField0_ = (bitField0_ & ~0x00002000);
            dataBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getDataFieldBuilder() : null;
          } else {
            dataBuilder_.addAllMessages(other.data_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              uk.gov.gchq.event_logging.v4.AnyContentComplexType m =
                  input.readMessage(
                      uk.gov.gchq.event_logging.v4.AnyContentComplexType.parser(),
                      extensionRegistry);
              if (metaBuilder_ == null) {
                ensureMetaIsMutable();
                meta_.add(m);
              } else {
                metaBuilder_.addMessage(m);
              }
              break;
            } // case 10
            case 18: {
              type_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              id_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              description_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getClassificationFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 58: {
              state_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000040;
              break;
            } // case 58
            case 66: {
              input.readMessage(
                  getGroupsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000080;
              break;
            } // case 66
            case 74: {
              input.readMessage(
                  getPermissionsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000100;
              break;
            } // case 74
            case 82: {
              input.readMessage(
                  getTagsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000200;
              break;
            } // case 82
            case 90: {
              domain_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000400;
              break;
            } // case 90
            case 98: {
              emailAddress_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000800;
              break;
            } // case 98
            case 106: {
              input.readMessage(
                  getUserDetailsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00001000;
              break;
            } // case 106
            case 114: {
              uk.gov.gchq.event_logging.v4.DataComplexType m =
                  input.readMessage(
                      uk.gov.gchq.event_logging.v4.DataComplexType.parser(),
                      extensionRegistry);
              if (dataBuilder_ == null) {
                ensureDataIsMutable();
                data_.add(m);
              } else {
                dataBuilder_.addMessage(m);
              }
              break;
            } // case 114
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<uk.gov.gchq.event_logging.v4.AnyContentComplexType> meta_ =
      java.util.Collections.emptyList();
    private void ensureMetaIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        meta_ = new java.util.ArrayList<uk.gov.gchq.event_logging.v4.AnyContentComplexType>(meta_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        uk.gov.gchq.event_logging.v4.AnyContentComplexType, uk.gov.gchq.event_logging.v4.AnyContentComplexType.Builder, uk.gov.gchq.event_logging.v4.AnyContentComplexTypeOrBuilder> metaBuilder_;

    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [json_name = "meta", (.buf.validate.field) = { ... }</code>
     */
    public java.util.List<uk.gov.gchq.event_logging.v4.AnyContentComplexType> getMetaList() {
      if (metaBuilder_ == null) {
        return java.util.Collections.unmodifiableList(meta_);
      } else {
        return metaBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [json_name = "meta", (.buf.validate.field) = { ... }</code>
     */
    public int getMetaCount() {
      if (metaBuilder_ == null) {
        return meta_.size();
      } else {
        return metaBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [json_name = "meta", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.AnyContentComplexType getMeta(int index) {
      if (metaBuilder_ == null) {
        return meta_.get(index);
      } else {
        return metaBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [json_name = "meta", (.buf.validate.field) = { ... }</code>
     */
    public Builder setMeta(
        int index, uk.gov.gchq.event_logging.v4.AnyContentComplexType value) {
      if (metaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetaIsMutable();
        meta_.set(index, value);
        onChanged();
      } else {
        metaBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [json_name = "meta", (.buf.validate.field) = { ... }</code>
     */
    public Builder setMeta(
        int index, uk.gov.gchq.event_logging.v4.AnyContentComplexType.Builder builderForValue) {
      if (metaBuilder_ == null) {
        ensureMetaIsMutable();
        meta_.set(index, builderForValue.build());
        onChanged();
      } else {
        metaBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [json_name = "meta", (.buf.validate.field) = { ... }</code>
     */
    public Builder addMeta(uk.gov.gchq.event_logging.v4.AnyContentComplexType value) {
      if (metaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetaIsMutable();
        meta_.add(value);
        onChanged();
      } else {
        metaBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [json_name = "meta", (.buf.validate.field) = { ... }</code>
     */
    public Builder addMeta(
        int index, uk.gov.gchq.event_logging.v4.AnyContentComplexType value) {
      if (metaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMetaIsMutable();
        meta_.add(index, value);
        onChanged();
      } else {
        metaBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [json_name = "meta", (.buf.validate.field) = { ... }</code>
     */
    public Builder addMeta(
        uk.gov.gchq.event_logging.v4.AnyContentComplexType.Builder builderForValue) {
      if (metaBuilder_ == null) {
        ensureMetaIsMutable();
        meta_.add(builderForValue.build());
        onChanged();
      } else {
        metaBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [json_name = "meta", (.buf.validate.field) = { ... }</code>
     */
    public Builder addMeta(
        int index, uk.gov.gchq.event_logging.v4.AnyContentComplexType.Builder builderForValue) {
      if (metaBuilder_ == null) {
        ensureMetaIsMutable();
        meta_.add(index, builderForValue.build());
        onChanged();
      } else {
        metaBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [json_name = "meta", (.buf.validate.field) = { ... }</code>
     */
    public Builder addAllMeta(
        java.lang.Iterable<? extends uk.gov.gchq.event_logging.v4.AnyContentComplexType> values) {
      if (metaBuilder_ == null) {
        ensureMetaIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, meta_);
        onChanged();
      } else {
        metaBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [json_name = "meta", (.buf.validate.field) = { ... }</code>
     */
    public Builder clearMeta() {
      if (metaBuilder_ == null) {
        meta_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        metaBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [json_name = "meta", (.buf.validate.field) = { ... }</code>
     */
    public Builder removeMeta(int index) {
      if (metaBuilder_ == null) {
        ensureMetaIsMutable();
        meta_.remove(index);
        onChanged();
      } else {
        metaBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [json_name = "meta", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.AnyContentComplexType.Builder getMetaBuilder(
        int index) {
      return getMetaFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [json_name = "meta", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.AnyContentComplexTypeOrBuilder getMetaOrBuilder(
        int index) {
      if (metaBuilder_ == null) {
        return meta_.get(index);  } else {
        return metaBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [json_name = "meta", (.buf.validate.field) = { ... }</code>
     */
    public java.util.List<? extends uk.gov.gchq.event_logging.v4.AnyContentComplexTypeOrBuilder> 
         getMetaOrBuilderList() {
      if (metaBuilder_ != null) {
        return metaBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(meta_);
      }
    }
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [json_name = "meta", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.AnyContentComplexType.Builder addMetaBuilder() {
      return getMetaFieldBuilder().addBuilder(
          uk.gov.gchq.event_logging.v4.AnyContentComplexType.getDefaultInstance());
    }
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [json_name = "meta", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.AnyContentComplexType.Builder addMetaBuilder(
        int index) {
      return getMetaFieldBuilder().addBuilder(
          index, uk.gov.gchq.event_logging.v4.AnyContentComplexType.getDefaultInstance());
    }
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [json_name = "meta", (.buf.validate.field) = { ... }</code>
     */
    public java.util.List<uk.gov.gchq.event_logging.v4.AnyContentComplexType.Builder> 
         getMetaBuilderList() {
      return getMetaFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        uk.gov.gchq.event_logging.v4.AnyContentComplexType, uk.gov.gchq.event_logging.v4.AnyContentComplexType.Builder, uk.gov.gchq.event_logging.v4.AnyContentComplexTypeOrBuilder> 
        getMetaFieldBuilder() {
      if (metaBuilder_ == null) {
        metaBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            uk.gov.gchq.event_logging.v4.AnyContentComplexType, uk.gov.gchq.event_logging.v4.AnyContentComplexType.Builder, uk.gov.gchq.event_logging.v4.AnyContentComplexTypeOrBuilder>(
                meta_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        meta_ = null;
      }
      return metaBuilder_;
    }

    private java.lang.Object type_ = "";
    /**
     * <pre>
     * The type of the object in question and specific to the object type from the list above, e.g. a 'Resource' object may have a type such as 'image' or 'script'.
     * </pre>
     *
     * <code>string type = 2 [json_name = "type"];</code>
     * @return The type.
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The type of the object in question and specific to the object type from the list above, e.g. a 'Resource' object may have a type such as 'image' or 'script'.
     * </pre>
     *
     * <code>string type = 2 [json_name = "type"];</code>
     * @return The bytes for type.
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The type of the object in question and specific to the object type from the list above, e.g. a 'Resource' object may have a type such as 'image' or 'script'.
     * </pre>
     *
     * <code>string type = 2 [json_name = "type"];</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      type_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of the object in question and specific to the object type from the list above, e.g. a 'Resource' object may have a type such as 'image' or 'script'.
     * </pre>
     *
     * <code>string type = 2 [json_name = "type"];</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      type_ = getDefaultInstance().getType();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of the object in question and specific to the object type from the list above, e.g. a 'Resource' object may have a type such as 'image' or 'script'.
     * </pre>
     *
     * <code>string type = 2 [json_name = "type"];</code>
     * @param value The bytes for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      type_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object id_ = "";
    /**
     * <pre>
     * An identifier for the object, e.g a document ID in a document management system. This ID is likely to be specific to the system that generated the event.
     * </pre>
     *
     * <code>string id = 3 [json_name = "id"];</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * An identifier for the object, e.g a document ID in a document management system. This ID is likely to be specific to the system that generated the event.
     * </pre>
     *
     * <code>string id = 3 [json_name = "id"];</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * An identifier for the object, e.g a document ID in a document management system. This ID is likely to be specific to the system that generated the event.
     * </pre>
     *
     * <code>string id = 3 [json_name = "id"];</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      id_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An identifier for the object, e.g a document ID in a document management system. This ID is likely to be specific to the system that generated the event.
     * </pre>
     *
     * <code>string id = 3 [json_name = "id"];</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      id_ = getDefaultInstance().getId();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An identifier for the object, e.g a document ID in a document management system. This ID is likely to be specific to the system that generated the event.
     * </pre>
     *
     * <code>string id = 3 [json_name = "id"];</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      id_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * The name of the object, e.g. a filename.
     * </pre>
     *
     * <code>string name = 4 [json_name = "name"];</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the object, e.g. a filename.
     * </pre>
     *
     * <code>string name = 4 [json_name = "name"];</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the object, e.g. a filename.
     * </pre>
     *
     * <code>string name = 4 [json_name = "name"];</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the object, e.g. a filename.
     * </pre>
     *
     * <code>string name = 4 [json_name = "name"];</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the object, e.g. a filename.
     * </pre>
     *
     * <code>string name = 4 [json_name = "name"];</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object description_ = "";
    /**
     * <pre>
     * Human readable description of what the object is.
     * </pre>
     *
     * <code>string description = 5 [json_name = "description"];</code>
     * @return The description.
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Human readable description of what the object is.
     * </pre>
     *
     * <code>string description = 5 [json_name = "description"];</code>
     * @return The bytes for description.
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Human readable description of what the object is.
     * </pre>
     *
     * <code>string description = 5 [json_name = "description"];</code>
     * @param value The description to set.
     * @return This builder for chaining.
     */
    public Builder setDescription(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      description_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Human readable description of what the object is.
     * </pre>
     *
     * <code>string description = 5 [json_name = "description"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDescription() {
      description_ = getDefaultInstance().getDescription();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Human readable description of what the object is.
     * </pre>
     *
     * <code>string description = 5 [json_name = "description"];</code>
     * @param value The bytes for description to set.
     * @return This builder for chaining.
     */
    public Builder setDescriptionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      description_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private uk.gov.gchq.event_logging.v4.ClassificationComplexType classification_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.ClassificationComplexType, uk.gov.gchq.event_logging.v4.ClassificationComplexType.Builder, uk.gov.gchq.event_logging.v4.ClassificationComplexTypeOrBuilder> classificationBuilder_;
    /**
     * <pre>
     * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 6 [json_name = "classification"];</code>
     * @return Whether the classification field is set.
     */
    public boolean hasClassification() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 6 [json_name = "classification"];</code>
     * @return The classification.
     */
    public uk.gov.gchq.event_logging.v4.ClassificationComplexType getClassification() {
      if (classificationBuilder_ == null) {
        return classification_ == null ? uk.gov.gchq.event_logging.v4.ClassificationComplexType.getDefaultInstance() : classification_;
      } else {
        return classificationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 6 [json_name = "classification"];</code>
     */
    public Builder setClassification(uk.gov.gchq.event_logging.v4.ClassificationComplexType value) {
      if (classificationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        classification_ = value;
      } else {
        classificationBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 6 [json_name = "classification"];</code>
     */
    public Builder setClassification(
        uk.gov.gchq.event_logging.v4.ClassificationComplexType.Builder builderForValue) {
      if (classificationBuilder_ == null) {
        classification_ = builderForValue.build();
      } else {
        classificationBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 6 [json_name = "classification"];</code>
     */
    public Builder mergeClassification(uk.gov.gchq.event_logging.v4.ClassificationComplexType value) {
      if (classificationBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          classification_ != null &&
          classification_ != uk.gov.gchq.event_logging.v4.ClassificationComplexType.getDefaultInstance()) {
          getClassificationBuilder().mergeFrom(value);
        } else {
          classification_ = value;
        }
      } else {
        classificationBuilder_.mergeFrom(value);
      }
      if (classification_ != null) {
        bitField0_ |= 0x00000020;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 6 [json_name = "classification"];</code>
     */
    public Builder clearClassification() {
      bitField0_ = (bitField0_ & ~0x00000020);
      classification_ = null;
      if (classificationBuilder_ != null) {
        classificationBuilder_.dispose();
        classificationBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 6 [json_name = "classification"];</code>
     */
    public uk.gov.gchq.event_logging.v4.ClassificationComplexType.Builder getClassificationBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getClassificationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 6 [json_name = "classification"];</code>
     */
    public uk.gov.gchq.event_logging.v4.ClassificationComplexTypeOrBuilder getClassificationOrBuilder() {
      if (classificationBuilder_ != null) {
        return classificationBuilder_.getMessageOrBuilder();
      } else {
        return classification_ == null ?
            uk.gov.gchq.event_logging.v4.ClassificationComplexType.getDefaultInstance() : classification_;
      }
    }
    /**
     * <pre>
     * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 6 [json_name = "classification"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.ClassificationComplexType, uk.gov.gchq.event_logging.v4.ClassificationComplexType.Builder, uk.gov.gchq.event_logging.v4.ClassificationComplexTypeOrBuilder> 
        getClassificationFieldBuilder() {
      if (classificationBuilder_ == null) {
        classificationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.ClassificationComplexType, uk.gov.gchq.event_logging.v4.ClassificationComplexType.Builder, uk.gov.gchq.event_logging.v4.ClassificationComplexTypeOrBuilder>(
                getClassification(),
                getParentForChildren(),
                isClean());
        classification_ = null;
      }
      return classificationBuilder_;
    }

    private java.lang.Object state_ = "";
    /**
     * <pre>
     * Any state information about the object, e.g. 'Archived'.
     * </pre>
     *
     * <code>string state = 7 [json_name = "state"];</code>
     * @return The state.
     */
    public java.lang.String getState() {
      java.lang.Object ref = state_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        state_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Any state information about the object, e.g. 'Archived'.
     * </pre>
     *
     * <code>string state = 7 [json_name = "state"];</code>
     * @return The bytes for state.
     */
    public com.google.protobuf.ByteString
        getStateBytes() {
      java.lang.Object ref = state_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        state_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Any state information about the object, e.g. 'Archived'.
     * </pre>
     *
     * <code>string state = 7 [json_name = "state"];</code>
     * @param value The state to set.
     * @return This builder for chaining.
     */
    public Builder setState(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      state_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Any state information about the object, e.g. 'Archived'.
     * </pre>
     *
     * <code>string state = 7 [json_name = "state"];</code>
     * @return This builder for chaining.
     */
    public Builder clearState() {
      state_ = getDefaultInstance().getState();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Any state information about the object, e.g. 'Archived'.
     * </pre>
     *
     * <code>string state = 7 [json_name = "state"];</code>
     * @param value The bytes for state to set.
     * @return This builder for chaining.
     */
    public Builder setStateBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      state_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }

    private uk.gov.gchq.event_logging.v4.GroupsComplexType groups_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.GroupsComplexType, uk.gov.gchq.event_logging.v4.GroupsComplexType.Builder, uk.gov.gchq.event_logging.v4.GroupsComplexTypeOrBuilder> groupsBuilder_;
    /**
     * <pre>
     * Any groups associated with the object, e.g. group membership of a user account.
     * </pre>
     *
     * <code>.event_logging.v4.GroupsComplexType groups = 8 [json_name = "groups"];</code>
     * @return Whether the groups field is set.
     */
    public boolean hasGroups() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * Any groups associated with the object, e.g. group membership of a user account.
     * </pre>
     *
     * <code>.event_logging.v4.GroupsComplexType groups = 8 [json_name = "groups"];</code>
     * @return The groups.
     */
    public uk.gov.gchq.event_logging.v4.GroupsComplexType getGroups() {
      if (groupsBuilder_ == null) {
        return groups_ == null ? uk.gov.gchq.event_logging.v4.GroupsComplexType.getDefaultInstance() : groups_;
      } else {
        return groupsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Any groups associated with the object, e.g. group membership of a user account.
     * </pre>
     *
     * <code>.event_logging.v4.GroupsComplexType groups = 8 [json_name = "groups"];</code>
     */
    public Builder setGroups(uk.gov.gchq.event_logging.v4.GroupsComplexType value) {
      if (groupsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        groups_ = value;
      } else {
        groupsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Any groups associated with the object, e.g. group membership of a user account.
     * </pre>
     *
     * <code>.event_logging.v4.GroupsComplexType groups = 8 [json_name = "groups"];</code>
     */
    public Builder setGroups(
        uk.gov.gchq.event_logging.v4.GroupsComplexType.Builder builderForValue) {
      if (groupsBuilder_ == null) {
        groups_ = builderForValue.build();
      } else {
        groupsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Any groups associated with the object, e.g. group membership of a user account.
     * </pre>
     *
     * <code>.event_logging.v4.GroupsComplexType groups = 8 [json_name = "groups"];</code>
     */
    public Builder mergeGroups(uk.gov.gchq.event_logging.v4.GroupsComplexType value) {
      if (groupsBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0) &&
          groups_ != null &&
          groups_ != uk.gov.gchq.event_logging.v4.GroupsComplexType.getDefaultInstance()) {
          getGroupsBuilder().mergeFrom(value);
        } else {
          groups_ = value;
        }
      } else {
        groupsBuilder_.mergeFrom(value);
      }
      if (groups_ != null) {
        bitField0_ |= 0x00000080;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Any groups associated with the object, e.g. group membership of a user account.
     * </pre>
     *
     * <code>.event_logging.v4.GroupsComplexType groups = 8 [json_name = "groups"];</code>
     */
    public Builder clearGroups() {
      bitField0_ = (bitField0_ & ~0x00000080);
      groups_ = null;
      if (groupsBuilder_ != null) {
        groupsBuilder_.dispose();
        groupsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Any groups associated with the object, e.g. group membership of a user account.
     * </pre>
     *
     * <code>.event_logging.v4.GroupsComplexType groups = 8 [json_name = "groups"];</code>
     */
    public uk.gov.gchq.event_logging.v4.GroupsComplexType.Builder getGroupsBuilder() {
      bitField0_ |= 0x00000080;
      onChanged();
      return getGroupsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Any groups associated with the object, e.g. group membership of a user account.
     * </pre>
     *
     * <code>.event_logging.v4.GroupsComplexType groups = 8 [json_name = "groups"];</code>
     */
    public uk.gov.gchq.event_logging.v4.GroupsComplexTypeOrBuilder getGroupsOrBuilder() {
      if (groupsBuilder_ != null) {
        return groupsBuilder_.getMessageOrBuilder();
      } else {
        return groups_ == null ?
            uk.gov.gchq.event_logging.v4.GroupsComplexType.getDefaultInstance() : groups_;
      }
    }
    /**
     * <pre>
     * Any groups associated with the object, e.g. group membership of a user account.
     * </pre>
     *
     * <code>.event_logging.v4.GroupsComplexType groups = 8 [json_name = "groups"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.GroupsComplexType, uk.gov.gchq.event_logging.v4.GroupsComplexType.Builder, uk.gov.gchq.event_logging.v4.GroupsComplexTypeOrBuilder> 
        getGroupsFieldBuilder() {
      if (groupsBuilder_ == null) {
        groupsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.GroupsComplexType, uk.gov.gchq.event_logging.v4.GroupsComplexType.Builder, uk.gov.gchq.event_logging.v4.GroupsComplexTypeOrBuilder>(
                getGroups(),
                getParentForChildren(),
                isClean());
        groups_ = null;
      }
      return groupsBuilder_;
    }

    private uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType permissions_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType, uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.Builder, uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsTypeOrBuilder> permissionsBuilder_;
    /**
     * <pre>
     * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
     * </pre>
     *
     * <code>.event_logging.v4.UserComplexType.PermissionsType permissions = 9 [json_name = "permissions"];</code>
     * @return Whether the permissions field is set.
     */
    public boolean hasPermissions() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
     * </pre>
     *
     * <code>.event_logging.v4.UserComplexType.PermissionsType permissions = 9 [json_name = "permissions"];</code>
     * @return The permissions.
     */
    public uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType getPermissions() {
      if (permissionsBuilder_ == null) {
        return permissions_ == null ? uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.getDefaultInstance() : permissions_;
      } else {
        return permissionsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
     * </pre>
     *
     * <code>.event_logging.v4.UserComplexType.PermissionsType permissions = 9 [json_name = "permissions"];</code>
     */
    public Builder setPermissions(uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType value) {
      if (permissionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        permissions_ = value;
      } else {
        permissionsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
     * </pre>
     *
     * <code>.event_logging.v4.UserComplexType.PermissionsType permissions = 9 [json_name = "permissions"];</code>
     */
    public Builder setPermissions(
        uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.Builder builderForValue) {
      if (permissionsBuilder_ == null) {
        permissions_ = builderForValue.build();
      } else {
        permissionsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
     * </pre>
     *
     * <code>.event_logging.v4.UserComplexType.PermissionsType permissions = 9 [json_name = "permissions"];</code>
     */
    public Builder mergePermissions(uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType value) {
      if (permissionsBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0) &&
          permissions_ != null &&
          permissions_ != uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.getDefaultInstance()) {
          getPermissionsBuilder().mergeFrom(value);
        } else {
          permissions_ = value;
        }
      } else {
        permissionsBuilder_.mergeFrom(value);
      }
      if (permissions_ != null) {
        bitField0_ |= 0x00000100;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
     * </pre>
     *
     * <code>.event_logging.v4.UserComplexType.PermissionsType permissions = 9 [json_name = "permissions"];</code>
     */
    public Builder clearPermissions() {
      bitField0_ = (bitField0_ & ~0x00000100);
      permissions_ = null;
      if (permissionsBuilder_ != null) {
        permissionsBuilder_.dispose();
        permissionsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
     * </pre>
     *
     * <code>.event_logging.v4.UserComplexType.PermissionsType permissions = 9 [json_name = "permissions"];</code>
     */
    public uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.Builder getPermissionsBuilder() {
      bitField0_ |= 0x00000100;
      onChanged();
      return getPermissionsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
     * </pre>
     *
     * <code>.event_logging.v4.UserComplexType.PermissionsType permissions = 9 [json_name = "permissions"];</code>
     */
    public uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsTypeOrBuilder getPermissionsOrBuilder() {
      if (permissionsBuilder_ != null) {
        return permissionsBuilder_.getMessageOrBuilder();
      } else {
        return permissions_ == null ?
            uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.getDefaultInstance() : permissions_;
      }
    }
    /**
     * <pre>
     * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
     * </pre>
     *
     * <code>.event_logging.v4.UserComplexType.PermissionsType permissions = 9 [json_name = "permissions"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType, uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.Builder, uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsTypeOrBuilder> 
        getPermissionsFieldBuilder() {
      if (permissionsBuilder_ == null) {
        permissionsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType, uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsType.Builder, uk.gov.gchq.event_logging.v4.UserComplexType.PermissionsTypeOrBuilder>(
                getPermissions(),
                getParentForChildren(),
                isClean());
        permissions_ = null;
      }
      return permissionsBuilder_;
    }

    private uk.gov.gchq.event_logging.v4.MetaDataTagsComplexType tags_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.MetaDataTagsComplexType, uk.gov.gchq.event_logging.v4.MetaDataTagsComplexType.Builder, uk.gov.gchq.event_logging.v4.MetaDataTagsComplexTypeOrBuilder> tagsBuilder_;
    /**
     * <pre>
     * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
     * </pre>
     *
     * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10 [json_name = "tags"];</code>
     * @return Whether the tags field is set.
     */
    public boolean hasTags() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
     * </pre>
     *
     * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10 [json_name = "tags"];</code>
     * @return The tags.
     */
    public uk.gov.gchq.event_logging.v4.MetaDataTagsComplexType getTags() {
      if (tagsBuilder_ == null) {
        return tags_ == null ? uk.gov.gchq.event_logging.v4.MetaDataTagsComplexType.getDefaultInstance() : tags_;
      } else {
        return tagsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
     * </pre>
     *
     * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10 [json_name = "tags"];</code>
     */
    public Builder setTags(uk.gov.gchq.event_logging.v4.MetaDataTagsComplexType value) {
      if (tagsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tags_ = value;
      } else {
        tagsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
     * </pre>
     *
     * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10 [json_name = "tags"];</code>
     */
    public Builder setTags(
        uk.gov.gchq.event_logging.v4.MetaDataTagsComplexType.Builder builderForValue) {
      if (tagsBuilder_ == null) {
        tags_ = builderForValue.build();
      } else {
        tagsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
     * </pre>
     *
     * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10 [json_name = "tags"];</code>
     */
    public Builder mergeTags(uk.gov.gchq.event_logging.v4.MetaDataTagsComplexType value) {
      if (tagsBuilder_ == null) {
        if (((bitField0_ & 0x00000200) != 0) &&
          tags_ != null &&
          tags_ != uk.gov.gchq.event_logging.v4.MetaDataTagsComplexType.getDefaultInstance()) {
          getTagsBuilder().mergeFrom(value);
        } else {
          tags_ = value;
        }
      } else {
        tagsBuilder_.mergeFrom(value);
      }
      if (tags_ != null) {
        bitField0_ |= 0x00000200;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
     * </pre>
     *
     * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10 [json_name = "tags"];</code>
     */
    public Builder clearTags() {
      bitField0_ = (bitField0_ & ~0x00000200);
      tags_ = null;
      if (tagsBuilder_ != null) {
        tagsBuilder_.dispose();
        tagsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
     * </pre>
     *
     * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10 [json_name = "tags"];</code>
     */
    public uk.gov.gchq.event_logging.v4.MetaDataTagsComplexType.Builder getTagsBuilder() {
      bitField0_ |= 0x00000200;
      onChanged();
      return getTagsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
     * </pre>
     *
     * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10 [json_name = "tags"];</code>
     */
    public uk.gov.gchq.event_logging.v4.MetaDataTagsComplexTypeOrBuilder getTagsOrBuilder() {
      if (tagsBuilder_ != null) {
        return tagsBuilder_.getMessageOrBuilder();
      } else {
        return tags_ == null ?
            uk.gov.gchq.event_logging.v4.MetaDataTagsComplexType.getDefaultInstance() : tags_;
      }
    }
    /**
     * <pre>
     * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
     * </pre>
     *
     * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10 [json_name = "tags"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.MetaDataTagsComplexType, uk.gov.gchq.event_logging.v4.MetaDataTagsComplexType.Builder, uk.gov.gchq.event_logging.v4.MetaDataTagsComplexTypeOrBuilder> 
        getTagsFieldBuilder() {
      if (tagsBuilder_ == null) {
        tagsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.MetaDataTagsComplexType, uk.gov.gchq.event_logging.v4.MetaDataTagsComplexType.Builder, uk.gov.gchq.event_logging.v4.MetaDataTagsComplexTypeOrBuilder>(
                getTags(),
                getParentForChildren(),
                isClean());
        tags_ = null;
      }
      return tagsBuilder_;
    }

    private java.lang.Object domain_ = "";
    /**
     * <pre>
     * The security domain that the user exists within, e.g. an Active Directory or OpenLDAP domain.
     * </pre>
     *
     * <code>string domain = 11 [json_name = "domain"];</code>
     * @return The domain.
     */
    public java.lang.String getDomain() {
      java.lang.Object ref = domain_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        domain_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The security domain that the user exists within, e.g. an Active Directory or OpenLDAP domain.
     * </pre>
     *
     * <code>string domain = 11 [json_name = "domain"];</code>
     * @return The bytes for domain.
     */
    public com.google.protobuf.ByteString
        getDomainBytes() {
      java.lang.Object ref = domain_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        domain_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The security domain that the user exists within, e.g. an Active Directory or OpenLDAP domain.
     * </pre>
     *
     * <code>string domain = 11 [json_name = "domain"];</code>
     * @param value The domain to set.
     * @return This builder for chaining.
     */
    public Builder setDomain(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      domain_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The security domain that the user exists within, e.g. an Active Directory or OpenLDAP domain.
     * </pre>
     *
     * <code>string domain = 11 [json_name = "domain"];</code>
     * @return This builder for chaining.
     */
    public Builder clearDomain() {
      domain_ = getDefaultInstance().getDomain();
      bitField0_ = (bitField0_ & ~0x00000400);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The security domain that the user exists within, e.g. an Active Directory or OpenLDAP domain.
     * </pre>
     *
     * <code>string domain = 11 [json_name = "domain"];</code>
     * @param value The bytes for domain to set.
     * @return This builder for chaining.
     */
    public Builder setDomainBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      domain_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }

    private java.lang.Object emailAddress_ = "";
    /**
     * <pre>
     * The email address of the user.
     * </pre>
     *
     * <code>string email_address = 12 [json_name = "emailAddress"];</code>
     * @return The emailAddress.
     */
    public java.lang.String getEmailAddress() {
      java.lang.Object ref = emailAddress_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        emailAddress_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The email address of the user.
     * </pre>
     *
     * <code>string email_address = 12 [json_name = "emailAddress"];</code>
     * @return The bytes for emailAddress.
     */
    public com.google.protobuf.ByteString
        getEmailAddressBytes() {
      java.lang.Object ref = emailAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        emailAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The email address of the user.
     * </pre>
     *
     * <code>string email_address = 12 [json_name = "emailAddress"];</code>
     * @param value The emailAddress to set.
     * @return This builder for chaining.
     */
    public Builder setEmailAddress(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      emailAddress_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The email address of the user.
     * </pre>
     *
     * <code>string email_address = 12 [json_name = "emailAddress"];</code>
     * @return This builder for chaining.
     */
    public Builder clearEmailAddress() {
      emailAddress_ = getDefaultInstance().getEmailAddress();
      bitField0_ = (bitField0_ & ~0x00000800);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The email address of the user.
     * </pre>
     *
     * <code>string email_address = 12 [json_name = "emailAddress"];</code>
     * @param value The bytes for emailAddress to set.
     * @return This builder for chaining.
     */
    public Builder setEmailAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      emailAddress_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }

    private uk.gov.gchq.event_logging.v4.UserDetailsComplexType userDetails_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.UserDetailsComplexType, uk.gov.gchq.event_logging.v4.UserDetailsComplexType.Builder, uk.gov.gchq.event_logging.v4.UserDetailsComplexTypeOrBuilder> userDetailsBuilder_;
    /**
     * <pre>
     * The details of the person represented by the user account or identity.
     * </pre>
     *
     * <code>.event_logging.v4.UserDetailsComplexType user_details = 13 [json_name = "userDetails"];</code>
     * @return Whether the userDetails field is set.
     */
    public boolean hasUserDetails() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * The details of the person represented by the user account or identity.
     * </pre>
     *
     * <code>.event_logging.v4.UserDetailsComplexType user_details = 13 [json_name = "userDetails"];</code>
     * @return The userDetails.
     */
    public uk.gov.gchq.event_logging.v4.UserDetailsComplexType getUserDetails() {
      if (userDetailsBuilder_ == null) {
        return userDetails_ == null ? uk.gov.gchq.event_logging.v4.UserDetailsComplexType.getDefaultInstance() : userDetails_;
      } else {
        return userDetailsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The details of the person represented by the user account or identity.
     * </pre>
     *
     * <code>.event_logging.v4.UserDetailsComplexType user_details = 13 [json_name = "userDetails"];</code>
     */
    public Builder setUserDetails(uk.gov.gchq.event_logging.v4.UserDetailsComplexType value) {
      if (userDetailsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        userDetails_ = value;
      } else {
        userDetailsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The details of the person represented by the user account or identity.
     * </pre>
     *
     * <code>.event_logging.v4.UserDetailsComplexType user_details = 13 [json_name = "userDetails"];</code>
     */
    public Builder setUserDetails(
        uk.gov.gchq.event_logging.v4.UserDetailsComplexType.Builder builderForValue) {
      if (userDetailsBuilder_ == null) {
        userDetails_ = builderForValue.build();
      } else {
        userDetailsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00001000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The details of the person represented by the user account or identity.
     * </pre>
     *
     * <code>.event_logging.v4.UserDetailsComplexType user_details = 13 [json_name = "userDetails"];</code>
     */
    public Builder mergeUserDetails(uk.gov.gchq.event_logging.v4.UserDetailsComplexType value) {
      if (userDetailsBuilder_ == null) {
        if (((bitField0_ & 0x00001000) != 0) &&
          userDetails_ != null &&
          userDetails_ != uk.gov.gchq.event_logging.v4.UserDetailsComplexType.getDefaultInstance()) {
          getUserDetailsBuilder().mergeFrom(value);
        } else {
          userDetails_ = value;
        }
      } else {
        userDetailsBuilder_.mergeFrom(value);
      }
      if (userDetails_ != null) {
        bitField0_ |= 0x00001000;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The details of the person represented by the user account or identity.
     * </pre>
     *
     * <code>.event_logging.v4.UserDetailsComplexType user_details = 13 [json_name = "userDetails"];</code>
     */
    public Builder clearUserDetails() {
      bitField0_ = (bitField0_ & ~0x00001000);
      userDetails_ = null;
      if (userDetailsBuilder_ != null) {
        userDetailsBuilder_.dispose();
        userDetailsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The details of the person represented by the user account or identity.
     * </pre>
     *
     * <code>.event_logging.v4.UserDetailsComplexType user_details = 13 [json_name = "userDetails"];</code>
     */
    public uk.gov.gchq.event_logging.v4.UserDetailsComplexType.Builder getUserDetailsBuilder() {
      bitField0_ |= 0x00001000;
      onChanged();
      return getUserDetailsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The details of the person represented by the user account or identity.
     * </pre>
     *
     * <code>.event_logging.v4.UserDetailsComplexType user_details = 13 [json_name = "userDetails"];</code>
     */
    public uk.gov.gchq.event_logging.v4.UserDetailsComplexTypeOrBuilder getUserDetailsOrBuilder() {
      if (userDetailsBuilder_ != null) {
        return userDetailsBuilder_.getMessageOrBuilder();
      } else {
        return userDetails_ == null ?
            uk.gov.gchq.event_logging.v4.UserDetailsComplexType.getDefaultInstance() : userDetails_;
      }
    }
    /**
     * <pre>
     * The details of the person represented by the user account or identity.
     * </pre>
     *
     * <code>.event_logging.v4.UserDetailsComplexType user_details = 13 [json_name = "userDetails"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.UserDetailsComplexType, uk.gov.gchq.event_logging.v4.UserDetailsComplexType.Builder, uk.gov.gchq.event_logging.v4.UserDetailsComplexTypeOrBuilder> 
        getUserDetailsFieldBuilder() {
      if (userDetailsBuilder_ == null) {
        userDetailsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.UserDetailsComplexType, uk.gov.gchq.event_logging.v4.UserDetailsComplexType.Builder, uk.gov.gchq.event_logging.v4.UserDetailsComplexTypeOrBuilder>(
                getUserDetails(),
                getParentForChildren(),
                isClean());
        userDetails_ = null;
      }
      return userDetailsBuilder_;
    }

    private java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> data_ =
      java.util.Collections.emptyList();
    private void ensureDataIsMutable() {
      if (!((bitField0_ & 0x00002000) != 0)) {
        data_ = new java.util.ArrayList<uk.gov.gchq.event_logging.v4.DataComplexType>(data_);
        bitField0_ |= 0x00002000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        uk.gov.gchq.event_logging.v4.DataComplexType, uk.gov.gchq.event_logging.v4.DataComplexType.Builder, uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> dataBuilder_;

    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 14 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> getDataList() {
      if (dataBuilder_ == null) {
        return java.util.Collections.unmodifiableList(data_);
      } else {
        return dataBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 14 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public int getDataCount() {
      if (dataBuilder_ == null) {
        return data_.size();
      } else {
        return dataBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 14 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType getData(int index) {
      if (dataBuilder_ == null) {
        return data_.get(index);
      } else {
        return dataBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 14 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder setData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType value) {
      if (dataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataIsMutable();
        data_.set(index, value);
        onChanged();
      } else {
        dataBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 14 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder setData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType.Builder builderForValue) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.set(index, builderForValue.build());
        onChanged();
      } else {
        dataBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 14 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(uk.gov.gchq.event_logging.v4.DataComplexType value) {
      if (dataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataIsMutable();
        data_.add(value);
        onChanged();
      } else {
        dataBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 14 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType value) {
      if (dataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataIsMutable();
        data_.add(index, value);
        onChanged();
      } else {
        dataBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 14 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(
        uk.gov.gchq.event_logging.v4.DataComplexType.Builder builderForValue) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.add(builderForValue.build());
        onChanged();
      } else {
        dataBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 14 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType.Builder builderForValue) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.add(index, builderForValue.build());
        onChanged();
      } else {
        dataBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 14 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addAllData(
        java.lang.Iterable<? extends uk.gov.gchq.event_logging.v4.DataComplexType> values) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, data_);
        onChanged();
      } else {
        dataBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 14 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder clearData() {
      if (dataBuilder_ == null) {
        data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
      } else {
        dataBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 14 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder removeData(int index) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.remove(index);
        onChanged();
      } else {
        dataBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 14 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType.Builder getDataBuilder(
        int index) {
      return getDataFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 14 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder getDataOrBuilder(
        int index) {
      if (dataBuilder_ == null) {
        return data_.get(index);  } else {
        return dataBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 14 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public java.util.List<? extends uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> 
         getDataOrBuilderList() {
      if (dataBuilder_ != null) {
        return dataBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(data_);
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 14 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType.Builder addDataBuilder() {
      return getDataFieldBuilder().addBuilder(
          uk.gov.gchq.event_logging.v4.DataComplexType.getDefaultInstance());
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 14 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType.Builder addDataBuilder(
        int index) {
      return getDataFieldBuilder().addBuilder(
          index, uk.gov.gchq.event_logging.v4.DataComplexType.getDefaultInstance());
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 14 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType.Builder> 
         getDataBuilderList() {
      return getDataFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        uk.gov.gchq.event_logging.v4.DataComplexType, uk.gov.gchq.event_logging.v4.DataComplexType.Builder, uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> 
        getDataFieldBuilder() {
      if (dataBuilder_ == null) {
        dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            uk.gov.gchq.event_logging.v4.DataComplexType, uk.gov.gchq.event_logging.v4.DataComplexType.Builder, uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder>(
                data_,
                ((bitField0_ & 0x00002000) != 0),
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      return dataBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:event_logging.v4.UserComplexType)
  }

  // @@protoc_insertion_point(class_scope:event_logging.v4.UserComplexType)
  private static final uk.gov.gchq.event_logging.v4.UserComplexType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new uk.gov.gchq.event_logging.v4.UserComplexType();
  }

  public static uk.gov.gchq.event_logging.v4.UserComplexType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<UserComplexType>
      PARSER = new com.google.protobuf.AbstractParser<UserComplexType>() {
    @java.lang.Override
    public UserComplexType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<UserComplexType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<UserComplexType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.UserComplexType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

