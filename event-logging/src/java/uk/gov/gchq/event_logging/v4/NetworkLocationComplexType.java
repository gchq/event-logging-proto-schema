// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event_logging/v4/network_location_complex_type.proto

// Protobuf Java Version: 4.26.1
package uk.gov.gchq.event_logging.v4;

/**
 * <pre>
 * Describes an end point within a network. This may be an application running on a device or a network appliance such as a switch.
 * </pre>
 *
 * Protobuf type {@code event_logging.v4.NetworkLocationComplexType}
 */
public final class NetworkLocationComplexType extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:event_logging.v4.NetworkLocationComplexType)
    NetworkLocationComplexTypeOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      NetworkLocationComplexType.class.getName());
  }
  // Use NetworkLocationComplexType.newBuilder() to construct.
  private NetworkLocationComplexType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private NetworkLocationComplexType() {
    application_ = "";
    transportProtocol_ = 0;
    httpMethod_ = "";
    applicationProtocol_ = "";
    data_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return uk.gov.gchq.event_logging.v4.NetworkLocationComplexTypeProto.internal_static_event_logging_v4_NetworkLocationComplexType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return uk.gov.gchq.event_logging.v4.NetworkLocationComplexTypeProto.internal_static_event_logging_v4_NetworkLocationComplexType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            uk.gov.gchq.event_logging.v4.NetworkLocationComplexType.class, uk.gov.gchq.event_logging.v4.NetworkLocationComplexType.Builder.class);
  }

  private int bitField0_;
  public static final int DEVICE_FIELD_NUMBER = 1;
  private uk.gov.gchq.event_logging.v4.DeviceComplexType device_;
  /**
   * <pre>
   * A device at the source or destination involved in the network activity.
   * </pre>
   *
   * <code>.event_logging.v4.DeviceComplexType device = 1 [json_name = "device"];</code>
   * @return Whether the device field is set.
   */
  @java.lang.Override
  public boolean hasDevice() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * A device at the source or destination involved in the network activity.
   * </pre>
   *
   * <code>.event_logging.v4.DeviceComplexType device = 1 [json_name = "device"];</code>
   * @return The device.
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.DeviceComplexType getDevice() {
    return device_ == null ? uk.gov.gchq.event_logging.v4.DeviceComplexType.getDefaultInstance() : device_;
  }
  /**
   * <pre>
   * A device at the source or destination involved in the network activity.
   * </pre>
   *
   * <code>.event_logging.v4.DeviceComplexType device = 1 [json_name = "device"];</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.DeviceComplexTypeOrBuilder getDeviceOrBuilder() {
    return device_ == null ? uk.gov.gchq.event_logging.v4.DeviceComplexType.getDefaultInstance() : device_;
  }

  public static final int APPLICATION_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object application_ = "";
  /**
   * <pre>
   * The application being used by the source or destination.
   * </pre>
   *
   * <code>string application = 2 [json_name = "application"];</code>
   * @return The application.
   */
  @java.lang.Override
  public java.lang.String getApplication() {
    java.lang.Object ref = application_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      application_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The application being used by the source or destination.
   * </pre>
   *
   * <code>string application = 2 [json_name = "application"];</code>
   * @return The bytes for application.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getApplicationBytes() {
    java.lang.Object ref = application_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      application_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TRANSPORT_PROTOCOL_FIELD_NUMBER = 3;
  private int transportProtocol_ = 0;
  /**
   * <pre>
   * The transport protocol being used by the source or destination.
   * </pre>
   *
   * <code>.event_logging.v4.NetworkProtocolSimpleType transport_protocol = 3 [json_name = "transportProtocol", (.buf.validate.field) = { ... }</code>
   * @return The enum numeric value on the wire for transportProtocol.
   */
  @java.lang.Override public int getTransportProtocolValue() {
    return transportProtocol_;
  }
  /**
   * <pre>
   * The transport protocol being used by the source or destination.
   * </pre>
   *
   * <code>.event_logging.v4.NetworkProtocolSimpleType transport_protocol = 3 [json_name = "transportProtocol", (.buf.validate.field) = { ... }</code>
   * @return The transportProtocol.
   */
  @java.lang.Override public uk.gov.gchq.event_logging.v4.NetworkProtocolSimpleType getTransportProtocol() {
    uk.gov.gchq.event_logging.v4.NetworkProtocolSimpleType result = uk.gov.gchq.event_logging.v4.NetworkProtocolSimpleType.forNumber(transportProtocol_);
    return result == null ? uk.gov.gchq.event_logging.v4.NetworkProtocolSimpleType.UNRECOGNIZED : result;
  }

  public static final int ICMP_TYPE_FIELD_NUMBER = 4;
  private int icmpType_ = 0;
  /**
   * <pre>
   * The Internet Control Message Protocol type number. See https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml
   * </pre>
   *
   * <code>int32 icmp_type = 4 [json_name = "icmpType"];</code>
   * @return The icmpType.
   */
  @java.lang.Override
  public int getIcmpType() {
    return icmpType_;
  }

  public static final int HTTP_METHOD_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object httpMethod_ = "";
  /**
   * <pre>
   * The HTTP method, e.g. GET, POST, DELETE, PUT etc
   * </pre>
   *
   * <code>string http_method = 5 [json_name = "httpMethod"];</code>
   * @return The httpMethod.
   */
  @java.lang.Override
  public java.lang.String getHttpMethod() {
    java.lang.Object ref = httpMethod_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      httpMethod_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The HTTP method, e.g. GET, POST, DELETE, PUT etc
   * </pre>
   *
   * <code>string http_method = 5 [json_name = "httpMethod"];</code>
   * @return The bytes for httpMethod.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getHttpMethodBytes() {
    java.lang.Object ref = httpMethod_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      httpMethod_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int APPLICATION_PROTOCOL_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object applicationProtocol_ = "";
  /**
   * <pre>
   * The application protocol being used by the source or destination.
   * </pre>
   *
   * <code>string application_protocol = 6 [json_name = "applicationProtocol"];</code>
   * @return The applicationProtocol.
   */
  @java.lang.Override
  public java.lang.String getApplicationProtocol() {
    java.lang.Object ref = applicationProtocol_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      applicationProtocol_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The application protocol being used by the source or destination.
   * </pre>
   *
   * <code>string application_protocol = 6 [json_name = "applicationProtocol"];</code>
   * @return The bytes for applicationProtocol.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getApplicationProtocolBytes() {
    java.lang.Object ref = applicationProtocol_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      applicationProtocol_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PORT_FIELD_NUMBER = 7;
  private int port_ = 0;
  /**
   * <pre>
   * The port being used by the source or destination.
   * </pre>
   *
   * <code>int32 port = 7 [json_name = "port"];</code>
   * @return The port.
   */
  @java.lang.Override
  public int getPort() {
    return port_;
  }

  public static final int DATA_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> data_;
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> getDataList() {
    return data_;
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public java.util.List<? extends uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> 
      getDataOrBuilderList() {
    return data_;
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public int getDataCount() {
    return data_.size();
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.DataComplexType getData(int index) {
    return data_.get(index);
  }
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder getDataOrBuilder(
      int index) {
    return data_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getDevice());
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(application_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, application_);
    }
    if (transportProtocol_ != uk.gov.gchq.event_logging.v4.NetworkProtocolSimpleType.NETWORK_PROTOCOL_SIMPLE_TYPE_UNSPECIFIED.getNumber()) {
      output.writeEnum(3, transportProtocol_);
    }
    if (icmpType_ != 0) {
      output.writeInt32(4, icmpType_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(httpMethod_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 5, httpMethod_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(applicationProtocol_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 6, applicationProtocol_);
    }
    if (port_ != 0) {
      output.writeInt32(7, port_);
    }
    for (int i = 0; i < data_.size(); i++) {
      output.writeMessage(8, data_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getDevice());
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(application_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, application_);
    }
    if (transportProtocol_ != uk.gov.gchq.event_logging.v4.NetworkProtocolSimpleType.NETWORK_PROTOCOL_SIMPLE_TYPE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, transportProtocol_);
    }
    if (icmpType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, icmpType_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(httpMethod_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(5, httpMethod_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(applicationProtocol_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(6, applicationProtocol_);
    }
    if (port_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, port_);
    }
    for (int i = 0; i < data_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, data_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof uk.gov.gchq.event_logging.v4.NetworkLocationComplexType)) {
      return super.equals(obj);
    }
    uk.gov.gchq.event_logging.v4.NetworkLocationComplexType other = (uk.gov.gchq.event_logging.v4.NetworkLocationComplexType) obj;

    if (hasDevice() != other.hasDevice()) return false;
    if (hasDevice()) {
      if (!getDevice()
          .equals(other.getDevice())) return false;
    }
    if (!getApplication()
        .equals(other.getApplication())) return false;
    if (transportProtocol_ != other.transportProtocol_) return false;
    if (getIcmpType()
        != other.getIcmpType()) return false;
    if (!getHttpMethod()
        .equals(other.getHttpMethod())) return false;
    if (!getApplicationProtocol()
        .equals(other.getApplicationProtocol())) return false;
    if (getPort()
        != other.getPort()) return false;
    if (!getDataList()
        .equals(other.getDataList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasDevice()) {
      hash = (37 * hash) + DEVICE_FIELD_NUMBER;
      hash = (53 * hash) + getDevice().hashCode();
    }
    hash = (37 * hash) + APPLICATION_FIELD_NUMBER;
    hash = (53 * hash) + getApplication().hashCode();
    hash = (37 * hash) + TRANSPORT_PROTOCOL_FIELD_NUMBER;
    hash = (53 * hash) + transportProtocol_;
    hash = (37 * hash) + ICMP_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getIcmpType();
    hash = (37 * hash) + HTTP_METHOD_FIELD_NUMBER;
    hash = (53 * hash) + getHttpMethod().hashCode();
    hash = (37 * hash) + APPLICATION_PROTOCOL_FIELD_NUMBER;
    hash = (53 * hash) + getApplicationProtocol().hashCode();
    hash = (37 * hash) + PORT_FIELD_NUMBER;
    hash = (53 * hash) + getPort();
    if (getDataCount() > 0) {
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getDataList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static uk.gov.gchq.event_logging.v4.NetworkLocationComplexType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.NetworkLocationComplexType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.NetworkLocationComplexType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.NetworkLocationComplexType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.NetworkLocationComplexType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static uk.gov.gchq.event_logging.v4.NetworkLocationComplexType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.NetworkLocationComplexType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static uk.gov.gchq.event_logging.v4.NetworkLocationComplexType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static uk.gov.gchq.event_logging.v4.NetworkLocationComplexType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static uk.gov.gchq.event_logging.v4.NetworkLocationComplexType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static uk.gov.gchq.event_logging.v4.NetworkLocationComplexType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static uk.gov.gchq.event_logging.v4.NetworkLocationComplexType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(uk.gov.gchq.event_logging.v4.NetworkLocationComplexType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Describes an end point within a network. This may be an application running on a device or a network appliance such as a switch.
   * </pre>
   *
   * Protobuf type {@code event_logging.v4.NetworkLocationComplexType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:event_logging.v4.NetworkLocationComplexType)
      uk.gov.gchq.event_logging.v4.NetworkLocationComplexTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return uk.gov.gchq.event_logging.v4.NetworkLocationComplexTypeProto.internal_static_event_logging_v4_NetworkLocationComplexType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return uk.gov.gchq.event_logging.v4.NetworkLocationComplexTypeProto.internal_static_event_logging_v4_NetworkLocationComplexType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              uk.gov.gchq.event_logging.v4.NetworkLocationComplexType.class, uk.gov.gchq.event_logging.v4.NetworkLocationComplexType.Builder.class);
    }

    // Construct using uk.gov.gchq.event_logging.v4.NetworkLocationComplexType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getDeviceFieldBuilder();
        getDataFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      device_ = null;
      if (deviceBuilder_ != null) {
        deviceBuilder_.dispose();
        deviceBuilder_ = null;
      }
      application_ = "";
      transportProtocol_ = 0;
      icmpType_ = 0;
      httpMethod_ = "";
      applicationProtocol_ = "";
      port_ = 0;
      if (dataBuilder_ == null) {
        data_ = java.util.Collections.emptyList();
      } else {
        data_ = null;
        dataBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return uk.gov.gchq.event_logging.v4.NetworkLocationComplexTypeProto.internal_static_event_logging_v4_NetworkLocationComplexType_descriptor;
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.NetworkLocationComplexType getDefaultInstanceForType() {
      return uk.gov.gchq.event_logging.v4.NetworkLocationComplexType.getDefaultInstance();
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.NetworkLocationComplexType build() {
      uk.gov.gchq.event_logging.v4.NetworkLocationComplexType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.NetworkLocationComplexType buildPartial() {
      uk.gov.gchq.event_logging.v4.NetworkLocationComplexType result = new uk.gov.gchq.event_logging.v4.NetworkLocationComplexType(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(uk.gov.gchq.event_logging.v4.NetworkLocationComplexType result) {
      if (dataBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0)) {
          data_ = java.util.Collections.unmodifiableList(data_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.data_ = data_;
      } else {
        result.data_ = dataBuilder_.build();
      }
    }

    private void buildPartial0(uk.gov.gchq.event_logging.v4.NetworkLocationComplexType result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.device_ = deviceBuilder_ == null
            ? device_
            : deviceBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.application_ = application_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.transportProtocol_ = transportProtocol_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.icmpType_ = icmpType_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.httpMethod_ = httpMethod_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.applicationProtocol_ = applicationProtocol_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.port_ = port_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof uk.gov.gchq.event_logging.v4.NetworkLocationComplexType) {
        return mergeFrom((uk.gov.gchq.event_logging.v4.NetworkLocationComplexType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(uk.gov.gchq.event_logging.v4.NetworkLocationComplexType other) {
      if (other == uk.gov.gchq.event_logging.v4.NetworkLocationComplexType.getDefaultInstance()) return this;
      if (other.hasDevice()) {
        mergeDevice(other.getDevice());
      }
      if (!other.getApplication().isEmpty()) {
        application_ = other.application_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.transportProtocol_ != 0) {
        setTransportProtocolValue(other.getTransportProtocolValue());
      }
      if (other.getIcmpType() != 0) {
        setIcmpType(other.getIcmpType());
      }
      if (!other.getHttpMethod().isEmpty()) {
        httpMethod_ = other.httpMethod_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (!other.getApplicationProtocol().isEmpty()) {
        applicationProtocol_ = other.applicationProtocol_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      if (other.getPort() != 0) {
        setPort(other.getPort());
      }
      if (dataBuilder_ == null) {
        if (!other.data_.isEmpty()) {
          if (data_.isEmpty()) {
            data_ = other.data_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureDataIsMutable();
            data_.addAll(other.data_);
          }
          onChanged();
        }
      } else {
        if (!other.data_.isEmpty()) {
          if (dataBuilder_.isEmpty()) {
            dataBuilder_.dispose();
            dataBuilder_ = null;
            data_ = other.data_;
            bitField0_ = (bitField0_ & ~0x00000080);
            dataBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getDataFieldBuilder() : null;
          } else {
            dataBuilder_.addAllMessages(other.data_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getDeviceFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              application_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 24: {
              transportProtocol_ = input.readEnum();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              icmpType_ = input.readInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 42: {
              httpMethod_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              applicationProtocol_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 56: {
              port_ = input.readInt32();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 66: {
              uk.gov.gchq.event_logging.v4.DataComplexType m =
                  input.readMessage(
                      uk.gov.gchq.event_logging.v4.DataComplexType.parser(),
                      extensionRegistry);
              if (dataBuilder_ == null) {
                ensureDataIsMutable();
                data_.add(m);
              } else {
                dataBuilder_.addMessage(m);
              }
              break;
            } // case 66
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private uk.gov.gchq.event_logging.v4.DeviceComplexType device_;
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.DeviceComplexType, uk.gov.gchq.event_logging.v4.DeviceComplexType.Builder, uk.gov.gchq.event_logging.v4.DeviceComplexTypeOrBuilder> deviceBuilder_;
    /**
     * <pre>
     * A device at the source or destination involved in the network activity.
     * </pre>
     *
     * <code>.event_logging.v4.DeviceComplexType device = 1 [json_name = "device"];</code>
     * @return Whether the device field is set.
     */
    public boolean hasDevice() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * A device at the source or destination involved in the network activity.
     * </pre>
     *
     * <code>.event_logging.v4.DeviceComplexType device = 1 [json_name = "device"];</code>
     * @return The device.
     */
    public uk.gov.gchq.event_logging.v4.DeviceComplexType getDevice() {
      if (deviceBuilder_ == null) {
        return device_ == null ? uk.gov.gchq.event_logging.v4.DeviceComplexType.getDefaultInstance() : device_;
      } else {
        return deviceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * A device at the source or destination involved in the network activity.
     * </pre>
     *
     * <code>.event_logging.v4.DeviceComplexType device = 1 [json_name = "device"];</code>
     */
    public Builder setDevice(uk.gov.gchq.event_logging.v4.DeviceComplexType value) {
      if (deviceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        device_ = value;
      } else {
        deviceBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A device at the source or destination involved in the network activity.
     * </pre>
     *
     * <code>.event_logging.v4.DeviceComplexType device = 1 [json_name = "device"];</code>
     */
    public Builder setDevice(
        uk.gov.gchq.event_logging.v4.DeviceComplexType.Builder builderForValue) {
      if (deviceBuilder_ == null) {
        device_ = builderForValue.build();
      } else {
        deviceBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A device at the source or destination involved in the network activity.
     * </pre>
     *
     * <code>.event_logging.v4.DeviceComplexType device = 1 [json_name = "device"];</code>
     */
    public Builder mergeDevice(uk.gov.gchq.event_logging.v4.DeviceComplexType value) {
      if (deviceBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          device_ != null &&
          device_ != uk.gov.gchq.event_logging.v4.DeviceComplexType.getDefaultInstance()) {
          getDeviceBuilder().mergeFrom(value);
        } else {
          device_ = value;
        }
      } else {
        deviceBuilder_.mergeFrom(value);
      }
      if (device_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * A device at the source or destination involved in the network activity.
     * </pre>
     *
     * <code>.event_logging.v4.DeviceComplexType device = 1 [json_name = "device"];</code>
     */
    public Builder clearDevice() {
      bitField0_ = (bitField0_ & ~0x00000001);
      device_ = null;
      if (deviceBuilder_ != null) {
        deviceBuilder_.dispose();
        deviceBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A device at the source or destination involved in the network activity.
     * </pre>
     *
     * <code>.event_logging.v4.DeviceComplexType device = 1 [json_name = "device"];</code>
     */
    public uk.gov.gchq.event_logging.v4.DeviceComplexType.Builder getDeviceBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getDeviceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A device at the source or destination involved in the network activity.
     * </pre>
     *
     * <code>.event_logging.v4.DeviceComplexType device = 1 [json_name = "device"];</code>
     */
    public uk.gov.gchq.event_logging.v4.DeviceComplexTypeOrBuilder getDeviceOrBuilder() {
      if (deviceBuilder_ != null) {
        return deviceBuilder_.getMessageOrBuilder();
      } else {
        return device_ == null ?
            uk.gov.gchq.event_logging.v4.DeviceComplexType.getDefaultInstance() : device_;
      }
    }
    /**
     * <pre>
     * A device at the source or destination involved in the network activity.
     * </pre>
     *
     * <code>.event_logging.v4.DeviceComplexType device = 1 [json_name = "device"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        uk.gov.gchq.event_logging.v4.DeviceComplexType, uk.gov.gchq.event_logging.v4.DeviceComplexType.Builder, uk.gov.gchq.event_logging.v4.DeviceComplexTypeOrBuilder> 
        getDeviceFieldBuilder() {
      if (deviceBuilder_ == null) {
        deviceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            uk.gov.gchq.event_logging.v4.DeviceComplexType, uk.gov.gchq.event_logging.v4.DeviceComplexType.Builder, uk.gov.gchq.event_logging.v4.DeviceComplexTypeOrBuilder>(
                getDevice(),
                getParentForChildren(),
                isClean());
        device_ = null;
      }
      return deviceBuilder_;
    }

    private java.lang.Object application_ = "";
    /**
     * <pre>
     * The application being used by the source or destination.
     * </pre>
     *
     * <code>string application = 2 [json_name = "application"];</code>
     * @return The application.
     */
    public java.lang.String getApplication() {
      java.lang.Object ref = application_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        application_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The application being used by the source or destination.
     * </pre>
     *
     * <code>string application = 2 [json_name = "application"];</code>
     * @return The bytes for application.
     */
    public com.google.protobuf.ByteString
        getApplicationBytes() {
      java.lang.Object ref = application_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        application_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The application being used by the source or destination.
     * </pre>
     *
     * <code>string application = 2 [json_name = "application"];</code>
     * @param value The application to set.
     * @return This builder for chaining.
     */
    public Builder setApplication(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      application_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The application being used by the source or destination.
     * </pre>
     *
     * <code>string application = 2 [json_name = "application"];</code>
     * @return This builder for chaining.
     */
    public Builder clearApplication() {
      application_ = getDefaultInstance().getApplication();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The application being used by the source or destination.
     * </pre>
     *
     * <code>string application = 2 [json_name = "application"];</code>
     * @param value The bytes for application to set.
     * @return This builder for chaining.
     */
    public Builder setApplicationBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      application_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private int transportProtocol_ = 0;
    /**
     * <pre>
     * The transport protocol being used by the source or destination.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkProtocolSimpleType transport_protocol = 3 [json_name = "transportProtocol", (.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for transportProtocol.
     */
    @java.lang.Override public int getTransportProtocolValue() {
      return transportProtocol_;
    }
    /**
     * <pre>
     * The transport protocol being used by the source or destination.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkProtocolSimpleType transport_protocol = 3 [json_name = "transportProtocol", (.buf.validate.field) = { ... }</code>
     * @param value The enum numeric value on the wire for transportProtocol to set.
     * @return This builder for chaining.
     */
    public Builder setTransportProtocolValue(int value) {
      transportProtocol_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The transport protocol being used by the source or destination.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkProtocolSimpleType transport_protocol = 3 [json_name = "transportProtocol", (.buf.validate.field) = { ... }</code>
     * @return The transportProtocol.
     */
    @java.lang.Override
    public uk.gov.gchq.event_logging.v4.NetworkProtocolSimpleType getTransportProtocol() {
      uk.gov.gchq.event_logging.v4.NetworkProtocolSimpleType result = uk.gov.gchq.event_logging.v4.NetworkProtocolSimpleType.forNumber(transportProtocol_);
      return result == null ? uk.gov.gchq.event_logging.v4.NetworkProtocolSimpleType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The transport protocol being used by the source or destination.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkProtocolSimpleType transport_protocol = 3 [json_name = "transportProtocol", (.buf.validate.field) = { ... }</code>
     * @param value The transportProtocol to set.
     * @return This builder for chaining.
     */
    public Builder setTransportProtocol(uk.gov.gchq.event_logging.v4.NetworkProtocolSimpleType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      transportProtocol_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The transport protocol being used by the source or destination.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkProtocolSimpleType transport_protocol = 3 [json_name = "transportProtocol", (.buf.validate.field) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearTransportProtocol() {
      bitField0_ = (bitField0_ & ~0x00000004);
      transportProtocol_ = 0;
      onChanged();
      return this;
    }

    private int icmpType_ ;
    /**
     * <pre>
     * The Internet Control Message Protocol type number. See https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml
     * </pre>
     *
     * <code>int32 icmp_type = 4 [json_name = "icmpType"];</code>
     * @return The icmpType.
     */
    @java.lang.Override
    public int getIcmpType() {
      return icmpType_;
    }
    /**
     * <pre>
     * The Internet Control Message Protocol type number. See https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml
     * </pre>
     *
     * <code>int32 icmp_type = 4 [json_name = "icmpType"];</code>
     * @param value The icmpType to set.
     * @return This builder for chaining.
     */
    public Builder setIcmpType(int value) {

      icmpType_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Internet Control Message Protocol type number. See https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml
     * </pre>
     *
     * <code>int32 icmp_type = 4 [json_name = "icmpType"];</code>
     * @return This builder for chaining.
     */
    public Builder clearIcmpType() {
      bitField0_ = (bitField0_ & ~0x00000008);
      icmpType_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object httpMethod_ = "";
    /**
     * <pre>
     * The HTTP method, e.g. GET, POST, DELETE, PUT etc
     * </pre>
     *
     * <code>string http_method = 5 [json_name = "httpMethod"];</code>
     * @return The httpMethod.
     */
    public java.lang.String getHttpMethod() {
      java.lang.Object ref = httpMethod_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        httpMethod_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The HTTP method, e.g. GET, POST, DELETE, PUT etc
     * </pre>
     *
     * <code>string http_method = 5 [json_name = "httpMethod"];</code>
     * @return The bytes for httpMethod.
     */
    public com.google.protobuf.ByteString
        getHttpMethodBytes() {
      java.lang.Object ref = httpMethod_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        httpMethod_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The HTTP method, e.g. GET, POST, DELETE, PUT etc
     * </pre>
     *
     * <code>string http_method = 5 [json_name = "httpMethod"];</code>
     * @param value The httpMethod to set.
     * @return This builder for chaining.
     */
    public Builder setHttpMethod(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      httpMethod_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The HTTP method, e.g. GET, POST, DELETE, PUT etc
     * </pre>
     *
     * <code>string http_method = 5 [json_name = "httpMethod"];</code>
     * @return This builder for chaining.
     */
    public Builder clearHttpMethod() {
      httpMethod_ = getDefaultInstance().getHttpMethod();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The HTTP method, e.g. GET, POST, DELETE, PUT etc
     * </pre>
     *
     * <code>string http_method = 5 [json_name = "httpMethod"];</code>
     * @param value The bytes for httpMethod to set.
     * @return This builder for chaining.
     */
    public Builder setHttpMethodBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      httpMethod_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private java.lang.Object applicationProtocol_ = "";
    /**
     * <pre>
     * The application protocol being used by the source or destination.
     * </pre>
     *
     * <code>string application_protocol = 6 [json_name = "applicationProtocol"];</code>
     * @return The applicationProtocol.
     */
    public java.lang.String getApplicationProtocol() {
      java.lang.Object ref = applicationProtocol_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        applicationProtocol_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The application protocol being used by the source or destination.
     * </pre>
     *
     * <code>string application_protocol = 6 [json_name = "applicationProtocol"];</code>
     * @return The bytes for applicationProtocol.
     */
    public com.google.protobuf.ByteString
        getApplicationProtocolBytes() {
      java.lang.Object ref = applicationProtocol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        applicationProtocol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The application protocol being used by the source or destination.
     * </pre>
     *
     * <code>string application_protocol = 6 [json_name = "applicationProtocol"];</code>
     * @param value The applicationProtocol to set.
     * @return This builder for chaining.
     */
    public Builder setApplicationProtocol(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      applicationProtocol_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The application protocol being used by the source or destination.
     * </pre>
     *
     * <code>string application_protocol = 6 [json_name = "applicationProtocol"];</code>
     * @return This builder for chaining.
     */
    public Builder clearApplicationProtocol() {
      applicationProtocol_ = getDefaultInstance().getApplicationProtocol();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The application protocol being used by the source or destination.
     * </pre>
     *
     * <code>string application_protocol = 6 [json_name = "applicationProtocol"];</code>
     * @param value The bytes for applicationProtocol to set.
     * @return This builder for chaining.
     */
    public Builder setApplicationProtocolBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      applicationProtocol_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    private int port_ ;
    /**
     * <pre>
     * The port being used by the source or destination.
     * </pre>
     *
     * <code>int32 port = 7 [json_name = "port"];</code>
     * @return The port.
     */
    @java.lang.Override
    public int getPort() {
      return port_;
    }
    /**
     * <pre>
     * The port being used by the source or destination.
     * </pre>
     *
     * <code>int32 port = 7 [json_name = "port"];</code>
     * @param value The port to set.
     * @return This builder for chaining.
     */
    public Builder setPort(int value) {

      port_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The port being used by the source or destination.
     * </pre>
     *
     * <code>int32 port = 7 [json_name = "port"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPort() {
      bitField0_ = (bitField0_ & ~0x00000040);
      port_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> data_ =
      java.util.Collections.emptyList();
    private void ensureDataIsMutable() {
      if (!((bitField0_ & 0x00000080) != 0)) {
        data_ = new java.util.ArrayList<uk.gov.gchq.event_logging.v4.DataComplexType>(data_);
        bitField0_ |= 0x00000080;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        uk.gov.gchq.event_logging.v4.DataComplexType, uk.gov.gchq.event_logging.v4.DataComplexType.Builder, uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> dataBuilder_;

    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> getDataList() {
      if (dataBuilder_ == null) {
        return java.util.Collections.unmodifiableList(data_);
      } else {
        return dataBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public int getDataCount() {
      if (dataBuilder_ == null) {
        return data_.size();
      } else {
        return dataBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType getData(int index) {
      if (dataBuilder_ == null) {
        return data_.get(index);
      } else {
        return dataBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder setData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType value) {
      if (dataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataIsMutable();
        data_.set(index, value);
        onChanged();
      } else {
        dataBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder setData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType.Builder builderForValue) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.set(index, builderForValue.build());
        onChanged();
      } else {
        dataBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(uk.gov.gchq.event_logging.v4.DataComplexType value) {
      if (dataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataIsMutable();
        data_.add(value);
        onChanged();
      } else {
        dataBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType value) {
      if (dataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDataIsMutable();
        data_.add(index, value);
        onChanged();
      } else {
        dataBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(
        uk.gov.gchq.event_logging.v4.DataComplexType.Builder builderForValue) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.add(builderForValue.build());
        onChanged();
      } else {
        dataBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addData(
        int index, uk.gov.gchq.event_logging.v4.DataComplexType.Builder builderForValue) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.add(index, builderForValue.build());
        onChanged();
      } else {
        dataBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder addAllData(
        java.lang.Iterable<? extends uk.gov.gchq.event_logging.v4.DataComplexType> values) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, data_);
        onChanged();
      } else {
        dataBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder clearData() {
      if (dataBuilder_ == null) {
        data_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
      } else {
        dataBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public Builder removeData(int index) {
      if (dataBuilder_ == null) {
        ensureDataIsMutable();
        data_.remove(index);
        onChanged();
      } else {
        dataBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType.Builder getDataBuilder(
        int index) {
      return getDataFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder getDataOrBuilder(
        int index) {
      if (dataBuilder_ == null) {
        return data_.get(index);  } else {
        return dataBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public java.util.List<? extends uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> 
         getDataOrBuilderList() {
      if (dataBuilder_ != null) {
        return dataBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(data_);
      }
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType.Builder addDataBuilder() {
      return getDataFieldBuilder().addBuilder(
          uk.gov.gchq.event_logging.v4.DataComplexType.getDefaultInstance());
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public uk.gov.gchq.event_logging.v4.DataComplexType.Builder addDataBuilder(
        int index) {
      return getDataFieldBuilder().addBuilder(
          index, uk.gov.gchq.event_logging.v4.DataComplexType.getDefaultInstance());
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 8 [json_name = "data", (.buf.validate.field) = { ... }</code>
     */
    public java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType.Builder> 
         getDataBuilderList() {
      return getDataFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        uk.gov.gchq.event_logging.v4.DataComplexType, uk.gov.gchq.event_logging.v4.DataComplexType.Builder, uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> 
        getDataFieldBuilder() {
      if (dataBuilder_ == null) {
        dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            uk.gov.gchq.event_logging.v4.DataComplexType, uk.gov.gchq.event_logging.v4.DataComplexType.Builder, uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder>(
                data_,
                ((bitField0_ & 0x00000080) != 0),
                getParentForChildren(),
                isClean());
        data_ = null;
      }
      return dataBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:event_logging.v4.NetworkLocationComplexType)
  }

  // @@protoc_insertion_point(class_scope:event_logging.v4.NetworkLocationComplexType)
  private static final uk.gov.gchq.event_logging.v4.NetworkLocationComplexType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new uk.gov.gchq.event_logging.v4.NetworkLocationComplexType();
  }

  public static uk.gov.gchq.event_logging.v4.NetworkLocationComplexType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<NetworkLocationComplexType>
      PARSER = new com.google.protobuf.AbstractParser<NetworkLocationComplexType>() {
    @java.lang.Override
    public NetworkLocationComplexType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<NetworkLocationComplexType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<NetworkLocationComplexType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public uk.gov.gchq.event_logging.v4.NetworkLocationComplexType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

