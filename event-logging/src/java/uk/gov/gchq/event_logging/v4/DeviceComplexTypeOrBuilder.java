// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event_logging/v4/device_complex_type.proto

// Protobuf Java Version: 4.26.1
package uk.gov.gchq.event_logging.v4;

public interface DeviceComplexTypeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:event_logging.v4.DeviceComplexType)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Identifier used to uniquely identify the device within the organisation's asset register/system. Also, this can be used to identify a device that does not have HostName/IPAddress/MACAddress.
   * </pre>
   *
   * <code>string id = 1 [json_name = "id"];</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <pre>
   * Identifier used to uniquely identify the device within the organisation's asset register/system. Also, this can be used to identify a device that does not have HostName/IPAddress/MACAddress.
   * </pre>
   *
   * <code>string id = 1 [json_name = "id"];</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * A descriptive name of the device, e.g. 'Sun Fire X4600', 'HP LaserJet 4+'.
   * </pre>
   *
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * A descriptive name of the device, e.g. 'Sun Fire X4600', 'HP LaserJet 4+'.
   * </pre>
   *
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * The security classification associated with this device.
   * </pre>
   *
   * <code>.event_logging.v4.ClassificationComplexType classification = 3 [json_name = "classification"];</code>
   * @return Whether the classification field is set.
   */
  boolean hasClassification();
  /**
   * <pre>
   * The security classification associated with this device.
   * </pre>
   *
   * <code>.event_logging.v4.ClassificationComplexType classification = 3 [json_name = "classification"];</code>
   * @return The classification.
   */
  uk.gov.gchq.event_logging.v4.ClassificationComplexType getClassification();
  /**
   * <pre>
   * The security classification associated with this device.
   * </pre>
   *
   * <code>.event_logging.v4.ClassificationComplexType classification = 3 [json_name = "classification"];</code>
   */
  uk.gov.gchq.event_logging.v4.ClassificationComplexTypeOrBuilder getClassificationOrBuilder();

  /**
   * <pre>
   * The network host name of the device, e.g. someserver.somenet.org.uk. Ideally this field should always contain a fully qualified DNS name of the host.
   * </pre>
   *
   * <code>string host_name = 4 [json_name = "hostName"];</code>
   * @return The hostName.
   */
  java.lang.String getHostName();
  /**
   * <pre>
   * The network host name of the device, e.g. someserver.somenet.org.uk. Ideally this field should always contain a fully qualified DNS name of the host.
   * </pre>
   *
   * <code>string host_name = 4 [json_name = "hostName"];</code>
   * @return The bytes for hostName.
   */
  com.google.protobuf.ByteString
      getHostNameBytes();

  /**
   * <pre>
   * The network IP address of the device, e.g. 192.168.0.3. Ideally this should always be supplied.
   * </pre>
   *
   * <code>string ip_address = 5 [json_name = "ipAddress", (.buf.validate.field) = { ... }</code>
   * @return The ipAddress.
   */
  java.lang.String getIpAddress();
  /**
   * <pre>
   * The network IP address of the device, e.g. 192.168.0.3. Ideally this should always be supplied.
   * </pre>
   *
   * <code>string ip_address = 5 [json_name = "ipAddress", (.buf.validate.field) = { ... }</code>
   * @return The bytes for ipAddress.
   */
  com.google.protobuf.ByteString
      getIpAddressBytes();

  /**
   * <pre>
   * The Media Access Control (MAC) address of the device.
   * </pre>
   *
   * <code>string mac_address = 6 [json_name = "macAddress", (.buf.validate.field) = { ... }</code>
   * @return The macAddress.
   */
  java.lang.String getMacAddress();
  /**
   * <pre>
   * The Media Access Control (MAC) address of the device.
   * </pre>
   *
   * <code>string mac_address = 6 [json_name = "macAddress", (.buf.validate.field) = { ... }</code>
   * @return The bytes for macAddress.
   */
  com.google.protobuf.ByteString
      getMacAddressBytes();

  /**
   * <pre>
   * The network port that is being used on the device, e.g. 443.
   * </pre>
   *
   * <code>int32 port = 7 [json_name = "port"];</code>
   * @return The port.
   */
  int getPort();

  /**
   * <pre>
   * Describes the geographic location of the device.
   * </pre>
   *
   * <code>.event_logging.v4.LocationComplexType location = 8 [json_name = "location"];</code>
   * @return Whether the location field is set.
   */
  boolean hasLocation();
  /**
   * <pre>
   * Describes the geographic location of the device.
   * </pre>
   *
   * <code>.event_logging.v4.LocationComplexType location = 8 [json_name = "location"];</code>
   * @return The location.
   */
  uk.gov.gchq.event_logging.v4.LocationComplexType getLocation();
  /**
   * <pre>
   * Describes the geographic location of the device.
   * </pre>
   *
   * <code>.event_logging.v4.LocationComplexType location = 8 [json_name = "location"];</code>
   */
  uk.gov.gchq.event_logging.v4.LocationComplexTypeOrBuilder getLocationOrBuilder();

  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  java.util.List<uk.gov.gchq.event_logging.v4.DataComplexType> 
      getDataList();
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  uk.gov.gchq.event_logging.v4.DataComplexType getData(int index);
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  int getDataCount();
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  java.util.List<? extends uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder> 
      getDataOrBuilderList();
  /**
   * <pre>
   * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
   * </pre>
   *
   * <code>repeated .event_logging.v4.DataComplexType data = 9 [json_name = "data", (.buf.validate.field) = { ... }</code>
   */
  uk.gov.gchq.event_logging.v4.DataComplexTypeOrBuilder getDataOrBuilder(
      int index);
}
