// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event_logging/v4/print_complex_type.proto
// Protobuf Java Version: 4.26.1

package event_logging.v4;

public final class PrintComplexTypeOuterClass {
  private PrintComplexTypeOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      PrintComplexTypeOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PrintComplexTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_logging.v4.PrintComplexType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The print action that was performed, e.g. CreateJob.
     * </pre>
     *
     * <code>.event_logging.v4.PrintActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for action.
     */
    int getActionValue();
    /**
     * <pre>
     * The print action that was performed, e.g. CreateJob.
     * </pre>
     *
     * <code>.event_logging.v4.PrintActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
     * @return The action.
     */
    event_logging.v4.PrintActionSimpleTypeOuterClass.PrintActionSimpleType getAction();

    /**
     * <pre>
     * Describes the print job that the event relates to.
     * </pre>
     *
     * <code>.event_logging.v4.PrintComplexType.PrintJobType print_job = 2 [(.buf.validate.field) = { ... }</code>
     * @return Whether the printJob field is set.
     */
    boolean hasPrintJob();
    /**
     * <pre>
     * Describes the print job that the event relates to.
     * </pre>
     *
     * <code>.event_logging.v4.PrintComplexType.PrintJobType print_job = 2 [(.buf.validate.field) = { ... }</code>
     * @return The printJob.
     */
    event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType getPrintJob();
    /**
     * <pre>
     * Describes the print job that the event relates to.
     * </pre>
     *
     * <code>.event_logging.v4.PrintComplexType.PrintJobType print_job = 2 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobTypeOrBuilder getPrintJobOrBuilder();

    /**
     * <pre>
     * The printer settings that are to be used for the print job.
     * </pre>
     *
     * <code>.event_logging.v4.PrintComplexType.PrintSettingsType print_settings = 3;</code>
     * @return Whether the printSettings field is set.
     */
    boolean hasPrintSettings();
    /**
     * <pre>
     * The printer settings that are to be used for the print job.
     * </pre>
     *
     * <code>.event_logging.v4.PrintComplexType.PrintSettingsType print_settings = 3;</code>
     * @return The printSettings.
     */
    event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType getPrintSettings();
    /**
     * <pre>
     * The printer settings that are to be used for the print job.
     * </pre>
     *
     * <code>.event_logging.v4.PrintComplexType.PrintSettingsType print_settings = 3;</code>
     */
    event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsTypeOrBuilder getPrintSettingsOrBuilder();

    /**
     * <pre>
     * Describes the printer to use for the print job.
     * </pre>
     *
     * <code>.event_logging.v4.DeviceComplexType printer = 4;</code>
     * @return Whether the printer field is set.
     */
    boolean hasPrinter();
    /**
     * <pre>
     * Describes the printer to use for the print job.
     * </pre>
     *
     * <code>.event_logging.v4.DeviceComplexType printer = 4;</code>
     * @return The printer.
     */
    event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType getPrinter();
    /**
     * <pre>
     * Describes the printer to use for the print job.
     * </pre>
     *
     * <code>.event_logging.v4.DeviceComplexType printer = 4;</code>
     */
    event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexTypeOrBuilder getPrinterOrBuilder();

    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 5;</code>
     * @return Whether the outcome field is set.
     */
    boolean hasOutcome();
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 5;</code>
     * @return The outcome.
     */
    event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType getOutcome();
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 5;</code>
     */
    event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexTypeOrBuilder getOutcomeOrBuilder();

    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
     */
    java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> 
        getDataList();
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index);
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
     */
    int getDataCount();
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
     */
    java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
        getDataOrBuilderList();
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Describes an event relating to a printer, e.g. printing a document.
   * </pre>
   *
   * Protobuf type {@code event_logging.v4.PrintComplexType}
   */
  public static final class PrintComplexType extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:event_logging.v4.PrintComplexType)
      PrintComplexTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        PrintComplexType.class.getName());
    }
    // Use PrintComplexType.newBuilder() to construct.
    private PrintComplexType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private PrintComplexType() {
      action_ = 0;
      data_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return event_logging.v4.PrintComplexTypeOuterClass.internal_static_event_logging_v4_PrintComplexType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return event_logging.v4.PrintComplexTypeOuterClass.internal_static_event_logging_v4_PrintComplexType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.class, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.Builder.class);
    }

    public interface PrintJobTypeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:event_logging.v4.PrintComplexType.PrintJobType)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Describes the document being printed.
       * </pre>
       *
       * <code>.event_logging.v4.DocumentComplexType document = 1 [(.buf.validate.field) = { ... }</code>
       * @return Whether the document field is set.
       */
      boolean hasDocument();
      /**
       * <pre>
       * Describes the document being printed.
       * </pre>
       *
       * <code>.event_logging.v4.DocumentComplexType document = 1 [(.buf.validate.field) = { ... }</code>
       * @return The document.
       */
      event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexType getDocument();
      /**
       * <pre>
       * Describes the document being printed.
       * </pre>
       *
       * <code>.event_logging.v4.DocumentComplexType document = 1 [(.buf.validate.field) = { ... }</code>
       */
      event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexTypeOrBuilder getDocumentOrBuilder();

      /**
       * <pre>
       * The number of pages being printed.
       * </pre>
       *
       * <code>uint32 pages = 2 [(.buf.validate.field) = { ... }</code>
       * @return The pages.
       */
      int getPages();

      /**
       * <pre>
       * The size of the print job in bytes.
       * </pre>
       *
       * <code>uint32 size = 3 [(.buf.validate.field) = { ... }</code>
       * @return The size.
       */
      int getSize();

      /**
       * <pre>
       * The time that the print job was submitted.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp submitted = 4;</code>
       * @return Whether the submitted field is set.
       */
      boolean hasSubmitted();
      /**
       * <pre>
       * The time that the print job was submitted.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp submitted = 4;</code>
       * @return The submitted.
       */
      com.google.protobuf.Timestamp getSubmitted();
      /**
       * <pre>
       * The time that the print job was submitted.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp submitted = 4;</code>
       */
      com.google.protobuf.TimestampOrBuilder getSubmittedOrBuilder();
    }
    /**
     * <pre>
     * Describes the print job that the event relates to.
     * </pre>
     *
     * Protobuf type {@code event_logging.v4.PrintComplexType.PrintJobType}
     */
    public static final class PrintJobType extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:event_logging.v4.PrintComplexType.PrintJobType)
        PrintJobTypeOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 26,
          /* patch= */ 1,
          /* suffix= */ "",
          PrintJobType.class.getName());
      }
      // Use PrintJobType.newBuilder() to construct.
      private PrintJobType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private PrintJobType() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_logging.v4.PrintComplexTypeOuterClass.internal_static_event_logging_v4_PrintComplexType_PrintJobType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_logging.v4.PrintComplexTypeOuterClass.internal_static_event_logging_v4_PrintComplexType_PrintJobType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType.class, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType.Builder.class);
      }

      private int bitField0_;
      public static final int DOCUMENT_FIELD_NUMBER = 1;
      private event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexType document_;
      /**
       * <pre>
       * Describes the document being printed.
       * </pre>
       *
       * <code>.event_logging.v4.DocumentComplexType document = 1 [(.buf.validate.field) = { ... }</code>
       * @return Whether the document field is set.
       */
      @java.lang.Override
      public boolean hasDocument() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Describes the document being printed.
       * </pre>
       *
       * <code>.event_logging.v4.DocumentComplexType document = 1 [(.buf.validate.field) = { ... }</code>
       * @return The document.
       */
      @java.lang.Override
      public event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexType getDocument() {
        return document_ == null ? event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexType.getDefaultInstance() : document_;
      }
      /**
       * <pre>
       * Describes the document being printed.
       * </pre>
       *
       * <code>.event_logging.v4.DocumentComplexType document = 1 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexTypeOrBuilder getDocumentOrBuilder() {
        return document_ == null ? event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexType.getDefaultInstance() : document_;
      }

      public static final int PAGES_FIELD_NUMBER = 2;
      private int pages_ = 0;
      /**
       * <pre>
       * The number of pages being printed.
       * </pre>
       *
       * <code>uint32 pages = 2 [(.buf.validate.field) = { ... }</code>
       * @return The pages.
       */
      @java.lang.Override
      public int getPages() {
        return pages_;
      }

      public static final int SIZE_FIELD_NUMBER = 3;
      private int size_ = 0;
      /**
       * <pre>
       * The size of the print job in bytes.
       * </pre>
       *
       * <code>uint32 size = 3 [(.buf.validate.field) = { ... }</code>
       * @return The size.
       */
      @java.lang.Override
      public int getSize() {
        return size_;
      }

      public static final int SUBMITTED_FIELD_NUMBER = 4;
      private com.google.protobuf.Timestamp submitted_;
      /**
       * <pre>
       * The time that the print job was submitted.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp submitted = 4;</code>
       * @return Whether the submitted field is set.
       */
      @java.lang.Override
      public boolean hasSubmitted() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The time that the print job was submitted.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp submitted = 4;</code>
       * @return The submitted.
       */
      @java.lang.Override
      public com.google.protobuf.Timestamp getSubmitted() {
        return submitted_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : submitted_;
      }
      /**
       * <pre>
       * The time that the print job was submitted.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp submitted = 4;</code>
       */
      @java.lang.Override
      public com.google.protobuf.TimestampOrBuilder getSubmittedOrBuilder() {
        return submitted_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : submitted_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeMessage(1, getDocument());
        }
        if (pages_ != 0) {
          output.writeUInt32(2, pages_);
        }
        if (size_ != 0) {
          output.writeUInt32(3, size_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeMessage(4, getSubmitted());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getDocument());
        }
        if (pages_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, pages_);
        }
        if (size_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, size_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getSubmitted());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType)) {
          return super.equals(obj);
        }
        event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType other = (event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType) obj;

        if (hasDocument() != other.hasDocument()) return false;
        if (hasDocument()) {
          if (!getDocument()
              .equals(other.getDocument())) return false;
        }
        if (getPages()
            != other.getPages()) return false;
        if (getSize()
            != other.getSize()) return false;
        if (hasSubmitted() != other.hasSubmitted()) return false;
        if (hasSubmitted()) {
          if (!getSubmitted()
              .equals(other.getSubmitted())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDocument()) {
          hash = (37 * hash) + DOCUMENT_FIELD_NUMBER;
          hash = (53 * hash) + getDocument().hashCode();
        }
        hash = (37 * hash) + PAGES_FIELD_NUMBER;
        hash = (53 * hash) + getPages();
        hash = (37 * hash) + SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getSize();
        if (hasSubmitted()) {
          hash = (37 * hash) + SUBMITTED_FIELD_NUMBER;
          hash = (53 * hash) + getSubmitted().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Describes the print job that the event relates to.
       * </pre>
       *
       * Protobuf type {@code event_logging.v4.PrintComplexType.PrintJobType}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:event_logging.v4.PrintComplexType.PrintJobType)
          event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobTypeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return event_logging.v4.PrintComplexTypeOuterClass.internal_static_event_logging_v4_PrintComplexType_PrintJobType_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return event_logging.v4.PrintComplexTypeOuterClass.internal_static_event_logging_v4_PrintComplexType_PrintJobType_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType.class, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType.Builder.class);
        }

        // Construct using event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage
                  .alwaysUseFieldBuilders) {
            getDocumentFieldBuilder();
            getSubmittedFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          document_ = null;
          if (documentBuilder_ != null) {
            documentBuilder_.dispose();
            documentBuilder_ = null;
          }
          pages_ = 0;
          size_ = 0;
          submitted_ = null;
          if (submittedBuilder_ != null) {
            submittedBuilder_.dispose();
            submittedBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return event_logging.v4.PrintComplexTypeOuterClass.internal_static_event_logging_v4_PrintComplexType_PrintJobType_descriptor;
        }

        @java.lang.Override
        public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType getDefaultInstanceForType() {
          return event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType.getDefaultInstance();
        }

        @java.lang.Override
        public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType build() {
          event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType buildPartial() {
          event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType result = new event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.document_ = documentBuilder_ == null
                ? document_
                : documentBuilder_.build();
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.pages_ = pages_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.size_ = size_;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.submitted_ = submittedBuilder_ == null
                ? submitted_
                : submittedBuilder_.build();
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType) {
            return mergeFrom((event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType other) {
          if (other == event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType.getDefaultInstance()) return this;
          if (other.hasDocument()) {
            mergeDocument(other.getDocument());
          }
          if (other.getPages() != 0) {
            setPages(other.getPages());
          }
          if (other.getSize() != 0) {
            setSize(other.getSize());
          }
          if (other.hasSubmitted()) {
            mergeSubmitted(other.getSubmitted());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getDocumentFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 16: {
                  pages_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  size_ = input.readUInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 34: {
                  input.readMessage(
                      getSubmittedFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000008;
                  break;
                } // case 34
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexType document_;
        private com.google.protobuf.SingleFieldBuilder<
            event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexType, event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexType.Builder, event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexTypeOrBuilder> documentBuilder_;
        /**
         * <pre>
         * Describes the document being printed.
         * </pre>
         *
         * <code>.event_logging.v4.DocumentComplexType document = 1 [(.buf.validate.field) = { ... }</code>
         * @return Whether the document field is set.
         */
        public boolean hasDocument() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Describes the document being printed.
         * </pre>
         *
         * <code>.event_logging.v4.DocumentComplexType document = 1 [(.buf.validate.field) = { ... }</code>
         * @return The document.
         */
        public event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexType getDocument() {
          if (documentBuilder_ == null) {
            return document_ == null ? event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexType.getDefaultInstance() : document_;
          } else {
            return documentBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Describes the document being printed.
         * </pre>
         *
         * <code>.event_logging.v4.DocumentComplexType document = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder setDocument(event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexType value) {
          if (documentBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            document_ = value;
          } else {
            documentBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Describes the document being printed.
         * </pre>
         *
         * <code>.event_logging.v4.DocumentComplexType document = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder setDocument(
            event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexType.Builder builderForValue) {
          if (documentBuilder_ == null) {
            document_ = builderForValue.build();
          } else {
            documentBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Describes the document being printed.
         * </pre>
         *
         * <code>.event_logging.v4.DocumentComplexType document = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder mergeDocument(event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexType value) {
          if (documentBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0) &&
              document_ != null &&
              document_ != event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexType.getDefaultInstance()) {
              getDocumentBuilder().mergeFrom(value);
            } else {
              document_ = value;
            }
          } else {
            documentBuilder_.mergeFrom(value);
          }
          if (document_ != null) {
            bitField0_ |= 0x00000001;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * Describes the document being printed.
         * </pre>
         *
         * <code>.event_logging.v4.DocumentComplexType document = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder clearDocument() {
          bitField0_ = (bitField0_ & ~0x00000001);
          document_ = null;
          if (documentBuilder_ != null) {
            documentBuilder_.dispose();
            documentBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Describes the document being printed.
         * </pre>
         *
         * <code>.event_logging.v4.DocumentComplexType document = 1 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexType.Builder getDocumentBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getDocumentFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Describes the document being printed.
         * </pre>
         *
         * <code>.event_logging.v4.DocumentComplexType document = 1 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexTypeOrBuilder getDocumentOrBuilder() {
          if (documentBuilder_ != null) {
            return documentBuilder_.getMessageOrBuilder();
          } else {
            return document_ == null ?
                event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexType.getDefaultInstance() : document_;
          }
        }
        /**
         * <pre>
         * Describes the document being printed.
         * </pre>
         *
         * <code>.event_logging.v4.DocumentComplexType document = 1 [(.buf.validate.field) = { ... }</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexType, event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexType.Builder, event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexTypeOrBuilder> 
            getDocumentFieldBuilder() {
          if (documentBuilder_ == null) {
            documentBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexType, event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexType.Builder, event_logging.v4.DocumentComplexTypeOuterClass.DocumentComplexTypeOrBuilder>(
                    getDocument(),
                    getParentForChildren(),
                    isClean());
            document_ = null;
          }
          return documentBuilder_;
        }

        private int pages_ ;
        /**
         * <pre>
         * The number of pages being printed.
         * </pre>
         *
         * <code>uint32 pages = 2 [(.buf.validate.field) = { ... }</code>
         * @return The pages.
         */
        @java.lang.Override
        public int getPages() {
          return pages_;
        }
        /**
         * <pre>
         * The number of pages being printed.
         * </pre>
         *
         * <code>uint32 pages = 2 [(.buf.validate.field) = { ... }</code>
         * @param value The pages to set.
         * @return This builder for chaining.
         */
        public Builder setPages(int value) {

          pages_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The number of pages being printed.
         * </pre>
         *
         * <code>uint32 pages = 2 [(.buf.validate.field) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearPages() {
          bitField0_ = (bitField0_ & ~0x00000002);
          pages_ = 0;
          onChanged();
          return this;
        }

        private int size_ ;
        /**
         * <pre>
         * The size of the print job in bytes.
         * </pre>
         *
         * <code>uint32 size = 3 [(.buf.validate.field) = { ... }</code>
         * @return The size.
         */
        @java.lang.Override
        public int getSize() {
          return size_;
        }
        /**
         * <pre>
         * The size of the print job in bytes.
         * </pre>
         *
         * <code>uint32 size = 3 [(.buf.validate.field) = { ... }</code>
         * @param value The size to set.
         * @return This builder for chaining.
         */
        public Builder setSize(int value) {

          size_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The size of the print job in bytes.
         * </pre>
         *
         * <code>uint32 size = 3 [(.buf.validate.field) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearSize() {
          bitField0_ = (bitField0_ & ~0x00000004);
          size_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.Timestamp submitted_;
        private com.google.protobuf.SingleFieldBuilder<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> submittedBuilder_;
        /**
         * <pre>
         * The time that the print job was submitted.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp submitted = 4;</code>
         * @return Whether the submitted field is set.
         */
        public boolean hasSubmitted() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * The time that the print job was submitted.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp submitted = 4;</code>
         * @return The submitted.
         */
        public com.google.protobuf.Timestamp getSubmitted() {
          if (submittedBuilder_ == null) {
            return submitted_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : submitted_;
          } else {
            return submittedBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The time that the print job was submitted.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp submitted = 4;</code>
         */
        public Builder setSubmitted(com.google.protobuf.Timestamp value) {
          if (submittedBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            submitted_ = value;
          } else {
            submittedBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The time that the print job was submitted.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp submitted = 4;</code>
         */
        public Builder setSubmitted(
            com.google.protobuf.Timestamp.Builder builderForValue) {
          if (submittedBuilder_ == null) {
            submitted_ = builderForValue.build();
          } else {
            submittedBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The time that the print job was submitted.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp submitted = 4;</code>
         */
        public Builder mergeSubmitted(com.google.protobuf.Timestamp value) {
          if (submittedBuilder_ == null) {
            if (((bitField0_ & 0x00000008) != 0) &&
              submitted_ != null &&
              submitted_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
              getSubmittedBuilder().mergeFrom(value);
            } else {
              submitted_ = value;
            }
          } else {
            submittedBuilder_.mergeFrom(value);
          }
          if (submitted_ != null) {
            bitField0_ |= 0x00000008;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * The time that the print job was submitted.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp submitted = 4;</code>
         */
        public Builder clearSubmitted() {
          bitField0_ = (bitField0_ & ~0x00000008);
          submitted_ = null;
          if (submittedBuilder_ != null) {
            submittedBuilder_.dispose();
            submittedBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The time that the print job was submitted.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp submitted = 4;</code>
         */
        public com.google.protobuf.Timestamp.Builder getSubmittedBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getSubmittedFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The time that the print job was submitted.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp submitted = 4;</code>
         */
        public com.google.protobuf.TimestampOrBuilder getSubmittedOrBuilder() {
          if (submittedBuilder_ != null) {
            return submittedBuilder_.getMessageOrBuilder();
          } else {
            return submitted_ == null ?
                com.google.protobuf.Timestamp.getDefaultInstance() : submitted_;
          }
        }
        /**
         * <pre>
         * The time that the print job was submitted.
         * </pre>
         *
         * <code>.google.protobuf.Timestamp submitted = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
            getSubmittedFieldBuilder() {
          if (submittedBuilder_ == null) {
            submittedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                    getSubmitted(),
                    getParentForChildren(),
                    isClean());
            submitted_ = null;
          }
          return submittedBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:event_logging.v4.PrintComplexType.PrintJobType)
      }

      // @@protoc_insertion_point(class_scope:event_logging.v4.PrintComplexType.PrintJobType)
      private static final event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType();
      }

      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PrintJobType>
          PARSER = new com.google.protobuf.AbstractParser<PrintJobType>() {
        @java.lang.Override
        public PrintJobType parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<PrintJobType> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PrintJobType> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PrintSettingsTypeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:event_logging.v4.PrintComplexType.PrintSettingsType)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The paper size, e.g. A4.
       * </pre>
       *
       * <code>string paper_size = 1;</code>
       * @return The paperSize.
       */
      java.lang.String getPaperSize();
      /**
       * <pre>
       * The paper size, e.g. A4.
       * </pre>
       *
       * <code>string paper_size = 1;</code>
       * @return The bytes for paperSize.
       */
      com.google.protobuf.ByteString
          getPaperSizeBytes();

      /**
       * <pre>
       * The paper orientation, e.g. Portrait, Landscape.
       * </pre>
       *
       * <code>.event_logging.v4.PrintSettingsOrientationSimpleType orientation = 2 [(.buf.validate.field) = { ... }</code>
       * @return The enum numeric value on the wire for orientation.
       */
      int getOrientationValue();
      /**
       * <pre>
       * The paper orientation, e.g. Portrait, Landscape.
       * </pre>
       *
       * <code>.event_logging.v4.PrintSettingsOrientationSimpleType orientation = 2 [(.buf.validate.field) = { ... }</code>
       * @return The orientation.
       */
      event_logging.v4.PrintSettingsOrientationSimpleTypeOuterClass.PrintSettingsOrientationSimpleType getOrientation();

      /**
       * <pre>
       * True if printing in colour. Most printing is performed in black and white so this defaults to false and can therefore be omitted if printing in black and white.
       * </pre>
       *
       * <code>bool colour = 3;</code>
       * @return The colour.
       */
      boolean getColour();

      /**
       * <pre>
       * True if fonts are to be used on the printing device. Using device fonts reduces the size of the print job as no font information needs to be supplied to the printer. However, using device fonts will result in different output on different printers. Most print jobs will not use device fonts so this defaults to false and can therefore be omitted if device fonts are not being used.
       * </pre>
       *
       * <code>bool device_fonts = 4;</code>
       * @return The deviceFonts.
       */
      boolean getDeviceFonts();

      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> 
          getDataList();
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index);
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      int getDataCount();
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
          getDataOrBuilderList();
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
          int index);
    }
    /**
     * <pre>
     * The printer settings that are to be used for the print job.
     * </pre>
     *
     * Protobuf type {@code event_logging.v4.PrintComplexType.PrintSettingsType}
     */
    public static final class PrintSettingsType extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:event_logging.v4.PrintComplexType.PrintSettingsType)
        PrintSettingsTypeOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 26,
          /* patch= */ 1,
          /* suffix= */ "",
          PrintSettingsType.class.getName());
      }
      // Use PrintSettingsType.newBuilder() to construct.
      private PrintSettingsType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private PrintSettingsType() {
        paperSize_ = "";
        orientation_ = 0;
        data_ = java.util.Collections.emptyList();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_logging.v4.PrintComplexTypeOuterClass.internal_static_event_logging_v4_PrintComplexType_PrintSettingsType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_logging.v4.PrintComplexTypeOuterClass.internal_static_event_logging_v4_PrintComplexType_PrintSettingsType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType.class, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType.Builder.class);
      }

      public static final int PAPER_SIZE_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object paperSize_ = "";
      /**
       * <pre>
       * The paper size, e.g. A4.
       * </pre>
       *
       * <code>string paper_size = 1;</code>
       * @return The paperSize.
       */
      @java.lang.Override
      public java.lang.String getPaperSize() {
        java.lang.Object ref = paperSize_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          paperSize_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The paper size, e.g. A4.
       * </pre>
       *
       * <code>string paper_size = 1;</code>
       * @return The bytes for paperSize.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getPaperSizeBytes() {
        java.lang.Object ref = paperSize_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          paperSize_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ORIENTATION_FIELD_NUMBER = 2;
      private int orientation_ = 0;
      /**
       * <pre>
       * The paper orientation, e.g. Portrait, Landscape.
       * </pre>
       *
       * <code>.event_logging.v4.PrintSettingsOrientationSimpleType orientation = 2 [(.buf.validate.field) = { ... }</code>
       * @return The enum numeric value on the wire for orientation.
       */
      @java.lang.Override public int getOrientationValue() {
        return orientation_;
      }
      /**
       * <pre>
       * The paper orientation, e.g. Portrait, Landscape.
       * </pre>
       *
       * <code>.event_logging.v4.PrintSettingsOrientationSimpleType orientation = 2 [(.buf.validate.field) = { ... }</code>
       * @return The orientation.
       */
      @java.lang.Override public event_logging.v4.PrintSettingsOrientationSimpleTypeOuterClass.PrintSettingsOrientationSimpleType getOrientation() {
        event_logging.v4.PrintSettingsOrientationSimpleTypeOuterClass.PrintSettingsOrientationSimpleType result = event_logging.v4.PrintSettingsOrientationSimpleTypeOuterClass.PrintSettingsOrientationSimpleType.forNumber(orientation_);
        return result == null ? event_logging.v4.PrintSettingsOrientationSimpleTypeOuterClass.PrintSettingsOrientationSimpleType.UNRECOGNIZED : result;
      }

      public static final int COLOUR_FIELD_NUMBER = 3;
      private boolean colour_ = false;
      /**
       * <pre>
       * True if printing in colour. Most printing is performed in black and white so this defaults to false and can therefore be omitted if printing in black and white.
       * </pre>
       *
       * <code>bool colour = 3;</code>
       * @return The colour.
       */
      @java.lang.Override
      public boolean getColour() {
        return colour_;
      }

      public static final int DEVICE_FONTS_FIELD_NUMBER = 4;
      private boolean deviceFonts_ = false;
      /**
       * <pre>
       * True if fonts are to be used on the printing device. Using device fonts reduces the size of the print job as no font information needs to be supplied to the printer. However, using device fonts will result in different output on different printers. Most print jobs will not use device fonts so this defaults to false and can therefore be omitted if device fonts are not being used.
       * </pre>
       *
       * <code>bool device_fonts = 4;</code>
       * @return The deviceFonts.
       */
      @java.lang.Override
      public boolean getDeviceFonts() {
        return deviceFonts_;
      }

      public static final int DATA_FIELD_NUMBER = 5;
      @SuppressWarnings("serial")
      private java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> data_;
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> getDataList() {
        return data_;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
          getDataOrBuilderList() {
        return data_;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public int getDataCount() {
        return data_.size();
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index) {
        return data_.get(index);
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
          int index) {
        return data_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessage.isStringEmpty(paperSize_)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 1, paperSize_);
        }
        if (orientation_ != event_logging.v4.PrintSettingsOrientationSimpleTypeOuterClass.PrintSettingsOrientationSimpleType.PRINT_SETTINGS_ORIENTATION_SIMPLE_TYPE_UNSPECIFIED.getNumber()) {
          output.writeEnum(2, orientation_);
        }
        if (colour_ != false) {
          output.writeBool(3, colour_);
        }
        if (deviceFonts_ != false) {
          output.writeBool(4, deviceFonts_);
        }
        for (int i = 0; i < data_.size(); i++) {
          output.writeMessage(5, data_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessage.isStringEmpty(paperSize_)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(1, paperSize_);
        }
        if (orientation_ != event_logging.v4.PrintSettingsOrientationSimpleTypeOuterClass.PrintSettingsOrientationSimpleType.PRINT_SETTINGS_ORIENTATION_SIMPLE_TYPE_UNSPECIFIED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, orientation_);
        }
        if (colour_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, colour_);
        }
        if (deviceFonts_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, deviceFonts_);
        }
        for (int i = 0; i < data_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, data_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType)) {
          return super.equals(obj);
        }
        event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType other = (event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType) obj;

        if (!getPaperSize()
            .equals(other.getPaperSize())) return false;
        if (orientation_ != other.orientation_) return false;
        if (getColour()
            != other.getColour()) return false;
        if (getDeviceFonts()
            != other.getDeviceFonts()) return false;
        if (!getDataList()
            .equals(other.getDataList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + PAPER_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getPaperSize().hashCode();
        hash = (37 * hash) + ORIENTATION_FIELD_NUMBER;
        hash = (53 * hash) + orientation_;
        hash = (37 * hash) + COLOUR_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getColour());
        hash = (37 * hash) + DEVICE_FONTS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getDeviceFonts());
        if (getDataCount() > 0) {
          hash = (37 * hash) + DATA_FIELD_NUMBER;
          hash = (53 * hash) + getDataList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * The printer settings that are to be used for the print job.
       * </pre>
       *
       * Protobuf type {@code event_logging.v4.PrintComplexType.PrintSettingsType}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:event_logging.v4.PrintComplexType.PrintSettingsType)
          event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsTypeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return event_logging.v4.PrintComplexTypeOuterClass.internal_static_event_logging_v4_PrintComplexType_PrintSettingsType_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return event_logging.v4.PrintComplexTypeOuterClass.internal_static_event_logging_v4_PrintComplexType_PrintSettingsType_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType.class, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType.Builder.class);
        }

        // Construct using event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          paperSize_ = "";
          orientation_ = 0;
          colour_ = false;
          deviceFonts_ = false;
          if (dataBuilder_ == null) {
            data_ = java.util.Collections.emptyList();
          } else {
            data_ = null;
            dataBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return event_logging.v4.PrintComplexTypeOuterClass.internal_static_event_logging_v4_PrintComplexType_PrintSettingsType_descriptor;
        }

        @java.lang.Override
        public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType getDefaultInstanceForType() {
          return event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType.getDefaultInstance();
        }

        @java.lang.Override
        public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType build() {
          event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType buildPartial() {
          event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType result = new event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType result) {
          if (dataBuilder_ == null) {
            if (((bitField0_ & 0x00000010) != 0)) {
              data_ = java.util.Collections.unmodifiableList(data_);
              bitField0_ = (bitField0_ & ~0x00000010);
            }
            result.data_ = data_;
          } else {
            result.data_ = dataBuilder_.build();
          }
        }

        private void buildPartial0(event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.paperSize_ = paperSize_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.orientation_ = orientation_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.colour_ = colour_;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.deviceFonts_ = deviceFonts_;
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType) {
            return mergeFrom((event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType other) {
          if (other == event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType.getDefaultInstance()) return this;
          if (!other.getPaperSize().isEmpty()) {
            paperSize_ = other.paperSize_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          if (other.orientation_ != 0) {
            setOrientationValue(other.getOrientationValue());
          }
          if (other.getColour() != false) {
            setColour(other.getColour());
          }
          if (other.getDeviceFonts() != false) {
            setDeviceFonts(other.getDeviceFonts());
          }
          if (dataBuilder_ == null) {
            if (!other.data_.isEmpty()) {
              if (data_.isEmpty()) {
                data_ = other.data_;
                bitField0_ = (bitField0_ & ~0x00000010);
              } else {
                ensureDataIsMutable();
                data_.addAll(other.data_);
              }
              onChanged();
            }
          } else {
            if (!other.data_.isEmpty()) {
              if (dataBuilder_.isEmpty()) {
                dataBuilder_.dispose();
                dataBuilder_ = null;
                data_ = other.data_;
                bitField0_ = (bitField0_ & ~0x00000010);
                dataBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getDataFieldBuilder() : null;
              } else {
                dataBuilder_.addAllMessages(other.data_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  paperSize_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 16: {
                  orientation_ = input.readEnum();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  colour_ = input.readBool();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  deviceFonts_ = input.readBool();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 42: {
                  event_logging.v4.DataComplexTypeOuterClass.DataComplexType m =
                      input.readMessage(
                          event_logging.v4.DataComplexTypeOuterClass.DataComplexType.parser(),
                          extensionRegistry);
                  if (dataBuilder_ == null) {
                    ensureDataIsMutable();
                    data_.add(m);
                  } else {
                    dataBuilder_.addMessage(m);
                  }
                  break;
                } // case 42
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.lang.Object paperSize_ = "";
        /**
         * <pre>
         * The paper size, e.g. A4.
         * </pre>
         *
         * <code>string paper_size = 1;</code>
         * @return The paperSize.
         */
        public java.lang.String getPaperSize() {
          java.lang.Object ref = paperSize_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            paperSize_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The paper size, e.g. A4.
         * </pre>
         *
         * <code>string paper_size = 1;</code>
         * @return The bytes for paperSize.
         */
        public com.google.protobuf.ByteString
            getPaperSizeBytes() {
          java.lang.Object ref = paperSize_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            paperSize_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The paper size, e.g. A4.
         * </pre>
         *
         * <code>string paper_size = 1;</code>
         * @param value The paperSize to set.
         * @return This builder for chaining.
         */
        public Builder setPaperSize(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          paperSize_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The paper size, e.g. A4.
         * </pre>
         *
         * <code>string paper_size = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearPaperSize() {
          paperSize_ = getDefaultInstance().getPaperSize();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The paper size, e.g. A4.
         * </pre>
         *
         * <code>string paper_size = 1;</code>
         * @param value The bytes for paperSize to set.
         * @return This builder for chaining.
         */
        public Builder setPaperSizeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          paperSize_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private int orientation_ = 0;
        /**
         * <pre>
         * The paper orientation, e.g. Portrait, Landscape.
         * </pre>
         *
         * <code>.event_logging.v4.PrintSettingsOrientationSimpleType orientation = 2 [(.buf.validate.field) = { ... }</code>
         * @return The enum numeric value on the wire for orientation.
         */
        @java.lang.Override public int getOrientationValue() {
          return orientation_;
        }
        /**
         * <pre>
         * The paper orientation, e.g. Portrait, Landscape.
         * </pre>
         *
         * <code>.event_logging.v4.PrintSettingsOrientationSimpleType orientation = 2 [(.buf.validate.field) = { ... }</code>
         * @param value The enum numeric value on the wire for orientation to set.
         * @return This builder for chaining.
         */
        public Builder setOrientationValue(int value) {
          orientation_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The paper orientation, e.g. Portrait, Landscape.
         * </pre>
         *
         * <code>.event_logging.v4.PrintSettingsOrientationSimpleType orientation = 2 [(.buf.validate.field) = { ... }</code>
         * @return The orientation.
         */
        @java.lang.Override
        public event_logging.v4.PrintSettingsOrientationSimpleTypeOuterClass.PrintSettingsOrientationSimpleType getOrientation() {
          event_logging.v4.PrintSettingsOrientationSimpleTypeOuterClass.PrintSettingsOrientationSimpleType result = event_logging.v4.PrintSettingsOrientationSimpleTypeOuterClass.PrintSettingsOrientationSimpleType.forNumber(orientation_);
          return result == null ? event_logging.v4.PrintSettingsOrientationSimpleTypeOuterClass.PrintSettingsOrientationSimpleType.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * The paper orientation, e.g. Portrait, Landscape.
         * </pre>
         *
         * <code>.event_logging.v4.PrintSettingsOrientationSimpleType orientation = 2 [(.buf.validate.field) = { ... }</code>
         * @param value The orientation to set.
         * @return This builder for chaining.
         */
        public Builder setOrientation(event_logging.v4.PrintSettingsOrientationSimpleTypeOuterClass.PrintSettingsOrientationSimpleType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          orientation_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The paper orientation, e.g. Portrait, Landscape.
         * </pre>
         *
         * <code>.event_logging.v4.PrintSettingsOrientationSimpleType orientation = 2 [(.buf.validate.field) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearOrientation() {
          bitField0_ = (bitField0_ & ~0x00000002);
          orientation_ = 0;
          onChanged();
          return this;
        }

        private boolean colour_ ;
        /**
         * <pre>
         * True if printing in colour. Most printing is performed in black and white so this defaults to false and can therefore be omitted if printing in black and white.
         * </pre>
         *
         * <code>bool colour = 3;</code>
         * @return The colour.
         */
        @java.lang.Override
        public boolean getColour() {
          return colour_;
        }
        /**
         * <pre>
         * True if printing in colour. Most printing is performed in black and white so this defaults to false and can therefore be omitted if printing in black and white.
         * </pre>
         *
         * <code>bool colour = 3;</code>
         * @param value The colour to set.
         * @return This builder for chaining.
         */
        public Builder setColour(boolean value) {

          colour_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * True if printing in colour. Most printing is performed in black and white so this defaults to false and can therefore be omitted if printing in black and white.
         * </pre>
         *
         * <code>bool colour = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearColour() {
          bitField0_ = (bitField0_ & ~0x00000004);
          colour_ = false;
          onChanged();
          return this;
        }

        private boolean deviceFonts_ ;
        /**
         * <pre>
         * True if fonts are to be used on the printing device. Using device fonts reduces the size of the print job as no font information needs to be supplied to the printer. However, using device fonts will result in different output on different printers. Most print jobs will not use device fonts so this defaults to false and can therefore be omitted if device fonts are not being used.
         * </pre>
         *
         * <code>bool device_fonts = 4;</code>
         * @return The deviceFonts.
         */
        @java.lang.Override
        public boolean getDeviceFonts() {
          return deviceFonts_;
        }
        /**
         * <pre>
         * True if fonts are to be used on the printing device. Using device fonts reduces the size of the print job as no font information needs to be supplied to the printer. However, using device fonts will result in different output on different printers. Most print jobs will not use device fonts so this defaults to false and can therefore be omitted if device fonts are not being used.
         * </pre>
         *
         * <code>bool device_fonts = 4;</code>
         * @param value The deviceFonts to set.
         * @return This builder for chaining.
         */
        public Builder setDeviceFonts(boolean value) {

          deviceFonts_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * True if fonts are to be used on the printing device. Using device fonts reduces the size of the print job as no font information needs to be supplied to the printer. However, using device fonts will result in different output on different printers. Most print jobs will not use device fonts so this defaults to false and can therefore be omitted if device fonts are not being used.
         * </pre>
         *
         * <code>bool device_fonts = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearDeviceFonts() {
          bitField0_ = (bitField0_ & ~0x00000008);
          deviceFonts_ = false;
          onChanged();
          return this;
        }

        private java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> data_ =
          java.util.Collections.emptyList();
        private void ensureDataIsMutable() {
          if (!((bitField0_ & 0x00000010) != 0)) {
            data_ = new java.util.ArrayList<event_logging.v4.DataComplexTypeOuterClass.DataComplexType>(data_);
            bitField0_ |= 0x00000010;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> dataBuilder_;

        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
         */
        public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> getDataList() {
          if (dataBuilder_ == null) {
            return java.util.Collections.unmodifiableList(data_);
          } else {
            return dataBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
         */
        public int getDataCount() {
          if (dataBuilder_ == null) {
            return data_.size();
          } else {
            return dataBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index) {
          if (dataBuilder_ == null) {
            return data_.get(index);
          } else {
            return dataBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
         */
        public Builder setData(
            int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
          if (dataBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDataIsMutable();
            data_.set(index, value);
            onChanged();
          } else {
            dataBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
         */
        public Builder setData(
            int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
          if (dataBuilder_ == null) {
            ensureDataIsMutable();
            data_.set(index, builderForValue.build());
            onChanged();
          } else {
            dataBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addData(event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
          if (dataBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDataIsMutable();
            data_.add(value);
            onChanged();
          } else {
            dataBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addData(
            int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
          if (dataBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDataIsMutable();
            data_.add(index, value);
            onChanged();
          } else {
            dataBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addData(
            event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
          if (dataBuilder_ == null) {
            ensureDataIsMutable();
            data_.add(builderForValue.build());
            onChanged();
          } else {
            dataBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addData(
            int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
          if (dataBuilder_ == null) {
            ensureDataIsMutable();
            data_.add(index, builderForValue.build());
            onChanged();
          } else {
            dataBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addAllData(
            java.lang.Iterable<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexType> values) {
          if (dataBuilder_ == null) {
            ensureDataIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, data_);
            onChanged();
          } else {
            dataBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
         */
        public Builder clearData() {
          if (dataBuilder_ == null) {
            data_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
            onChanged();
          } else {
            dataBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
         */
        public Builder removeData(int index) {
          if (dataBuilder_ == null) {
            ensureDataIsMutable();
            data_.remove(index);
            onChanged();
          } else {
            dataBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder getDataBuilder(
            int index) {
          return getDataFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
            int index) {
          if (dataBuilder_ == null) {
            return data_.get(index);  } else {
            return dataBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
         */
        public java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
             getDataOrBuilderList() {
          if (dataBuilder_ != null) {
            return dataBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(data_);
          }
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder addDataBuilder() {
          return getDataFieldBuilder().addBuilder(
              event_logging.v4.DataComplexTypeOuterClass.DataComplexType.getDefaultInstance());
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder addDataBuilder(
            int index) {
          return getDataFieldBuilder().addBuilder(
              index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.getDefaultInstance());
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
         */
        public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder> 
             getDataBuilderList() {
          return getDataFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
            getDataFieldBuilder() {
          if (dataBuilder_ == null) {
            dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder>(
                    data_,
                    ((bitField0_ & 0x00000010) != 0),
                    getParentForChildren(),
                    isClean());
            data_ = null;
          }
          return dataBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:event_logging.v4.PrintComplexType.PrintSettingsType)
      }

      // @@protoc_insertion_point(class_scope:event_logging.v4.PrintComplexType.PrintSettingsType)
      private static final event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType();
      }

      public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PrintSettingsType>
          PARSER = new com.google.protobuf.AbstractParser<PrintSettingsType>() {
        @java.lang.Override
        public PrintSettingsType parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<PrintSettingsType> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PrintSettingsType> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ACTION_FIELD_NUMBER = 1;
    private int action_ = 0;
    /**
     * <pre>
     * The print action that was performed, e.g. CreateJob.
     * </pre>
     *
     * <code>.event_logging.v4.PrintActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for action.
     */
    @java.lang.Override public int getActionValue() {
      return action_;
    }
    /**
     * <pre>
     * The print action that was performed, e.g. CreateJob.
     * </pre>
     *
     * <code>.event_logging.v4.PrintActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
     * @return The action.
     */
    @java.lang.Override public event_logging.v4.PrintActionSimpleTypeOuterClass.PrintActionSimpleType getAction() {
      event_logging.v4.PrintActionSimpleTypeOuterClass.PrintActionSimpleType result = event_logging.v4.PrintActionSimpleTypeOuterClass.PrintActionSimpleType.forNumber(action_);
      return result == null ? event_logging.v4.PrintActionSimpleTypeOuterClass.PrintActionSimpleType.UNRECOGNIZED : result;
    }

    public static final int PRINT_JOB_FIELD_NUMBER = 2;
    private event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType printJob_;
    /**
     * <pre>
     * Describes the print job that the event relates to.
     * </pre>
     *
     * <code>.event_logging.v4.PrintComplexType.PrintJobType print_job = 2 [(.buf.validate.field) = { ... }</code>
     * @return Whether the printJob field is set.
     */
    @java.lang.Override
    public boolean hasPrintJob() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Describes the print job that the event relates to.
     * </pre>
     *
     * <code>.event_logging.v4.PrintComplexType.PrintJobType print_job = 2 [(.buf.validate.field) = { ... }</code>
     * @return The printJob.
     */
    @java.lang.Override
    public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType getPrintJob() {
      return printJob_ == null ? event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType.getDefaultInstance() : printJob_;
    }
    /**
     * <pre>
     * Describes the print job that the event relates to.
     * </pre>
     *
     * <code>.event_logging.v4.PrintComplexType.PrintJobType print_job = 2 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobTypeOrBuilder getPrintJobOrBuilder() {
      return printJob_ == null ? event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType.getDefaultInstance() : printJob_;
    }

    public static final int PRINT_SETTINGS_FIELD_NUMBER = 3;
    private event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType printSettings_;
    /**
     * <pre>
     * The printer settings that are to be used for the print job.
     * </pre>
     *
     * <code>.event_logging.v4.PrintComplexType.PrintSettingsType print_settings = 3;</code>
     * @return Whether the printSettings field is set.
     */
    @java.lang.Override
    public boolean hasPrintSettings() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The printer settings that are to be used for the print job.
     * </pre>
     *
     * <code>.event_logging.v4.PrintComplexType.PrintSettingsType print_settings = 3;</code>
     * @return The printSettings.
     */
    @java.lang.Override
    public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType getPrintSettings() {
      return printSettings_ == null ? event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType.getDefaultInstance() : printSettings_;
    }
    /**
     * <pre>
     * The printer settings that are to be used for the print job.
     * </pre>
     *
     * <code>.event_logging.v4.PrintComplexType.PrintSettingsType print_settings = 3;</code>
     */
    @java.lang.Override
    public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsTypeOrBuilder getPrintSettingsOrBuilder() {
      return printSettings_ == null ? event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType.getDefaultInstance() : printSettings_;
    }

    public static final int PRINTER_FIELD_NUMBER = 4;
    private event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType printer_;
    /**
     * <pre>
     * Describes the printer to use for the print job.
     * </pre>
     *
     * <code>.event_logging.v4.DeviceComplexType printer = 4;</code>
     * @return Whether the printer field is set.
     */
    @java.lang.Override
    public boolean hasPrinter() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Describes the printer to use for the print job.
     * </pre>
     *
     * <code>.event_logging.v4.DeviceComplexType printer = 4;</code>
     * @return The printer.
     */
    @java.lang.Override
    public event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType getPrinter() {
      return printer_ == null ? event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType.getDefaultInstance() : printer_;
    }
    /**
     * <pre>
     * Describes the printer to use for the print job.
     * </pre>
     *
     * <code>.event_logging.v4.DeviceComplexType printer = 4;</code>
     */
    @java.lang.Override
    public event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexTypeOrBuilder getPrinterOrBuilder() {
      return printer_ == null ? event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType.getDefaultInstance() : printer_;
    }

    public static final int OUTCOME_FIELD_NUMBER = 5;
    private event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType outcome_;
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 5;</code>
     * @return Whether the outcome field is set.
     */
    @java.lang.Override
    public boolean hasOutcome() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 5;</code>
     * @return The outcome.
     */
    @java.lang.Override
    public event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType getOutcome() {
      return outcome_ == null ? event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.getDefaultInstance() : outcome_;
    }
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 5;</code>
     */
    @java.lang.Override
    public event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexTypeOrBuilder getOutcomeOrBuilder() {
      return outcome_ == null ? event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.getDefaultInstance() : outcome_;
    }

    public static final int DATA_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> data_;
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> getDataList() {
      return data_;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
        getDataOrBuilderList() {
      return data_;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index) {
      return data_.get(index);
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
        int index) {
      return data_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (action_ != event_logging.v4.PrintActionSimpleTypeOuterClass.PrintActionSimpleType.PRINT_ACTION_SIMPLE_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, action_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getPrintJob());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(3, getPrintSettings());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(4, getPrinter());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(5, getOutcome());
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeMessage(6, data_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (action_ != event_logging.v4.PrintActionSimpleTypeOuterClass.PrintActionSimpleType.PRINT_ACTION_SIMPLE_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, action_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPrintJob());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getPrintSettings());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPrinter());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getOutcome());
      }
      for (int i = 0; i < data_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, data_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType)) {
        return super.equals(obj);
      }
      event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType other = (event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType) obj;

      if (action_ != other.action_) return false;
      if (hasPrintJob() != other.hasPrintJob()) return false;
      if (hasPrintJob()) {
        if (!getPrintJob()
            .equals(other.getPrintJob())) return false;
      }
      if (hasPrintSettings() != other.hasPrintSettings()) return false;
      if (hasPrintSettings()) {
        if (!getPrintSettings()
            .equals(other.getPrintSettings())) return false;
      }
      if (hasPrinter() != other.hasPrinter()) return false;
      if (hasPrinter()) {
        if (!getPrinter()
            .equals(other.getPrinter())) return false;
      }
      if (hasOutcome() != other.hasOutcome()) return false;
      if (hasOutcome()) {
        if (!getOutcome()
            .equals(other.getOutcome())) return false;
      }
      if (!getDataList()
          .equals(other.getDataList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ACTION_FIELD_NUMBER;
      hash = (53 * hash) + action_;
      if (hasPrintJob()) {
        hash = (37 * hash) + PRINT_JOB_FIELD_NUMBER;
        hash = (53 * hash) + getPrintJob().hashCode();
      }
      if (hasPrintSettings()) {
        hash = (37 * hash) + PRINT_SETTINGS_FIELD_NUMBER;
        hash = (53 * hash) + getPrintSettings().hashCode();
      }
      if (hasPrinter()) {
        hash = (37 * hash) + PRINTER_FIELD_NUMBER;
        hash = (53 * hash) + getPrinter().hashCode();
      }
      if (hasOutcome()) {
        hash = (37 * hash) + OUTCOME_FIELD_NUMBER;
        hash = (53 * hash) + getOutcome().hashCode();
      }
      if (getDataCount() > 0) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDataList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes an event relating to a printer, e.g. printing a document.
     * </pre>
     *
     * Protobuf type {@code event_logging.v4.PrintComplexType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_logging.v4.PrintComplexType)
        event_logging.v4.PrintComplexTypeOuterClass.PrintComplexTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_logging.v4.PrintComplexTypeOuterClass.internal_static_event_logging_v4_PrintComplexType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_logging.v4.PrintComplexTypeOuterClass.internal_static_event_logging_v4_PrintComplexType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.class, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.Builder.class);
      }

      // Construct using event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getPrintJobFieldBuilder();
          getPrintSettingsFieldBuilder();
          getPrinterFieldBuilder();
          getOutcomeFieldBuilder();
          getDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        action_ = 0;
        printJob_ = null;
        if (printJobBuilder_ != null) {
          printJobBuilder_.dispose();
          printJobBuilder_ = null;
        }
        printSettings_ = null;
        if (printSettingsBuilder_ != null) {
          printSettingsBuilder_.dispose();
          printSettingsBuilder_ = null;
        }
        printer_ = null;
        if (printerBuilder_ != null) {
          printerBuilder_.dispose();
          printerBuilder_ = null;
        }
        outcome_ = null;
        if (outcomeBuilder_ != null) {
          outcomeBuilder_.dispose();
          outcomeBuilder_ = null;
        }
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
        } else {
          data_ = null;
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return event_logging.v4.PrintComplexTypeOuterClass.internal_static_event_logging_v4_PrintComplexType_descriptor;
      }

      @java.lang.Override
      public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType getDefaultInstanceForType() {
        return event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.getDefaultInstance();
      }

      @java.lang.Override
      public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType build() {
        event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType buildPartial() {
        event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType result = new event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType result) {
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
      }

      private void buildPartial0(event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.action_ = action_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.printJob_ = printJobBuilder_ == null
              ? printJob_
              : printJobBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.printSettings_ = printSettingsBuilder_ == null
              ? printSettings_
              : printSettingsBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.printer_ = printerBuilder_ == null
              ? printer_
              : printerBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.outcome_ = outcomeBuilder_ == null
              ? outcome_
              : outcomeBuilder_.build();
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType) {
          return mergeFrom((event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType other) {
        if (other == event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.getDefaultInstance()) return this;
        if (other.action_ != 0) {
          setActionValue(other.getActionValue());
        }
        if (other.hasPrintJob()) {
          mergePrintJob(other.getPrintJob());
        }
        if (other.hasPrintSettings()) {
          mergePrintSettings(other.getPrintSettings());
        }
        if (other.hasPrinter()) {
          mergePrinter(other.getPrinter());
        }
        if (other.hasOutcome()) {
          mergeOutcome(other.getOutcome());
        }
        if (dataBuilder_ == null) {
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
        } else {
          if (!other.data_.isEmpty()) {
            if (dataBuilder_.isEmpty()) {
              dataBuilder_.dispose();
              dataBuilder_ = null;
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000020);
              dataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDataFieldBuilder() : null;
            } else {
              dataBuilder_.addAllMessages(other.data_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                action_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getPrintJobFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getPrintSettingsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getPrinterFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getOutcomeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 50: {
                event_logging.v4.DataComplexTypeOuterClass.DataComplexType m =
                    input.readMessage(
                        event_logging.v4.DataComplexTypeOuterClass.DataComplexType.parser(),
                        extensionRegistry);
                if (dataBuilder_ == null) {
                  ensureDataIsMutable();
                  data_.add(m);
                } else {
                  dataBuilder_.addMessage(m);
                }
                break;
              } // case 50
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int action_ = 0;
      /**
       * <pre>
       * The print action that was performed, e.g. CreateJob.
       * </pre>
       *
       * <code>.event_logging.v4.PrintActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
       * @return The enum numeric value on the wire for action.
       */
      @java.lang.Override public int getActionValue() {
        return action_;
      }
      /**
       * <pre>
       * The print action that was performed, e.g. CreateJob.
       * </pre>
       *
       * <code>.event_logging.v4.PrintActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
       * @param value The enum numeric value on the wire for action to set.
       * @return This builder for chaining.
       */
      public Builder setActionValue(int value) {
        action_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The print action that was performed, e.g. CreateJob.
       * </pre>
       *
       * <code>.event_logging.v4.PrintActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
       * @return The action.
       */
      @java.lang.Override
      public event_logging.v4.PrintActionSimpleTypeOuterClass.PrintActionSimpleType getAction() {
        event_logging.v4.PrintActionSimpleTypeOuterClass.PrintActionSimpleType result = event_logging.v4.PrintActionSimpleTypeOuterClass.PrintActionSimpleType.forNumber(action_);
        return result == null ? event_logging.v4.PrintActionSimpleTypeOuterClass.PrintActionSimpleType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The print action that was performed, e.g. CreateJob.
       * </pre>
       *
       * <code>.event_logging.v4.PrintActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
       * @param value The action to set.
       * @return This builder for chaining.
       */
      public Builder setAction(event_logging.v4.PrintActionSimpleTypeOuterClass.PrintActionSimpleType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        action_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The print action that was performed, e.g. CreateJob.
       * </pre>
       *
       * <code>.event_logging.v4.PrintActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearAction() {
        bitField0_ = (bitField0_ & ~0x00000001);
        action_ = 0;
        onChanged();
        return this;
      }

      private event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType printJob_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType.Builder, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobTypeOrBuilder> printJobBuilder_;
      /**
       * <pre>
       * Describes the print job that the event relates to.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType.PrintJobType print_job = 2 [(.buf.validate.field) = { ... }</code>
       * @return Whether the printJob field is set.
       */
      public boolean hasPrintJob() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Describes the print job that the event relates to.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType.PrintJobType print_job = 2 [(.buf.validate.field) = { ... }</code>
       * @return The printJob.
       */
      public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType getPrintJob() {
        if (printJobBuilder_ == null) {
          return printJob_ == null ? event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType.getDefaultInstance() : printJob_;
        } else {
          return printJobBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Describes the print job that the event relates to.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType.PrintJobType print_job = 2 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setPrintJob(event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType value) {
        if (printJobBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          printJob_ = value;
        } else {
          printJobBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes the print job that the event relates to.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType.PrintJobType print_job = 2 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setPrintJob(
          event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType.Builder builderForValue) {
        if (printJobBuilder_ == null) {
          printJob_ = builderForValue.build();
        } else {
          printJobBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes the print job that the event relates to.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType.PrintJobType print_job = 2 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergePrintJob(event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType value) {
        if (printJobBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            printJob_ != null &&
            printJob_ != event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType.getDefaultInstance()) {
            getPrintJobBuilder().mergeFrom(value);
          } else {
            printJob_ = value;
          }
        } else {
          printJobBuilder_.mergeFrom(value);
        }
        if (printJob_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Describes the print job that the event relates to.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType.PrintJobType print_job = 2 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearPrintJob() {
        bitField0_ = (bitField0_ & ~0x00000002);
        printJob_ = null;
        if (printJobBuilder_ != null) {
          printJobBuilder_.dispose();
          printJobBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes the print job that the event relates to.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType.PrintJobType print_job = 2 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType.Builder getPrintJobBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPrintJobFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Describes the print job that the event relates to.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType.PrintJobType print_job = 2 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobTypeOrBuilder getPrintJobOrBuilder() {
        if (printJobBuilder_ != null) {
          return printJobBuilder_.getMessageOrBuilder();
        } else {
          return printJob_ == null ?
              event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType.getDefaultInstance() : printJob_;
        }
      }
      /**
       * <pre>
       * Describes the print job that the event relates to.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType.PrintJobType print_job = 2 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType.Builder, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobTypeOrBuilder> 
          getPrintJobFieldBuilder() {
        if (printJobBuilder_ == null) {
          printJobBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobType.Builder, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintJobTypeOrBuilder>(
                  getPrintJob(),
                  getParentForChildren(),
                  isClean());
          printJob_ = null;
        }
        return printJobBuilder_;
      }

      private event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType printSettings_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType.Builder, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsTypeOrBuilder> printSettingsBuilder_;
      /**
       * <pre>
       * The printer settings that are to be used for the print job.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType.PrintSettingsType print_settings = 3;</code>
       * @return Whether the printSettings field is set.
       */
      public boolean hasPrintSettings() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The printer settings that are to be used for the print job.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType.PrintSettingsType print_settings = 3;</code>
       * @return The printSettings.
       */
      public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType getPrintSettings() {
        if (printSettingsBuilder_ == null) {
          return printSettings_ == null ? event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType.getDefaultInstance() : printSettings_;
        } else {
          return printSettingsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The printer settings that are to be used for the print job.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType.PrintSettingsType print_settings = 3;</code>
       */
      public Builder setPrintSettings(event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType value) {
        if (printSettingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          printSettings_ = value;
        } else {
          printSettingsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The printer settings that are to be used for the print job.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType.PrintSettingsType print_settings = 3;</code>
       */
      public Builder setPrintSettings(
          event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType.Builder builderForValue) {
        if (printSettingsBuilder_ == null) {
          printSettings_ = builderForValue.build();
        } else {
          printSettingsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The printer settings that are to be used for the print job.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType.PrintSettingsType print_settings = 3;</code>
       */
      public Builder mergePrintSettings(event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType value) {
        if (printSettingsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            printSettings_ != null &&
            printSettings_ != event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType.getDefaultInstance()) {
            getPrintSettingsBuilder().mergeFrom(value);
          } else {
            printSettings_ = value;
          }
        } else {
          printSettingsBuilder_.mergeFrom(value);
        }
        if (printSettings_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The printer settings that are to be used for the print job.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType.PrintSettingsType print_settings = 3;</code>
       */
      public Builder clearPrintSettings() {
        bitField0_ = (bitField0_ & ~0x00000004);
        printSettings_ = null;
        if (printSettingsBuilder_ != null) {
          printSettingsBuilder_.dispose();
          printSettingsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The printer settings that are to be used for the print job.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType.PrintSettingsType print_settings = 3;</code>
       */
      public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType.Builder getPrintSettingsBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getPrintSettingsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The printer settings that are to be used for the print job.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType.PrintSettingsType print_settings = 3;</code>
       */
      public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsTypeOrBuilder getPrintSettingsOrBuilder() {
        if (printSettingsBuilder_ != null) {
          return printSettingsBuilder_.getMessageOrBuilder();
        } else {
          return printSettings_ == null ?
              event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType.getDefaultInstance() : printSettings_;
        }
      }
      /**
       * <pre>
       * The printer settings that are to be used for the print job.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType.PrintSettingsType print_settings = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType.Builder, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsTypeOrBuilder> 
          getPrintSettingsFieldBuilder() {
        if (printSettingsBuilder_ == null) {
          printSettingsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsType.Builder, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.PrintSettingsTypeOrBuilder>(
                  getPrintSettings(),
                  getParentForChildren(),
                  isClean());
          printSettings_ = null;
        }
        return printSettingsBuilder_;
      }

      private event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType printer_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType, event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType.Builder, event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexTypeOrBuilder> printerBuilder_;
      /**
       * <pre>
       * Describes the printer to use for the print job.
       * </pre>
       *
       * <code>.event_logging.v4.DeviceComplexType printer = 4;</code>
       * @return Whether the printer field is set.
       */
      public boolean hasPrinter() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Describes the printer to use for the print job.
       * </pre>
       *
       * <code>.event_logging.v4.DeviceComplexType printer = 4;</code>
       * @return The printer.
       */
      public event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType getPrinter() {
        if (printerBuilder_ == null) {
          return printer_ == null ? event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType.getDefaultInstance() : printer_;
        } else {
          return printerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Describes the printer to use for the print job.
       * </pre>
       *
       * <code>.event_logging.v4.DeviceComplexType printer = 4;</code>
       */
      public Builder setPrinter(event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType value) {
        if (printerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          printer_ = value;
        } else {
          printerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes the printer to use for the print job.
       * </pre>
       *
       * <code>.event_logging.v4.DeviceComplexType printer = 4;</code>
       */
      public Builder setPrinter(
          event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType.Builder builderForValue) {
        if (printerBuilder_ == null) {
          printer_ = builderForValue.build();
        } else {
          printerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes the printer to use for the print job.
       * </pre>
       *
       * <code>.event_logging.v4.DeviceComplexType printer = 4;</code>
       */
      public Builder mergePrinter(event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType value) {
        if (printerBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            printer_ != null &&
            printer_ != event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType.getDefaultInstance()) {
            getPrinterBuilder().mergeFrom(value);
          } else {
            printer_ = value;
          }
        } else {
          printerBuilder_.mergeFrom(value);
        }
        if (printer_ != null) {
          bitField0_ |= 0x00000008;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Describes the printer to use for the print job.
       * </pre>
       *
       * <code>.event_logging.v4.DeviceComplexType printer = 4;</code>
       */
      public Builder clearPrinter() {
        bitField0_ = (bitField0_ & ~0x00000008);
        printer_ = null;
        if (printerBuilder_ != null) {
          printerBuilder_.dispose();
          printerBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes the printer to use for the print job.
       * </pre>
       *
       * <code>.event_logging.v4.DeviceComplexType printer = 4;</code>
       */
      public event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType.Builder getPrinterBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getPrinterFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Describes the printer to use for the print job.
       * </pre>
       *
       * <code>.event_logging.v4.DeviceComplexType printer = 4;</code>
       */
      public event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexTypeOrBuilder getPrinterOrBuilder() {
        if (printerBuilder_ != null) {
          return printerBuilder_.getMessageOrBuilder();
        } else {
          return printer_ == null ?
              event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType.getDefaultInstance() : printer_;
        }
      }
      /**
       * <pre>
       * Describes the printer to use for the print job.
       * </pre>
       *
       * <code>.event_logging.v4.DeviceComplexType printer = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType, event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType.Builder, event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexTypeOrBuilder> 
          getPrinterFieldBuilder() {
        if (printerBuilder_ == null) {
          printerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType, event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType.Builder, event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexTypeOrBuilder>(
                  getPrinter(),
                  getParentForChildren(),
                  isClean());
          printer_ = null;
        }
        return printerBuilder_;
      }

      private event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType outcome_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType, event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.Builder, event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexTypeOrBuilder> outcomeBuilder_;
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 5;</code>
       * @return Whether the outcome field is set.
       */
      public boolean hasOutcome() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 5;</code>
       * @return The outcome.
       */
      public event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType getOutcome() {
        if (outcomeBuilder_ == null) {
          return outcome_ == null ? event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.getDefaultInstance() : outcome_;
        } else {
          return outcomeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 5;</code>
       */
      public Builder setOutcome(event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType value) {
        if (outcomeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          outcome_ = value;
        } else {
          outcomeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 5;</code>
       */
      public Builder setOutcome(
          event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.Builder builderForValue) {
        if (outcomeBuilder_ == null) {
          outcome_ = builderForValue.build();
        } else {
          outcomeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 5;</code>
       */
      public Builder mergeOutcome(event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType value) {
        if (outcomeBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            outcome_ != null &&
            outcome_ != event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.getDefaultInstance()) {
            getOutcomeBuilder().mergeFrom(value);
          } else {
            outcome_ = value;
          }
        } else {
          outcomeBuilder_.mergeFrom(value);
        }
        if (outcome_ != null) {
          bitField0_ |= 0x00000010;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 5;</code>
       */
      public Builder clearOutcome() {
        bitField0_ = (bitField0_ & ~0x00000010);
        outcome_ = null;
        if (outcomeBuilder_ != null) {
          outcomeBuilder_.dispose();
          outcomeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 5;</code>
       */
      public event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.Builder getOutcomeBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getOutcomeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 5;</code>
       */
      public event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexTypeOrBuilder getOutcomeOrBuilder() {
        if (outcomeBuilder_ != null) {
          return outcomeBuilder_.getMessageOrBuilder();
        } else {
          return outcome_ == null ?
              event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.getDefaultInstance() : outcome_;
        }
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType, event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.Builder, event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexTypeOrBuilder> 
          getOutcomeFieldBuilder() {
        if (outcomeBuilder_ == null) {
          outcomeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType, event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.Builder, event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexTypeOrBuilder>(
                  getOutcome(),
                  getParentForChildren(),
                  isClean());
          outcome_ = null;
        }
        return outcomeBuilder_;
      }

      private java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> data_ =
        java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          data_ = new java.util.ArrayList<event_logging.v4.DataComplexTypeOuterClass.DataComplexType>(data_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> dataBuilder_;

      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> getDataList() {
        if (dataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(data_);
        } else {
          return dataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
       */
      public int getDataCount() {
        if (dataBuilder_ == null) {
          return data_.size();
        } else {
          return dataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);
        } else {
          return dataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
        } else {
          dataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
        } else {
          dataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(index, value);
          onChanged();
        } else {
          dataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(
          event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexType> values) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, data_);
          onChanged();
        } else {
          dataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
       */
      public Builder removeData(int index) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.remove(index);
          onChanged();
        } else {
          dataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder getDataBuilder(
          int index) {
        return getDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
          int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);  } else {
          return dataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
           getDataOrBuilderList() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(data_);
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder addDataBuilder() {
        return getDataFieldBuilder().addBuilder(
            event_logging.v4.DataComplexTypeOuterClass.DataComplexType.getDefaultInstance());
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder addDataBuilder(
          int index) {
        return getDataFieldBuilder().addBuilder(
            index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.getDefaultInstance());
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 6 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder> 
           getDataBuilderList() {
        return getDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder>(
                  data_,
                  ((bitField0_ & 0x00000020) != 0),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:event_logging.v4.PrintComplexType)
    }

    // @@protoc_insertion_point(class_scope:event_logging.v4.PrintComplexType)
    private static final event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType();
    }

    public static event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PrintComplexType>
        PARSER = new com.google.protobuf.AbstractParser<PrintComplexType>() {
      @java.lang.Override
      public PrintComplexType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PrintComplexType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PrintComplexType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_logging_v4_PrintComplexType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_event_logging_v4_PrintComplexType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_logging_v4_PrintComplexType_PrintJobType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_event_logging_v4_PrintComplexType_PrintJobType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_logging_v4_PrintComplexType_PrintSettingsType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_event_logging_v4_PrintComplexType_PrintSettingsType_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)event_logging/v4/print_complex_type.pr" +
      "oto\022\020event_logging.v4\032(event_logging/v4/" +
      "data_complex_type.proto\032*event_logging/v" +
      "4/device_complex_type.proto\032,event_loggi" +
      "ng/v4/document_complex_type.proto\032+event" +
      "_logging/v4/outcome_complex_type.proto\032/" +
      "event_logging/v4/print_action_simple_typ" +
      "e.proto\032=event_logging/v4/print_settings" +
      "_orientation_simple_type.proto\032\037google/p" +
      "rotobuf/timestamp.proto\032\033buf/validate/va" +
      "lidate.proto\"\241\006\n\020PrintComplexType\022?\n\006act" +
      "ion\030\001 \001(\0162\'.event_logging.v4.PrintAction" +
      "SimpleTypeB\006\272H\003\310\001\001\022J\n\tprint_job\030\002 \001(\0132/." +
      "event_logging.v4.PrintComplexType.PrintJ" +
      "obTypeB\006\272H\003\310\001\001\022L\n\016print_settings\030\003 \001(\01324" +
      ".event_logging.v4.PrintComplexType.Print" +
      "SettingsType\0224\n\007printer\030\004 \001(\0132#.event_lo" +
      "gging.v4.DeviceComplexType\0225\n\007outcome\030\005 " +
      "\001(\0132$.event_logging.v4.OutcomeComplexTyp" +
      "e\0227\n\004data\030\006 \003(\0132!.event_logging.v4.DataC" +
      "omplexTypeB\006\272H\003\222\001\000\032\255\001\n\014PrintJobType\022?\n\010d" +
      "ocument\030\001 \001(\0132%.event_logging.v4.Documen" +
      "tComplexTypeB\006\272H\003\310\001\001\022\026\n\005pages\030\002 \001(\rB\007\272H\004" +
      "*\002(\000\022\025\n\004size\030\003 \001(\rB\007\272H\004*\002(\000\022-\n\tsubmitted" +
      "\030\004 \001(\0132\032.google.protobuf.Timestamp\032\333\001\n\021P" +
      "rintSettingsType\022\022\n\npaper_size\030\001 \001(\t\022S\n\013" +
      "orientation\030\002 \001(\01624.event_logging.v4.Pri" +
      "ntSettingsOrientationSimpleTypeB\010\272H\005\202\001\002\020" +
      "\001\022\016\n\006colour\030\003 \001(\010\022\024\n\014device_fonts\030\004 \001(\010\022" +
      "7\n\004data\030\005 \003(\0132!.event_logging.v4.DataCom" +
      "plexTypeB\006\272H\003\222\001\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          event_logging.v4.DataComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.DeviceComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.DocumentComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.OutcomeComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.PrintActionSimpleTypeOuterClass.getDescriptor(),
          event_logging.v4.PrintSettingsOrientationSimpleTypeOuterClass.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          build.buf.validate.ValidateProto.getDescriptor(),
        });
    internal_static_event_logging_v4_PrintComplexType_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_event_logging_v4_PrintComplexType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_event_logging_v4_PrintComplexType_descriptor,
        new java.lang.String[] { "Action", "PrintJob", "PrintSettings", "Printer", "Outcome", "Data", });
    internal_static_event_logging_v4_PrintComplexType_PrintJobType_descriptor =
      internal_static_event_logging_v4_PrintComplexType_descriptor.getNestedTypes().get(0);
    internal_static_event_logging_v4_PrintComplexType_PrintJobType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_event_logging_v4_PrintComplexType_PrintJobType_descriptor,
        new java.lang.String[] { "Document", "Pages", "Size", "Submitted", });
    internal_static_event_logging_v4_PrintComplexType_PrintSettingsType_descriptor =
      internal_static_event_logging_v4_PrintComplexType_descriptor.getNestedTypes().get(1);
    internal_static_event_logging_v4_PrintComplexType_PrintSettingsType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_event_logging_v4_PrintComplexType_PrintSettingsType_descriptor,
        new java.lang.String[] { "PaperSize", "Orientation", "Colour", "DeviceFonts", "Data", });
    descriptor.resolveAllFeaturesImmutable();
    event_logging.v4.DataComplexTypeOuterClass.getDescriptor();
    event_logging.v4.DeviceComplexTypeOuterClass.getDescriptor();
    event_logging.v4.DocumentComplexTypeOuterClass.getDescriptor();
    event_logging.v4.OutcomeComplexTypeOuterClass.getDescriptor();
    event_logging.v4.PrintActionSimpleTypeOuterClass.getDescriptor();
    event_logging.v4.PrintSettingsOrientationSimpleTypeOuterClass.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    build.buf.validate.ValidateProto.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(build.buf.validate.ValidateProto.field);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
