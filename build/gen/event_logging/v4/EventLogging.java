// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event_logging/v4/event_logging.proto
// Protobuf Java Version: 4.26.1

package event_logging.v4;

public final class EventLogging {
  private EventLogging() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      EventLogging.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface EventsTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_logging.v4.EventsType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The version of the schema that this document conforms to.
     * </pre>
     *
     * <code>.event_logging.v4.VersionSimpleType version = 1 [(.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for version.
     */
    int getVersionValue();
    /**
     * <pre>
     * The version of the schema that this document conforms to.
     * </pre>
     *
     * <code>.event_logging.v4.VersionSimpleType version = 1 [(.buf.validate.field) = { ... }</code>
     * @return The version.
     */
    event_logging.v4.VersionSimpleTypeOuterClass.VersionSimpleType getVersion();

    /**
     * <pre>
     * This element contains data relating to the sharing of a set of events between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
     * </pre>
     *
     * <code>.event_logging.v4.AnyContentComplexType sharing_data = 2;</code>
     * @return Whether the sharingData field is set.
     */
    boolean hasSharingData();
    /**
     * <pre>
     * This element contains data relating to the sharing of a set of events between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
     * </pre>
     *
     * <code>.event_logging.v4.AnyContentComplexType sharing_data = 2;</code>
     * @return The sharingData.
     */
    event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType getSharingData();
    /**
     * <pre>
     * This element contains data relating to the sharing of a set of events between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
     * </pre>
     *
     * <code>.event_logging.v4.AnyContentComplexType sharing_data = 2;</code>
     */
    event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder getSharingDataOrBuilder();

    /**
     * <pre>
     * A single event that has occurred and been recorded.
     * </pre>
     *
     * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
     */
    java.util.List<event_logging.v4.EventLogging.EventsType.EventType> 
        getEventList();
    /**
     * <pre>
     * A single event that has occurred and been recorded.
     * </pre>
     *
     * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.EventLogging.EventsType.EventType getEvent(int index);
    /**
     * <pre>
     * A single event that has occurred and been recorded.
     * </pre>
     *
     * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
     */
    int getEventCount();
    /**
     * <pre>
     * A single event that has occurred and been recorded.
     * </pre>
     *
     * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
     */
    java.util.List<? extends event_logging.v4.EventLogging.EventsType.EventTypeOrBuilder> 
        getEventOrBuilderList();
    /**
     * <pre>
     * A single event that has occurred and been recorded.
     * </pre>
     *
     * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.EventLogging.EventsType.EventTypeOrBuilder getEventOrBuilder(
        int index);
  }
  /**
   * <pre>
   * The root element that contains multiple Event elements.
   * </pre>
   *
   * Protobuf type {@code event_logging.v4.EventsType}
   */
  public static final class EventsType extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:event_logging.v4.EventsType)
      EventsTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        EventsType.class.getName());
    }
    // Use EventsType.newBuilder() to construct.
    private EventsType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private EventsType() {
      version_ = 0;
      event_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return event_logging.v4.EventLogging.internal_static_event_logging_v4_EventsType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return event_logging.v4.EventLogging.internal_static_event_logging_v4_EventsType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              event_logging.v4.EventLogging.EventsType.class, event_logging.v4.EventLogging.EventsType.Builder.class);
    }

    public interface EventTypeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:event_logging.v4.EventsType.EventType)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      java.util.List<event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType> 
          getMetaList();
      /**
       * <pre>
       * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType getMeta(int index);
      /**
       * <pre>
       * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      int getMetaCount();
      /**
       * <pre>
       * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      java.util.List<? extends event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder> 
          getMetaOrBuilderList();
      /**
       * <pre>
       * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder getMetaOrBuilder(
          int index);

      /**
       * <pre>
       * The classification for the event.
       * </pre>
       *
       * <code>.event_logging.v4.ClassificationComplexType classification = 2;</code>
       * @return Whether the classification field is set.
       */
      boolean hasClassification();
      /**
       * <pre>
       * The classification for the event.
       * </pre>
       *
       * <code>.event_logging.v4.ClassificationComplexType classification = 2;</code>
       * @return The classification.
       */
      event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType getClassification();
      /**
       * <pre>
       * The classification for the event.
       * </pre>
       *
       * <code>.event_logging.v4.ClassificationComplexType classification = 2;</code>
       */
      event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexTypeOrBuilder getClassificationOrBuilder();

      /**
       * <pre>
       * This element contains data relating to the sharing of an event between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
       * </pre>
       *
       * <code>.event_logging.v4.AnyContentComplexType sharing_data = 3;</code>
       * @return Whether the sharingData field is set.
       */
      boolean hasSharingData();
      /**
       * <pre>
       * This element contains data relating to the sharing of an event between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
       * </pre>
       *
       * <code>.event_logging.v4.AnyContentComplexType sharing_data = 3;</code>
       * @return The sharingData.
       */
      event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType getSharingData();
      /**
       * <pre>
       * This element contains data relating to the sharing of an event between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
       * </pre>
       *
       * <code>.event_logging.v4.AnyContentComplexType sharing_data = 3;</code>
       */
      event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder getSharingDataOrBuilder();

      /**
       * <pre>
       * This element contains information about the time the event was created.
       * </pre>
       *
       * <code>.event_logging.v4.EventTimeComplexType event_time = 4 [(.buf.validate.field) = { ... }</code>
       * @return Whether the eventTime field is set.
       */
      boolean hasEventTime();
      /**
       * <pre>
       * This element contains information about the time the event was created.
       * </pre>
       *
       * <code>.event_logging.v4.EventTimeComplexType event_time = 4 [(.buf.validate.field) = { ... }</code>
       * @return The eventTime.
       */
      event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexType getEventTime();
      /**
       * <pre>
       * This element contains information about the time the event was created.
       * </pre>
       *
       * <code>.event_logging.v4.EventTimeComplexType event_time = 4 [(.buf.validate.field) = { ... }</code>
       */
      event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexTypeOrBuilder getEventTimeOrBuilder();

      /**
       * <pre>
       * This element details where the event came from, i.e. what generator created the event and on what device.
       * </pre>
       *
       * <code>.event_logging.v4.EventSourceComplexType event_source = 5 [(.buf.validate.field) = { ... }</code>
       * @return Whether the eventSource field is set.
       */
      boolean hasEventSource();
      /**
       * <pre>
       * This element details where the event came from, i.e. what generator created the event and on what device.
       * </pre>
       *
       * <code>.event_logging.v4.EventSourceComplexType event_source = 5 [(.buf.validate.field) = { ... }</code>
       * @return The eventSource.
       */
      event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexType getEventSource();
      /**
       * <pre>
       * This element details where the event came from, i.e. what generator created the event and on what device.
       * </pre>
       *
       * <code>.event_logging.v4.EventSourceComplexType event_source = 5 [(.buf.validate.field) = { ... }</code>
       */
      event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexTypeOrBuilder getEventSourceOrBuilder();

      /**
       * <pre>
       * This element describes the details of what happened in the event: the type of the event, why it happened and the event action.
       * </pre>
       *
       * <code>.event_logging.v4.EventDetailComplexType event_detail = 6 [(.buf.validate.field) = { ... }</code>
       * @return Whether the eventDetail field is set.
       */
      boolean hasEventDetail();
      /**
       * <pre>
       * This element describes the details of what happened in the event: the type of the event, why it happened and the event action.
       * </pre>
       *
       * <code>.event_logging.v4.EventDetailComplexType event_detail = 6 [(.buf.validate.field) = { ... }</code>
       * @return The eventDetail.
       */
      event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType getEventDetail();
      /**
       * <pre>
       * This element describes the details of what happened in the event: the type of the event, why it happened and the event action.
       * </pre>
       *
       * <code>.event_logging.v4.EventDetailComplexType event_detail = 6 [(.buf.validate.field) = { ... }</code>
       */
      event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexTypeOrBuilder getEventDetailOrBuilder();

      /**
       * <pre>
       * This element can be used to create relationships between different events, i.e. where one event is the child of another.
       * </pre>
       *
       * <code>.event_logging.v4.EventChainComplexType event_chain = 7;</code>
       * @return Whether the eventChain field is set.
       */
      boolean hasEventChain();
      /**
       * <pre>
       * This element can be used to create relationships between different events, i.e. where one event is the child of another.
       * </pre>
       *
       * <code>.event_logging.v4.EventChainComplexType event_chain = 7;</code>
       * @return The eventChain.
       */
      event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexType getEventChain();
      /**
       * <pre>
       * This element can be used to create relationships between different events, i.e. where one event is the child of another.
       * </pre>
       *
       * <code>.event_logging.v4.EventChainComplexType event_chain = 7;</code>
       */
      event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexTypeOrBuilder getEventChainOrBuilder();

      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
       */
      java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> 
          getDataList();
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
       */
      event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index);
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
       */
      int getDataCount();
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
       */
      java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
          getDataOrBuilderList();
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
       */
      event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
          int index);
    }
    /**
     * <pre>
     * A single event that has occurred and been recorded.
     * </pre>
     *
     * Protobuf type {@code event_logging.v4.EventsType.EventType}
     */
    public static final class EventType extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:event_logging.v4.EventsType.EventType)
        EventTypeOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 26,
          /* patch= */ 1,
          /* suffix= */ "",
          EventType.class.getName());
      }
      // Use EventType.newBuilder() to construct.
      private EventType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private EventType() {
        meta_ = java.util.Collections.emptyList();
        data_ = java.util.Collections.emptyList();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_logging.v4.EventLogging.internal_static_event_logging_v4_EventsType_EventType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_logging.v4.EventLogging.internal_static_event_logging_v4_EventsType_EventType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_logging.v4.EventLogging.EventsType.EventType.class, event_logging.v4.EventLogging.EventsType.EventType.Builder.class);
      }

      private int bitField0_;
      public static final int META_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private java.util.List<event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType> meta_;
      /**
       * <pre>
       * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public java.util.List<event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType> getMetaList() {
        return meta_;
      }
      /**
       * <pre>
       * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public java.util.List<? extends event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder> 
          getMetaOrBuilderList() {
        return meta_;
      }
      /**
       * <pre>
       * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public int getMetaCount() {
        return meta_.size();
      }
      /**
       * <pre>
       * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType getMeta(int index) {
        return meta_.get(index);
      }
      /**
       * <pre>
       * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder getMetaOrBuilder(
          int index) {
        return meta_.get(index);
      }

      public static final int CLASSIFICATION_FIELD_NUMBER = 2;
      private event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType classification_;
      /**
       * <pre>
       * The classification for the event.
       * </pre>
       *
       * <code>.event_logging.v4.ClassificationComplexType classification = 2;</code>
       * @return Whether the classification field is set.
       */
      @java.lang.Override
      public boolean hasClassification() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The classification for the event.
       * </pre>
       *
       * <code>.event_logging.v4.ClassificationComplexType classification = 2;</code>
       * @return The classification.
       */
      @java.lang.Override
      public event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType getClassification() {
        return classification_ == null ? event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType.getDefaultInstance() : classification_;
      }
      /**
       * <pre>
       * The classification for the event.
       * </pre>
       *
       * <code>.event_logging.v4.ClassificationComplexType classification = 2;</code>
       */
      @java.lang.Override
      public event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexTypeOrBuilder getClassificationOrBuilder() {
        return classification_ == null ? event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType.getDefaultInstance() : classification_;
      }

      public static final int SHARING_DATA_FIELD_NUMBER = 3;
      private event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType sharingData_;
      /**
       * <pre>
       * This element contains data relating to the sharing of an event between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
       * </pre>
       *
       * <code>.event_logging.v4.AnyContentComplexType sharing_data = 3;</code>
       * @return Whether the sharingData field is set.
       */
      @java.lang.Override
      public boolean hasSharingData() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * This element contains data relating to the sharing of an event between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
       * </pre>
       *
       * <code>.event_logging.v4.AnyContentComplexType sharing_data = 3;</code>
       * @return The sharingData.
       */
      @java.lang.Override
      public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType getSharingData() {
        return sharingData_ == null ? event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.getDefaultInstance() : sharingData_;
      }
      /**
       * <pre>
       * This element contains data relating to the sharing of an event between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
       * </pre>
       *
       * <code>.event_logging.v4.AnyContentComplexType sharing_data = 3;</code>
       */
      @java.lang.Override
      public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder getSharingDataOrBuilder() {
        return sharingData_ == null ? event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.getDefaultInstance() : sharingData_;
      }

      public static final int EVENT_TIME_FIELD_NUMBER = 4;
      private event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexType eventTime_;
      /**
       * <pre>
       * This element contains information about the time the event was created.
       * </pre>
       *
       * <code>.event_logging.v4.EventTimeComplexType event_time = 4 [(.buf.validate.field) = { ... }</code>
       * @return Whether the eventTime field is set.
       */
      @java.lang.Override
      public boolean hasEventTime() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * This element contains information about the time the event was created.
       * </pre>
       *
       * <code>.event_logging.v4.EventTimeComplexType event_time = 4 [(.buf.validate.field) = { ... }</code>
       * @return The eventTime.
       */
      @java.lang.Override
      public event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexType getEventTime() {
        return eventTime_ == null ? event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexType.getDefaultInstance() : eventTime_;
      }
      /**
       * <pre>
       * This element contains information about the time the event was created.
       * </pre>
       *
       * <code>.event_logging.v4.EventTimeComplexType event_time = 4 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexTypeOrBuilder getEventTimeOrBuilder() {
        return eventTime_ == null ? event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexType.getDefaultInstance() : eventTime_;
      }

      public static final int EVENT_SOURCE_FIELD_NUMBER = 5;
      private event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexType eventSource_;
      /**
       * <pre>
       * This element details where the event came from, i.e. what generator created the event and on what device.
       * </pre>
       *
       * <code>.event_logging.v4.EventSourceComplexType event_source = 5 [(.buf.validate.field) = { ... }</code>
       * @return Whether the eventSource field is set.
       */
      @java.lang.Override
      public boolean hasEventSource() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * This element details where the event came from, i.e. what generator created the event and on what device.
       * </pre>
       *
       * <code>.event_logging.v4.EventSourceComplexType event_source = 5 [(.buf.validate.field) = { ... }</code>
       * @return The eventSource.
       */
      @java.lang.Override
      public event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexType getEventSource() {
        return eventSource_ == null ? event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexType.getDefaultInstance() : eventSource_;
      }
      /**
       * <pre>
       * This element details where the event came from, i.e. what generator created the event and on what device.
       * </pre>
       *
       * <code>.event_logging.v4.EventSourceComplexType event_source = 5 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexTypeOrBuilder getEventSourceOrBuilder() {
        return eventSource_ == null ? event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexType.getDefaultInstance() : eventSource_;
      }

      public static final int EVENT_DETAIL_FIELD_NUMBER = 6;
      private event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType eventDetail_;
      /**
       * <pre>
       * This element describes the details of what happened in the event: the type of the event, why it happened and the event action.
       * </pre>
       *
       * <code>.event_logging.v4.EventDetailComplexType event_detail = 6 [(.buf.validate.field) = { ... }</code>
       * @return Whether the eventDetail field is set.
       */
      @java.lang.Override
      public boolean hasEventDetail() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * This element describes the details of what happened in the event: the type of the event, why it happened and the event action.
       * </pre>
       *
       * <code>.event_logging.v4.EventDetailComplexType event_detail = 6 [(.buf.validate.field) = { ... }</code>
       * @return The eventDetail.
       */
      @java.lang.Override
      public event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType getEventDetail() {
        return eventDetail_ == null ? event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.getDefaultInstance() : eventDetail_;
      }
      /**
       * <pre>
       * This element describes the details of what happened in the event: the type of the event, why it happened and the event action.
       * </pre>
       *
       * <code>.event_logging.v4.EventDetailComplexType event_detail = 6 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexTypeOrBuilder getEventDetailOrBuilder() {
        return eventDetail_ == null ? event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.getDefaultInstance() : eventDetail_;
      }

      public static final int EVENT_CHAIN_FIELD_NUMBER = 7;
      private event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexType eventChain_;
      /**
       * <pre>
       * This element can be used to create relationships between different events, i.e. where one event is the child of another.
       * </pre>
       *
       * <code>.event_logging.v4.EventChainComplexType event_chain = 7;</code>
       * @return Whether the eventChain field is set.
       */
      @java.lang.Override
      public boolean hasEventChain() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * This element can be used to create relationships between different events, i.e. where one event is the child of another.
       * </pre>
       *
       * <code>.event_logging.v4.EventChainComplexType event_chain = 7;</code>
       * @return The eventChain.
       */
      @java.lang.Override
      public event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexType getEventChain() {
        return eventChain_ == null ? event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexType.getDefaultInstance() : eventChain_;
      }
      /**
       * <pre>
       * This element can be used to create relationships between different events, i.e. where one event is the child of another.
       * </pre>
       *
       * <code>.event_logging.v4.EventChainComplexType event_chain = 7;</code>
       */
      @java.lang.Override
      public event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexTypeOrBuilder getEventChainOrBuilder() {
        return eventChain_ == null ? event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexType.getDefaultInstance() : eventChain_;
      }

      public static final int DATA_FIELD_NUMBER = 8;
      @SuppressWarnings("serial")
      private java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> data_;
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> getDataList() {
        return data_;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
          getDataOrBuilderList() {
        return data_;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public int getDataCount() {
        return data_.size();
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index) {
        return data_.get(index);
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
          int index) {
        return data_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < meta_.size(); i++) {
          output.writeMessage(1, meta_.get(i));
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeMessage(2, getClassification());
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeMessage(3, getSharingData());
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeMessage(4, getEventTime());
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeMessage(5, getEventSource());
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeMessage(6, getEventDetail());
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeMessage(7, getEventChain());
        }
        for (int i = 0; i < data_.size(); i++) {
          output.writeMessage(8, data_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < meta_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, meta_.get(i));
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getClassification());
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getSharingData());
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getEventTime());
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getEventSource());
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, getEventDetail());
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, getEventChain());
        }
        for (int i = 0; i < data_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, data_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof event_logging.v4.EventLogging.EventsType.EventType)) {
          return super.equals(obj);
        }
        event_logging.v4.EventLogging.EventsType.EventType other = (event_logging.v4.EventLogging.EventsType.EventType) obj;

        if (!getMetaList()
            .equals(other.getMetaList())) return false;
        if (hasClassification() != other.hasClassification()) return false;
        if (hasClassification()) {
          if (!getClassification()
              .equals(other.getClassification())) return false;
        }
        if (hasSharingData() != other.hasSharingData()) return false;
        if (hasSharingData()) {
          if (!getSharingData()
              .equals(other.getSharingData())) return false;
        }
        if (hasEventTime() != other.hasEventTime()) return false;
        if (hasEventTime()) {
          if (!getEventTime()
              .equals(other.getEventTime())) return false;
        }
        if (hasEventSource() != other.hasEventSource()) return false;
        if (hasEventSource()) {
          if (!getEventSource()
              .equals(other.getEventSource())) return false;
        }
        if (hasEventDetail() != other.hasEventDetail()) return false;
        if (hasEventDetail()) {
          if (!getEventDetail()
              .equals(other.getEventDetail())) return false;
        }
        if (hasEventChain() != other.hasEventChain()) return false;
        if (hasEventChain()) {
          if (!getEventChain()
              .equals(other.getEventChain())) return false;
        }
        if (!getDataList()
            .equals(other.getDataList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getMetaCount() > 0) {
          hash = (37 * hash) + META_FIELD_NUMBER;
          hash = (53 * hash) + getMetaList().hashCode();
        }
        if (hasClassification()) {
          hash = (37 * hash) + CLASSIFICATION_FIELD_NUMBER;
          hash = (53 * hash) + getClassification().hashCode();
        }
        if (hasSharingData()) {
          hash = (37 * hash) + SHARING_DATA_FIELD_NUMBER;
          hash = (53 * hash) + getSharingData().hashCode();
        }
        if (hasEventTime()) {
          hash = (37 * hash) + EVENT_TIME_FIELD_NUMBER;
          hash = (53 * hash) + getEventTime().hashCode();
        }
        if (hasEventSource()) {
          hash = (37 * hash) + EVENT_SOURCE_FIELD_NUMBER;
          hash = (53 * hash) + getEventSource().hashCode();
        }
        if (hasEventDetail()) {
          hash = (37 * hash) + EVENT_DETAIL_FIELD_NUMBER;
          hash = (53 * hash) + getEventDetail().hashCode();
        }
        if (hasEventChain()) {
          hash = (37 * hash) + EVENT_CHAIN_FIELD_NUMBER;
          hash = (53 * hash) + getEventChain().hashCode();
        }
        if (getDataCount() > 0) {
          hash = (37 * hash) + DATA_FIELD_NUMBER;
          hash = (53 * hash) + getDataList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static event_logging.v4.EventLogging.EventsType.EventType parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static event_logging.v4.EventLogging.EventsType.EventType parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static event_logging.v4.EventLogging.EventsType.EventType parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static event_logging.v4.EventLogging.EventsType.EventType parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static event_logging.v4.EventLogging.EventsType.EventType parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static event_logging.v4.EventLogging.EventsType.EventType parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static event_logging.v4.EventLogging.EventsType.EventType parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static event_logging.v4.EventLogging.EventsType.EventType parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static event_logging.v4.EventLogging.EventsType.EventType parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static event_logging.v4.EventLogging.EventsType.EventType parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static event_logging.v4.EventLogging.EventsType.EventType parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static event_logging.v4.EventLogging.EventsType.EventType parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(event_logging.v4.EventLogging.EventsType.EventType prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * A single event that has occurred and been recorded.
       * </pre>
       *
       * Protobuf type {@code event_logging.v4.EventsType.EventType}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:event_logging.v4.EventsType.EventType)
          event_logging.v4.EventLogging.EventsType.EventTypeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return event_logging.v4.EventLogging.internal_static_event_logging_v4_EventsType_EventType_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return event_logging.v4.EventLogging.internal_static_event_logging_v4_EventsType_EventType_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  event_logging.v4.EventLogging.EventsType.EventType.class, event_logging.v4.EventLogging.EventsType.EventType.Builder.class);
        }

        // Construct using event_logging.v4.EventLogging.EventsType.EventType.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage
                  .alwaysUseFieldBuilders) {
            getMetaFieldBuilder();
            getClassificationFieldBuilder();
            getSharingDataFieldBuilder();
            getEventTimeFieldBuilder();
            getEventSourceFieldBuilder();
            getEventDetailFieldBuilder();
            getEventChainFieldBuilder();
            getDataFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          if (metaBuilder_ == null) {
            meta_ = java.util.Collections.emptyList();
          } else {
            meta_ = null;
            metaBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          classification_ = null;
          if (classificationBuilder_ != null) {
            classificationBuilder_.dispose();
            classificationBuilder_ = null;
          }
          sharingData_ = null;
          if (sharingDataBuilder_ != null) {
            sharingDataBuilder_.dispose();
            sharingDataBuilder_ = null;
          }
          eventTime_ = null;
          if (eventTimeBuilder_ != null) {
            eventTimeBuilder_.dispose();
            eventTimeBuilder_ = null;
          }
          eventSource_ = null;
          if (eventSourceBuilder_ != null) {
            eventSourceBuilder_.dispose();
            eventSourceBuilder_ = null;
          }
          eventDetail_ = null;
          if (eventDetailBuilder_ != null) {
            eventDetailBuilder_.dispose();
            eventDetailBuilder_ = null;
          }
          eventChain_ = null;
          if (eventChainBuilder_ != null) {
            eventChainBuilder_.dispose();
            eventChainBuilder_ = null;
          }
          if (dataBuilder_ == null) {
            data_ = java.util.Collections.emptyList();
          } else {
            data_ = null;
            dataBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000080);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return event_logging.v4.EventLogging.internal_static_event_logging_v4_EventsType_EventType_descriptor;
        }

        @java.lang.Override
        public event_logging.v4.EventLogging.EventsType.EventType getDefaultInstanceForType() {
          return event_logging.v4.EventLogging.EventsType.EventType.getDefaultInstance();
        }

        @java.lang.Override
        public event_logging.v4.EventLogging.EventsType.EventType build() {
          event_logging.v4.EventLogging.EventsType.EventType result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public event_logging.v4.EventLogging.EventsType.EventType buildPartial() {
          event_logging.v4.EventLogging.EventsType.EventType result = new event_logging.v4.EventLogging.EventsType.EventType(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(event_logging.v4.EventLogging.EventsType.EventType result) {
          if (metaBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              meta_ = java.util.Collections.unmodifiableList(meta_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.meta_ = meta_;
          } else {
            result.meta_ = metaBuilder_.build();
          }
          if (dataBuilder_ == null) {
            if (((bitField0_ & 0x00000080) != 0)) {
              data_ = java.util.Collections.unmodifiableList(data_);
              bitField0_ = (bitField0_ & ~0x00000080);
            }
            result.data_ = data_;
          } else {
            result.data_ = dataBuilder_.build();
          }
        }

        private void buildPartial0(event_logging.v4.EventLogging.EventsType.EventType result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.classification_ = classificationBuilder_ == null
                ? classification_
                : classificationBuilder_.build();
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.sharingData_ = sharingDataBuilder_ == null
                ? sharingData_
                : sharingDataBuilder_.build();
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.eventTime_ = eventTimeBuilder_ == null
                ? eventTime_
                : eventTimeBuilder_.build();
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.eventSource_ = eventSourceBuilder_ == null
                ? eventSource_
                : eventSourceBuilder_.build();
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.eventDetail_ = eventDetailBuilder_ == null
                ? eventDetail_
                : eventDetailBuilder_.build();
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.eventChain_ = eventChainBuilder_ == null
                ? eventChain_
                : eventChainBuilder_.build();
            to_bitField0_ |= 0x00000020;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof event_logging.v4.EventLogging.EventsType.EventType) {
            return mergeFrom((event_logging.v4.EventLogging.EventsType.EventType)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(event_logging.v4.EventLogging.EventsType.EventType other) {
          if (other == event_logging.v4.EventLogging.EventsType.EventType.getDefaultInstance()) return this;
          if (metaBuilder_ == null) {
            if (!other.meta_.isEmpty()) {
              if (meta_.isEmpty()) {
                meta_ = other.meta_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureMetaIsMutable();
                meta_.addAll(other.meta_);
              }
              onChanged();
            }
          } else {
            if (!other.meta_.isEmpty()) {
              if (metaBuilder_.isEmpty()) {
                metaBuilder_.dispose();
                metaBuilder_ = null;
                meta_ = other.meta_;
                bitField0_ = (bitField0_ & ~0x00000001);
                metaBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getMetaFieldBuilder() : null;
              } else {
                metaBuilder_.addAllMessages(other.meta_);
              }
            }
          }
          if (other.hasClassification()) {
            mergeClassification(other.getClassification());
          }
          if (other.hasSharingData()) {
            mergeSharingData(other.getSharingData());
          }
          if (other.hasEventTime()) {
            mergeEventTime(other.getEventTime());
          }
          if (other.hasEventSource()) {
            mergeEventSource(other.getEventSource());
          }
          if (other.hasEventDetail()) {
            mergeEventDetail(other.getEventDetail());
          }
          if (other.hasEventChain()) {
            mergeEventChain(other.getEventChain());
          }
          if (dataBuilder_ == null) {
            if (!other.data_.isEmpty()) {
              if (data_.isEmpty()) {
                data_ = other.data_;
                bitField0_ = (bitField0_ & ~0x00000080);
              } else {
                ensureDataIsMutable();
                data_.addAll(other.data_);
              }
              onChanged();
            }
          } else {
            if (!other.data_.isEmpty()) {
              if (dataBuilder_.isEmpty()) {
                dataBuilder_.dispose();
                dataBuilder_ = null;
                data_ = other.data_;
                bitField0_ = (bitField0_ & ~0x00000080);
                dataBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getDataFieldBuilder() : null;
              } else {
                dataBuilder_.addAllMessages(other.data_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType m =
                      input.readMessage(
                          event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.parser(),
                          extensionRegistry);
                  if (metaBuilder_ == null) {
                    ensureMetaIsMutable();
                    meta_.add(m);
                  } else {
                    metaBuilder_.addMessage(m);
                  }
                  break;
                } // case 10
                case 18: {
                  input.readMessage(
                      getClassificationFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                case 26: {
                  input.readMessage(
                      getSharingDataFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
                case 34: {
                  input.readMessage(
                      getEventTimeFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000008;
                  break;
                } // case 34
                case 42: {
                  input.readMessage(
                      getEventSourceFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000010;
                  break;
                } // case 42
                case 50: {
                  input.readMessage(
                      getEventDetailFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000020;
                  break;
                } // case 50
                case 58: {
                  input.readMessage(
                      getEventChainFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000040;
                  break;
                } // case 58
                case 66: {
                  event_logging.v4.DataComplexTypeOuterClass.DataComplexType m =
                      input.readMessage(
                          event_logging.v4.DataComplexTypeOuterClass.DataComplexType.parser(),
                          extensionRegistry);
                  if (dataBuilder_ == null) {
                    ensureDataIsMutable();
                    data_.add(m);
                  } else {
                    dataBuilder_.addMessage(m);
                  }
                  break;
                } // case 66
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.util.List<event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType> meta_ =
          java.util.Collections.emptyList();
        private void ensureMetaIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            meta_ = new java.util.ArrayList<event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType>(meta_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder> metaBuilder_;

        /**
         * <pre>
         * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
         * </pre>
         *
         * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
         */
        public java.util.List<event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType> getMetaList() {
          if (metaBuilder_ == null) {
            return java.util.Collections.unmodifiableList(meta_);
          } else {
            return metaBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
         * </pre>
         *
         * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
         */
        public int getMetaCount() {
          if (metaBuilder_ == null) {
            return meta_.size();
          } else {
            return metaBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
         * </pre>
         *
         * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType getMeta(int index) {
          if (metaBuilder_ == null) {
            return meta_.get(index);
          } else {
            return metaBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
         * </pre>
         *
         * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder setMeta(
            int index, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType value) {
          if (metaBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMetaIsMutable();
            meta_.set(index, value);
            onChanged();
          } else {
            metaBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
         * </pre>
         *
         * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder setMeta(
            int index, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder builderForValue) {
          if (metaBuilder_ == null) {
            ensureMetaIsMutable();
            meta_.set(index, builderForValue.build());
            onChanged();
          } else {
            metaBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
         * </pre>
         *
         * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addMeta(event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType value) {
          if (metaBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMetaIsMutable();
            meta_.add(value);
            onChanged();
          } else {
            metaBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
         * </pre>
         *
         * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addMeta(
            int index, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType value) {
          if (metaBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureMetaIsMutable();
            meta_.add(index, value);
            onChanged();
          } else {
            metaBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
         * </pre>
         *
         * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addMeta(
            event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder builderForValue) {
          if (metaBuilder_ == null) {
            ensureMetaIsMutable();
            meta_.add(builderForValue.build());
            onChanged();
          } else {
            metaBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
         * </pre>
         *
         * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addMeta(
            int index, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder builderForValue) {
          if (metaBuilder_ == null) {
            ensureMetaIsMutable();
            meta_.add(index, builderForValue.build());
            onChanged();
          } else {
            metaBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
         * </pre>
         *
         * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addAllMeta(
            java.lang.Iterable<? extends event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType> values) {
          if (metaBuilder_ == null) {
            ensureMetaIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, meta_);
            onChanged();
          } else {
            metaBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
         * </pre>
         *
         * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder clearMeta() {
          if (metaBuilder_ == null) {
            meta_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            metaBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
         * </pre>
         *
         * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder removeMeta(int index) {
          if (metaBuilder_ == null) {
            ensureMetaIsMutable();
            meta_.remove(index);
            onChanged();
          } else {
            metaBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
         * </pre>
         *
         * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder getMetaBuilder(
            int index) {
          return getMetaFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
         * </pre>
         *
         * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder getMetaOrBuilder(
            int index) {
          if (metaBuilder_ == null) {
            return meta_.get(index);  } else {
            return metaBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
         * </pre>
         *
         * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
         */
        public java.util.List<? extends event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder> 
             getMetaOrBuilderList() {
          if (metaBuilder_ != null) {
            return metaBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(meta_);
          }
        }
        /**
         * <pre>
         * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
         * </pre>
         *
         * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder addMetaBuilder() {
          return getMetaFieldBuilder().addBuilder(
              event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.getDefaultInstance());
        }
        /**
         * <pre>
         * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
         * </pre>
         *
         * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder addMetaBuilder(
            int index) {
          return getMetaFieldBuilder().addBuilder(
              index, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.getDefaultInstance());
        }
        /**
         * <pre>
         * This element can be used to supply any metadata relating to the event as long as it conforms to an allowed format/specification (defined outside this XML Schema).
         * </pre>
         *
         * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
         */
        public java.util.List<event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder> 
             getMetaBuilderList() {
          return getMetaFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder> 
            getMetaFieldBuilder() {
          if (metaBuilder_ == null) {
            metaBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder>(
                    meta_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            meta_ = null;
          }
          return metaBuilder_;
        }

        private event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType classification_;
        private com.google.protobuf.SingleFieldBuilder<
            event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType, event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType.Builder, event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexTypeOrBuilder> classificationBuilder_;
        /**
         * <pre>
         * The classification for the event.
         * </pre>
         *
         * <code>.event_logging.v4.ClassificationComplexType classification = 2;</code>
         * @return Whether the classification field is set.
         */
        public boolean hasClassification() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * The classification for the event.
         * </pre>
         *
         * <code>.event_logging.v4.ClassificationComplexType classification = 2;</code>
         * @return The classification.
         */
        public event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType getClassification() {
          if (classificationBuilder_ == null) {
            return classification_ == null ? event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType.getDefaultInstance() : classification_;
          } else {
            return classificationBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The classification for the event.
         * </pre>
         *
         * <code>.event_logging.v4.ClassificationComplexType classification = 2;</code>
         */
        public Builder setClassification(event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType value) {
          if (classificationBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            classification_ = value;
          } else {
            classificationBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The classification for the event.
         * </pre>
         *
         * <code>.event_logging.v4.ClassificationComplexType classification = 2;</code>
         */
        public Builder setClassification(
            event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType.Builder builderForValue) {
          if (classificationBuilder_ == null) {
            classification_ = builderForValue.build();
          } else {
            classificationBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The classification for the event.
         * </pre>
         *
         * <code>.event_logging.v4.ClassificationComplexType classification = 2;</code>
         */
        public Builder mergeClassification(event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType value) {
          if (classificationBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0) &&
              classification_ != null &&
              classification_ != event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType.getDefaultInstance()) {
              getClassificationBuilder().mergeFrom(value);
            } else {
              classification_ = value;
            }
          } else {
            classificationBuilder_.mergeFrom(value);
          }
          if (classification_ != null) {
            bitField0_ |= 0x00000002;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * The classification for the event.
         * </pre>
         *
         * <code>.event_logging.v4.ClassificationComplexType classification = 2;</code>
         */
        public Builder clearClassification() {
          bitField0_ = (bitField0_ & ~0x00000002);
          classification_ = null;
          if (classificationBuilder_ != null) {
            classificationBuilder_.dispose();
            classificationBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The classification for the event.
         * </pre>
         *
         * <code>.event_logging.v4.ClassificationComplexType classification = 2;</code>
         */
        public event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType.Builder getClassificationBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getClassificationFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The classification for the event.
         * </pre>
         *
         * <code>.event_logging.v4.ClassificationComplexType classification = 2;</code>
         */
        public event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexTypeOrBuilder getClassificationOrBuilder() {
          if (classificationBuilder_ != null) {
            return classificationBuilder_.getMessageOrBuilder();
          } else {
            return classification_ == null ?
                event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType.getDefaultInstance() : classification_;
          }
        }
        /**
         * <pre>
         * The classification for the event.
         * </pre>
         *
         * <code>.event_logging.v4.ClassificationComplexType classification = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType, event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType.Builder, event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexTypeOrBuilder> 
            getClassificationFieldBuilder() {
          if (classificationBuilder_ == null) {
            classificationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType, event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType.Builder, event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexTypeOrBuilder>(
                    getClassification(),
                    getParentForChildren(),
                    isClean());
            classification_ = null;
          }
          return classificationBuilder_;
        }

        private event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType sharingData_;
        private com.google.protobuf.SingleFieldBuilder<
            event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder> sharingDataBuilder_;
        /**
         * <pre>
         * This element contains data relating to the sharing of an event between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
         * </pre>
         *
         * <code>.event_logging.v4.AnyContentComplexType sharing_data = 3;</code>
         * @return Whether the sharingData field is set.
         */
        public boolean hasSharingData() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * This element contains data relating to the sharing of an event between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
         * </pre>
         *
         * <code>.event_logging.v4.AnyContentComplexType sharing_data = 3;</code>
         * @return The sharingData.
         */
        public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType getSharingData() {
          if (sharingDataBuilder_ == null) {
            return sharingData_ == null ? event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.getDefaultInstance() : sharingData_;
          } else {
            return sharingDataBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * This element contains data relating to the sharing of an event between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
         * </pre>
         *
         * <code>.event_logging.v4.AnyContentComplexType sharing_data = 3;</code>
         */
        public Builder setSharingData(event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType value) {
          if (sharingDataBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sharingData_ = value;
          } else {
            sharingDataBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * This element contains data relating to the sharing of an event between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
         * </pre>
         *
         * <code>.event_logging.v4.AnyContentComplexType sharing_data = 3;</code>
         */
        public Builder setSharingData(
            event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder builderForValue) {
          if (sharingDataBuilder_ == null) {
            sharingData_ = builderForValue.build();
          } else {
            sharingDataBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * This element contains data relating to the sharing of an event between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
         * </pre>
         *
         * <code>.event_logging.v4.AnyContentComplexType sharing_data = 3;</code>
         */
        public Builder mergeSharingData(event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType value) {
          if (sharingDataBuilder_ == null) {
            if (((bitField0_ & 0x00000004) != 0) &&
              sharingData_ != null &&
              sharingData_ != event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.getDefaultInstance()) {
              getSharingDataBuilder().mergeFrom(value);
            } else {
              sharingData_ = value;
            }
          } else {
            sharingDataBuilder_.mergeFrom(value);
          }
          if (sharingData_ != null) {
            bitField0_ |= 0x00000004;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * This element contains data relating to the sharing of an event between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
         * </pre>
         *
         * <code>.event_logging.v4.AnyContentComplexType sharing_data = 3;</code>
         */
        public Builder clearSharingData() {
          bitField0_ = (bitField0_ & ~0x00000004);
          sharingData_ = null;
          if (sharingDataBuilder_ != null) {
            sharingDataBuilder_.dispose();
            sharingDataBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * This element contains data relating to the sharing of an event between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
         * </pre>
         *
         * <code>.event_logging.v4.AnyContentComplexType sharing_data = 3;</code>
         */
        public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder getSharingDataBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getSharingDataFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * This element contains data relating to the sharing of an event between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
         * </pre>
         *
         * <code>.event_logging.v4.AnyContentComplexType sharing_data = 3;</code>
         */
        public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder getSharingDataOrBuilder() {
          if (sharingDataBuilder_ != null) {
            return sharingDataBuilder_.getMessageOrBuilder();
          } else {
            return sharingData_ == null ?
                event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.getDefaultInstance() : sharingData_;
          }
        }
        /**
         * <pre>
         * This element contains data relating to the sharing of an event between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
         * </pre>
         *
         * <code>.event_logging.v4.AnyContentComplexType sharing_data = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder> 
            getSharingDataFieldBuilder() {
          if (sharingDataBuilder_ == null) {
            sharingDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder>(
                    getSharingData(),
                    getParentForChildren(),
                    isClean());
            sharingData_ = null;
          }
          return sharingDataBuilder_;
        }

        private event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexType eventTime_;
        private com.google.protobuf.SingleFieldBuilder<
            event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexType, event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexType.Builder, event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexTypeOrBuilder> eventTimeBuilder_;
        /**
         * <pre>
         * This element contains information about the time the event was created.
         * </pre>
         *
         * <code>.event_logging.v4.EventTimeComplexType event_time = 4 [(.buf.validate.field) = { ... }</code>
         * @return Whether the eventTime field is set.
         */
        public boolean hasEventTime() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * This element contains information about the time the event was created.
         * </pre>
         *
         * <code>.event_logging.v4.EventTimeComplexType event_time = 4 [(.buf.validate.field) = { ... }</code>
         * @return The eventTime.
         */
        public event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexType getEventTime() {
          if (eventTimeBuilder_ == null) {
            return eventTime_ == null ? event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexType.getDefaultInstance() : eventTime_;
          } else {
            return eventTimeBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * This element contains information about the time the event was created.
         * </pre>
         *
         * <code>.event_logging.v4.EventTimeComplexType event_time = 4 [(.buf.validate.field) = { ... }</code>
         */
        public Builder setEventTime(event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexType value) {
          if (eventTimeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            eventTime_ = value;
          } else {
            eventTimeBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * This element contains information about the time the event was created.
         * </pre>
         *
         * <code>.event_logging.v4.EventTimeComplexType event_time = 4 [(.buf.validate.field) = { ... }</code>
         */
        public Builder setEventTime(
            event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexType.Builder builderForValue) {
          if (eventTimeBuilder_ == null) {
            eventTime_ = builderForValue.build();
          } else {
            eventTimeBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * This element contains information about the time the event was created.
         * </pre>
         *
         * <code>.event_logging.v4.EventTimeComplexType event_time = 4 [(.buf.validate.field) = { ... }</code>
         */
        public Builder mergeEventTime(event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexType value) {
          if (eventTimeBuilder_ == null) {
            if (((bitField0_ & 0x00000008) != 0) &&
              eventTime_ != null &&
              eventTime_ != event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexType.getDefaultInstance()) {
              getEventTimeBuilder().mergeFrom(value);
            } else {
              eventTime_ = value;
            }
          } else {
            eventTimeBuilder_.mergeFrom(value);
          }
          if (eventTime_ != null) {
            bitField0_ |= 0x00000008;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * This element contains information about the time the event was created.
         * </pre>
         *
         * <code>.event_logging.v4.EventTimeComplexType event_time = 4 [(.buf.validate.field) = { ... }</code>
         */
        public Builder clearEventTime() {
          bitField0_ = (bitField0_ & ~0x00000008);
          eventTime_ = null;
          if (eventTimeBuilder_ != null) {
            eventTimeBuilder_.dispose();
            eventTimeBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * This element contains information about the time the event was created.
         * </pre>
         *
         * <code>.event_logging.v4.EventTimeComplexType event_time = 4 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexType.Builder getEventTimeBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getEventTimeFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * This element contains information about the time the event was created.
         * </pre>
         *
         * <code>.event_logging.v4.EventTimeComplexType event_time = 4 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexTypeOrBuilder getEventTimeOrBuilder() {
          if (eventTimeBuilder_ != null) {
            return eventTimeBuilder_.getMessageOrBuilder();
          } else {
            return eventTime_ == null ?
                event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexType.getDefaultInstance() : eventTime_;
          }
        }
        /**
         * <pre>
         * This element contains information about the time the event was created.
         * </pre>
         *
         * <code>.event_logging.v4.EventTimeComplexType event_time = 4 [(.buf.validate.field) = { ... }</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexType, event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexType.Builder, event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexTypeOrBuilder> 
            getEventTimeFieldBuilder() {
          if (eventTimeBuilder_ == null) {
            eventTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexType, event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexType.Builder, event_logging.v4.EventTimeComplexTypeOuterClass.EventTimeComplexTypeOrBuilder>(
                    getEventTime(),
                    getParentForChildren(),
                    isClean());
            eventTime_ = null;
          }
          return eventTimeBuilder_;
        }

        private event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexType eventSource_;
        private com.google.protobuf.SingleFieldBuilder<
            event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexType, event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexType.Builder, event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexTypeOrBuilder> eventSourceBuilder_;
        /**
         * <pre>
         * This element details where the event came from, i.e. what generator created the event and on what device.
         * </pre>
         *
         * <code>.event_logging.v4.EventSourceComplexType event_source = 5 [(.buf.validate.field) = { ... }</code>
         * @return Whether the eventSource field is set.
         */
        public boolean hasEventSource() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * This element details where the event came from, i.e. what generator created the event and on what device.
         * </pre>
         *
         * <code>.event_logging.v4.EventSourceComplexType event_source = 5 [(.buf.validate.field) = { ... }</code>
         * @return The eventSource.
         */
        public event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexType getEventSource() {
          if (eventSourceBuilder_ == null) {
            return eventSource_ == null ? event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexType.getDefaultInstance() : eventSource_;
          } else {
            return eventSourceBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * This element details where the event came from, i.e. what generator created the event and on what device.
         * </pre>
         *
         * <code>.event_logging.v4.EventSourceComplexType event_source = 5 [(.buf.validate.field) = { ... }</code>
         */
        public Builder setEventSource(event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexType value) {
          if (eventSourceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            eventSource_ = value;
          } else {
            eventSourceBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * This element details where the event came from, i.e. what generator created the event and on what device.
         * </pre>
         *
         * <code>.event_logging.v4.EventSourceComplexType event_source = 5 [(.buf.validate.field) = { ... }</code>
         */
        public Builder setEventSource(
            event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexType.Builder builderForValue) {
          if (eventSourceBuilder_ == null) {
            eventSource_ = builderForValue.build();
          } else {
            eventSourceBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * This element details where the event came from, i.e. what generator created the event and on what device.
         * </pre>
         *
         * <code>.event_logging.v4.EventSourceComplexType event_source = 5 [(.buf.validate.field) = { ... }</code>
         */
        public Builder mergeEventSource(event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexType value) {
          if (eventSourceBuilder_ == null) {
            if (((bitField0_ & 0x00000010) != 0) &&
              eventSource_ != null &&
              eventSource_ != event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexType.getDefaultInstance()) {
              getEventSourceBuilder().mergeFrom(value);
            } else {
              eventSource_ = value;
            }
          } else {
            eventSourceBuilder_.mergeFrom(value);
          }
          if (eventSource_ != null) {
            bitField0_ |= 0x00000010;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * This element details where the event came from, i.e. what generator created the event and on what device.
         * </pre>
         *
         * <code>.event_logging.v4.EventSourceComplexType event_source = 5 [(.buf.validate.field) = { ... }</code>
         */
        public Builder clearEventSource() {
          bitField0_ = (bitField0_ & ~0x00000010);
          eventSource_ = null;
          if (eventSourceBuilder_ != null) {
            eventSourceBuilder_.dispose();
            eventSourceBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * This element details where the event came from, i.e. what generator created the event and on what device.
         * </pre>
         *
         * <code>.event_logging.v4.EventSourceComplexType event_source = 5 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexType.Builder getEventSourceBuilder() {
          bitField0_ |= 0x00000010;
          onChanged();
          return getEventSourceFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * This element details where the event came from, i.e. what generator created the event and on what device.
         * </pre>
         *
         * <code>.event_logging.v4.EventSourceComplexType event_source = 5 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexTypeOrBuilder getEventSourceOrBuilder() {
          if (eventSourceBuilder_ != null) {
            return eventSourceBuilder_.getMessageOrBuilder();
          } else {
            return eventSource_ == null ?
                event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexType.getDefaultInstance() : eventSource_;
          }
        }
        /**
         * <pre>
         * This element details where the event came from, i.e. what generator created the event and on what device.
         * </pre>
         *
         * <code>.event_logging.v4.EventSourceComplexType event_source = 5 [(.buf.validate.field) = { ... }</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexType, event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexType.Builder, event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexTypeOrBuilder> 
            getEventSourceFieldBuilder() {
          if (eventSourceBuilder_ == null) {
            eventSourceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexType, event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexType.Builder, event_logging.v4.EventSourceComplexTypeOuterClass.EventSourceComplexTypeOrBuilder>(
                    getEventSource(),
                    getParentForChildren(),
                    isClean());
            eventSource_ = null;
          }
          return eventSourceBuilder_;
        }

        private event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType eventDetail_;
        private com.google.protobuf.SingleFieldBuilder<
            event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType, event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.Builder, event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexTypeOrBuilder> eventDetailBuilder_;
        /**
         * <pre>
         * This element describes the details of what happened in the event: the type of the event, why it happened and the event action.
         * </pre>
         *
         * <code>.event_logging.v4.EventDetailComplexType event_detail = 6 [(.buf.validate.field) = { ... }</code>
         * @return Whether the eventDetail field is set.
         */
        public boolean hasEventDetail() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         * This element describes the details of what happened in the event: the type of the event, why it happened and the event action.
         * </pre>
         *
         * <code>.event_logging.v4.EventDetailComplexType event_detail = 6 [(.buf.validate.field) = { ... }</code>
         * @return The eventDetail.
         */
        public event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType getEventDetail() {
          if (eventDetailBuilder_ == null) {
            return eventDetail_ == null ? event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.getDefaultInstance() : eventDetail_;
          } else {
            return eventDetailBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * This element describes the details of what happened in the event: the type of the event, why it happened and the event action.
         * </pre>
         *
         * <code>.event_logging.v4.EventDetailComplexType event_detail = 6 [(.buf.validate.field) = { ... }</code>
         */
        public Builder setEventDetail(event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType value) {
          if (eventDetailBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            eventDetail_ = value;
          } else {
            eventDetailBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * This element describes the details of what happened in the event: the type of the event, why it happened and the event action.
         * </pre>
         *
         * <code>.event_logging.v4.EventDetailComplexType event_detail = 6 [(.buf.validate.field) = { ... }</code>
         */
        public Builder setEventDetail(
            event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.Builder builderForValue) {
          if (eventDetailBuilder_ == null) {
            eventDetail_ = builderForValue.build();
          } else {
            eventDetailBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * This element describes the details of what happened in the event: the type of the event, why it happened and the event action.
         * </pre>
         *
         * <code>.event_logging.v4.EventDetailComplexType event_detail = 6 [(.buf.validate.field) = { ... }</code>
         */
        public Builder mergeEventDetail(event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType value) {
          if (eventDetailBuilder_ == null) {
            if (((bitField0_ & 0x00000020) != 0) &&
              eventDetail_ != null &&
              eventDetail_ != event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.getDefaultInstance()) {
              getEventDetailBuilder().mergeFrom(value);
            } else {
              eventDetail_ = value;
            }
          } else {
            eventDetailBuilder_.mergeFrom(value);
          }
          if (eventDetail_ != null) {
            bitField0_ |= 0x00000020;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * This element describes the details of what happened in the event: the type of the event, why it happened and the event action.
         * </pre>
         *
         * <code>.event_logging.v4.EventDetailComplexType event_detail = 6 [(.buf.validate.field) = { ... }</code>
         */
        public Builder clearEventDetail() {
          bitField0_ = (bitField0_ & ~0x00000020);
          eventDetail_ = null;
          if (eventDetailBuilder_ != null) {
            eventDetailBuilder_.dispose();
            eventDetailBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * This element describes the details of what happened in the event: the type of the event, why it happened and the event action.
         * </pre>
         *
         * <code>.event_logging.v4.EventDetailComplexType event_detail = 6 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.Builder getEventDetailBuilder() {
          bitField0_ |= 0x00000020;
          onChanged();
          return getEventDetailFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * This element describes the details of what happened in the event: the type of the event, why it happened and the event action.
         * </pre>
         *
         * <code>.event_logging.v4.EventDetailComplexType event_detail = 6 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexTypeOrBuilder getEventDetailOrBuilder() {
          if (eventDetailBuilder_ != null) {
            return eventDetailBuilder_.getMessageOrBuilder();
          } else {
            return eventDetail_ == null ?
                event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.getDefaultInstance() : eventDetail_;
          }
        }
        /**
         * <pre>
         * This element describes the details of what happened in the event: the type of the event, why it happened and the event action.
         * </pre>
         *
         * <code>.event_logging.v4.EventDetailComplexType event_detail = 6 [(.buf.validate.field) = { ... }</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType, event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.Builder, event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexTypeOrBuilder> 
            getEventDetailFieldBuilder() {
          if (eventDetailBuilder_ == null) {
            eventDetailBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType, event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.Builder, event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexTypeOrBuilder>(
                    getEventDetail(),
                    getParentForChildren(),
                    isClean());
            eventDetail_ = null;
          }
          return eventDetailBuilder_;
        }

        private event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexType eventChain_;
        private com.google.protobuf.SingleFieldBuilder<
            event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexType, event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexType.Builder, event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexTypeOrBuilder> eventChainBuilder_;
        /**
         * <pre>
         * This element can be used to create relationships between different events, i.e. where one event is the child of another.
         * </pre>
         *
         * <code>.event_logging.v4.EventChainComplexType event_chain = 7;</code>
         * @return Whether the eventChain field is set.
         */
        public boolean hasEventChain() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         * This element can be used to create relationships between different events, i.e. where one event is the child of another.
         * </pre>
         *
         * <code>.event_logging.v4.EventChainComplexType event_chain = 7;</code>
         * @return The eventChain.
         */
        public event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexType getEventChain() {
          if (eventChainBuilder_ == null) {
            return eventChain_ == null ? event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexType.getDefaultInstance() : eventChain_;
          } else {
            return eventChainBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * This element can be used to create relationships between different events, i.e. where one event is the child of another.
         * </pre>
         *
         * <code>.event_logging.v4.EventChainComplexType event_chain = 7;</code>
         */
        public Builder setEventChain(event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexType value) {
          if (eventChainBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            eventChain_ = value;
          } else {
            eventChainBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * This element can be used to create relationships between different events, i.e. where one event is the child of another.
         * </pre>
         *
         * <code>.event_logging.v4.EventChainComplexType event_chain = 7;</code>
         */
        public Builder setEventChain(
            event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexType.Builder builderForValue) {
          if (eventChainBuilder_ == null) {
            eventChain_ = builderForValue.build();
          } else {
            eventChainBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * This element can be used to create relationships between different events, i.e. where one event is the child of another.
         * </pre>
         *
         * <code>.event_logging.v4.EventChainComplexType event_chain = 7;</code>
         */
        public Builder mergeEventChain(event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexType value) {
          if (eventChainBuilder_ == null) {
            if (((bitField0_ & 0x00000040) != 0) &&
              eventChain_ != null &&
              eventChain_ != event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexType.getDefaultInstance()) {
              getEventChainBuilder().mergeFrom(value);
            } else {
              eventChain_ = value;
            }
          } else {
            eventChainBuilder_.mergeFrom(value);
          }
          if (eventChain_ != null) {
            bitField0_ |= 0x00000040;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * This element can be used to create relationships between different events, i.e. where one event is the child of another.
         * </pre>
         *
         * <code>.event_logging.v4.EventChainComplexType event_chain = 7;</code>
         */
        public Builder clearEventChain() {
          bitField0_ = (bitField0_ & ~0x00000040);
          eventChain_ = null;
          if (eventChainBuilder_ != null) {
            eventChainBuilder_.dispose();
            eventChainBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * This element can be used to create relationships between different events, i.e. where one event is the child of another.
         * </pre>
         *
         * <code>.event_logging.v4.EventChainComplexType event_chain = 7;</code>
         */
        public event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexType.Builder getEventChainBuilder() {
          bitField0_ |= 0x00000040;
          onChanged();
          return getEventChainFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * This element can be used to create relationships between different events, i.e. where one event is the child of another.
         * </pre>
         *
         * <code>.event_logging.v4.EventChainComplexType event_chain = 7;</code>
         */
        public event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexTypeOrBuilder getEventChainOrBuilder() {
          if (eventChainBuilder_ != null) {
            return eventChainBuilder_.getMessageOrBuilder();
          } else {
            return eventChain_ == null ?
                event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexType.getDefaultInstance() : eventChain_;
          }
        }
        /**
         * <pre>
         * This element can be used to create relationships between different events, i.e. where one event is the child of another.
         * </pre>
         *
         * <code>.event_logging.v4.EventChainComplexType event_chain = 7;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexType, event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexType.Builder, event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexTypeOrBuilder> 
            getEventChainFieldBuilder() {
          if (eventChainBuilder_ == null) {
            eventChainBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexType, event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexType.Builder, event_logging.v4.EventChainComplexTypeOuterClass.EventChainComplexTypeOrBuilder>(
                    getEventChain(),
                    getParentForChildren(),
                    isClean());
            eventChain_ = null;
          }
          return eventChainBuilder_;
        }

        private java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> data_ =
          java.util.Collections.emptyList();
        private void ensureDataIsMutable() {
          if (!((bitField0_ & 0x00000080) != 0)) {
            data_ = new java.util.ArrayList<event_logging.v4.DataComplexTypeOuterClass.DataComplexType>(data_);
            bitField0_ |= 0x00000080;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> dataBuilder_;

        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
         */
        public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> getDataList() {
          if (dataBuilder_ == null) {
            return java.util.Collections.unmodifiableList(data_);
          } else {
            return dataBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
         */
        public int getDataCount() {
          if (dataBuilder_ == null) {
            return data_.size();
          } else {
            return dataBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index) {
          if (dataBuilder_ == null) {
            return data_.get(index);
          } else {
            return dataBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
         */
        public Builder setData(
            int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
          if (dataBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDataIsMutable();
            data_.set(index, value);
            onChanged();
          } else {
            dataBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
         */
        public Builder setData(
            int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
          if (dataBuilder_ == null) {
            ensureDataIsMutable();
            data_.set(index, builderForValue.build());
            onChanged();
          } else {
            dataBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addData(event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
          if (dataBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDataIsMutable();
            data_.add(value);
            onChanged();
          } else {
            dataBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addData(
            int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
          if (dataBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDataIsMutable();
            data_.add(index, value);
            onChanged();
          } else {
            dataBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addData(
            event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
          if (dataBuilder_ == null) {
            ensureDataIsMutable();
            data_.add(builderForValue.build());
            onChanged();
          } else {
            dataBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addData(
            int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
          if (dataBuilder_ == null) {
            ensureDataIsMutable();
            data_.add(index, builderForValue.build());
            onChanged();
          } else {
            dataBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addAllData(
            java.lang.Iterable<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexType> values) {
          if (dataBuilder_ == null) {
            ensureDataIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, data_);
            onChanged();
          } else {
            dataBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
         */
        public Builder clearData() {
          if (dataBuilder_ == null) {
            data_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000080);
            onChanged();
          } else {
            dataBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
         */
        public Builder removeData(int index) {
          if (dataBuilder_ == null) {
            ensureDataIsMutable();
            data_.remove(index);
            onChanged();
          } else {
            dataBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder getDataBuilder(
            int index) {
          return getDataFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
            int index) {
          if (dataBuilder_ == null) {
            return data_.get(index);  } else {
            return dataBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
         */
        public java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
             getDataOrBuilderList() {
          if (dataBuilder_ != null) {
            return dataBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(data_);
          }
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder addDataBuilder() {
          return getDataFieldBuilder().addBuilder(
              event_logging.v4.DataComplexTypeOuterClass.DataComplexType.getDefaultInstance());
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder addDataBuilder(
            int index) {
          return getDataFieldBuilder().addBuilder(
              index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.getDefaultInstance());
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit. Can also be used for appending data about the event after it has been received or processed, e.g. for recording details relating to the processing of the event such as the feed name.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 8 [(.buf.validate.field) = { ... }</code>
         */
        public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder> 
             getDataBuilderList() {
          return getDataFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
            getDataFieldBuilder() {
          if (dataBuilder_ == null) {
            dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder>(
                    data_,
                    ((bitField0_ & 0x00000080) != 0),
                    getParentForChildren(),
                    isClean());
            data_ = null;
          }
          return dataBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:event_logging.v4.EventsType.EventType)
      }

      // @@protoc_insertion_point(class_scope:event_logging.v4.EventsType.EventType)
      private static final event_logging.v4.EventLogging.EventsType.EventType DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new event_logging.v4.EventLogging.EventsType.EventType();
      }

      public static event_logging.v4.EventLogging.EventsType.EventType getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<EventType>
          PARSER = new com.google.protobuf.AbstractParser<EventType>() {
        @java.lang.Override
        public EventType parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<EventType> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<EventType> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public event_logging.v4.EventLogging.EventsType.EventType getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_ = 0;
    /**
     * <pre>
     * The version of the schema that this document conforms to.
     * </pre>
     *
     * <code>.event_logging.v4.VersionSimpleType version = 1 [(.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for version.
     */
    @java.lang.Override public int getVersionValue() {
      return version_;
    }
    /**
     * <pre>
     * The version of the schema that this document conforms to.
     * </pre>
     *
     * <code>.event_logging.v4.VersionSimpleType version = 1 [(.buf.validate.field) = { ... }</code>
     * @return The version.
     */
    @java.lang.Override public event_logging.v4.VersionSimpleTypeOuterClass.VersionSimpleType getVersion() {
      event_logging.v4.VersionSimpleTypeOuterClass.VersionSimpleType result = event_logging.v4.VersionSimpleTypeOuterClass.VersionSimpleType.forNumber(version_);
      return result == null ? event_logging.v4.VersionSimpleTypeOuterClass.VersionSimpleType.UNRECOGNIZED : result;
    }

    public static final int SHARING_DATA_FIELD_NUMBER = 2;
    private event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType sharingData_;
    /**
     * <pre>
     * This element contains data relating to the sharing of a set of events between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
     * </pre>
     *
     * <code>.event_logging.v4.AnyContentComplexType sharing_data = 2;</code>
     * @return Whether the sharingData field is set.
     */
    @java.lang.Override
    public boolean hasSharingData() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * This element contains data relating to the sharing of a set of events between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
     * </pre>
     *
     * <code>.event_logging.v4.AnyContentComplexType sharing_data = 2;</code>
     * @return The sharingData.
     */
    @java.lang.Override
    public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType getSharingData() {
      return sharingData_ == null ? event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.getDefaultInstance() : sharingData_;
    }
    /**
     * <pre>
     * This element contains data relating to the sharing of a set of events between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
     * </pre>
     *
     * <code>.event_logging.v4.AnyContentComplexType sharing_data = 2;</code>
     */
    @java.lang.Override
    public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder getSharingDataOrBuilder() {
      return sharingData_ == null ? event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.getDefaultInstance() : sharingData_;
    }

    public static final int EVENT_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<event_logging.v4.EventLogging.EventsType.EventType> event_;
    /**
     * <pre>
     * A single event that has occurred and been recorded.
     * </pre>
     *
     * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<event_logging.v4.EventLogging.EventsType.EventType> getEventList() {
      return event_;
    }
    /**
     * <pre>
     * A single event that has occurred and been recorded.
     * </pre>
     *
     * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<? extends event_logging.v4.EventLogging.EventsType.EventTypeOrBuilder> 
        getEventOrBuilderList() {
      return event_;
    }
    /**
     * <pre>
     * A single event that has occurred and been recorded.
     * </pre>
     *
     * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public int getEventCount() {
      return event_.size();
    }
    /**
     * <pre>
     * A single event that has occurred and been recorded.
     * </pre>
     *
     * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.EventLogging.EventsType.EventType getEvent(int index) {
      return event_.get(index);
    }
    /**
     * <pre>
     * A single event that has occurred and been recorded.
     * </pre>
     *
     * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.EventLogging.EventsType.EventTypeOrBuilder getEventOrBuilder(
        int index) {
      return event_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (version_ != event_logging.v4.VersionSimpleTypeOuterClass.VersionSimpleType.VERSION_SIMPLE_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, version_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getSharingData());
      }
      for (int i = 0; i < event_.size(); i++) {
        output.writeMessage(3, event_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (version_ != event_logging.v4.VersionSimpleTypeOuterClass.VersionSimpleType.VERSION_SIMPLE_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, version_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSharingData());
      }
      for (int i = 0; i < event_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, event_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof event_logging.v4.EventLogging.EventsType)) {
        return super.equals(obj);
      }
      event_logging.v4.EventLogging.EventsType other = (event_logging.v4.EventLogging.EventsType) obj;

      if (version_ != other.version_) return false;
      if (hasSharingData() != other.hasSharingData()) return false;
      if (hasSharingData()) {
        if (!getSharingData()
            .equals(other.getSharingData())) return false;
      }
      if (!getEventList()
          .equals(other.getEventList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + version_;
      if (hasSharingData()) {
        hash = (37 * hash) + SHARING_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getSharingData().hashCode();
      }
      if (getEventCount() > 0) {
        hash = (37 * hash) + EVENT_FIELD_NUMBER;
        hash = (53 * hash) + getEventList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static event_logging.v4.EventLogging.EventsType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.EventLogging.EventsType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.EventLogging.EventsType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.EventLogging.EventsType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.EventLogging.EventsType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.EventLogging.EventsType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.EventLogging.EventsType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static event_logging.v4.EventLogging.EventsType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static event_logging.v4.EventLogging.EventsType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static event_logging.v4.EventLogging.EventsType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_logging.v4.EventLogging.EventsType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static event_logging.v4.EventLogging.EventsType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(event_logging.v4.EventLogging.EventsType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The root element that contains multiple Event elements.
     * </pre>
     *
     * Protobuf type {@code event_logging.v4.EventsType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_logging.v4.EventsType)
        event_logging.v4.EventLogging.EventsTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_logging.v4.EventLogging.internal_static_event_logging_v4_EventsType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_logging.v4.EventLogging.internal_static_event_logging_v4_EventsType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_logging.v4.EventLogging.EventsType.class, event_logging.v4.EventLogging.EventsType.Builder.class);
      }

      // Construct using event_logging.v4.EventLogging.EventsType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getSharingDataFieldBuilder();
          getEventFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        version_ = 0;
        sharingData_ = null;
        if (sharingDataBuilder_ != null) {
          sharingDataBuilder_.dispose();
          sharingDataBuilder_ = null;
        }
        if (eventBuilder_ == null) {
          event_ = java.util.Collections.emptyList();
        } else {
          event_ = null;
          eventBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return event_logging.v4.EventLogging.internal_static_event_logging_v4_EventsType_descriptor;
      }

      @java.lang.Override
      public event_logging.v4.EventLogging.EventsType getDefaultInstanceForType() {
        return event_logging.v4.EventLogging.EventsType.getDefaultInstance();
      }

      @java.lang.Override
      public event_logging.v4.EventLogging.EventsType build() {
        event_logging.v4.EventLogging.EventsType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public event_logging.v4.EventLogging.EventsType buildPartial() {
        event_logging.v4.EventLogging.EventsType result = new event_logging.v4.EventLogging.EventsType(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(event_logging.v4.EventLogging.EventsType result) {
        if (eventBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            event_ = java.util.Collections.unmodifiableList(event_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.event_ = event_;
        } else {
          result.event_ = eventBuilder_.build();
        }
      }

      private void buildPartial0(event_logging.v4.EventLogging.EventsType result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.version_ = version_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.sharingData_ = sharingDataBuilder_ == null
              ? sharingData_
              : sharingDataBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof event_logging.v4.EventLogging.EventsType) {
          return mergeFrom((event_logging.v4.EventLogging.EventsType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(event_logging.v4.EventLogging.EventsType other) {
        if (other == event_logging.v4.EventLogging.EventsType.getDefaultInstance()) return this;
        if (other.version_ != 0) {
          setVersionValue(other.getVersionValue());
        }
        if (other.hasSharingData()) {
          mergeSharingData(other.getSharingData());
        }
        if (eventBuilder_ == null) {
          if (!other.event_.isEmpty()) {
            if (event_.isEmpty()) {
              event_ = other.event_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureEventIsMutable();
              event_.addAll(other.event_);
            }
            onChanged();
          }
        } else {
          if (!other.event_.isEmpty()) {
            if (eventBuilder_.isEmpty()) {
              eventBuilder_.dispose();
              eventBuilder_ = null;
              event_ = other.event_;
              bitField0_ = (bitField0_ & ~0x00000004);
              eventBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEventFieldBuilder() : null;
            } else {
              eventBuilder_.addAllMessages(other.event_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                version_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getSharingDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                event_logging.v4.EventLogging.EventsType.EventType m =
                    input.readMessage(
                        event_logging.v4.EventLogging.EventsType.EventType.parser(),
                        extensionRegistry);
                if (eventBuilder_ == null) {
                  ensureEventIsMutable();
                  event_.add(m);
                } else {
                  eventBuilder_.addMessage(m);
                }
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int version_ = 0;
      /**
       * <pre>
       * The version of the schema that this document conforms to.
       * </pre>
       *
       * <code>.event_logging.v4.VersionSimpleType version = 1 [(.buf.validate.field) = { ... }</code>
       * @return The enum numeric value on the wire for version.
       */
      @java.lang.Override public int getVersionValue() {
        return version_;
      }
      /**
       * <pre>
       * The version of the schema that this document conforms to.
       * </pre>
       *
       * <code>.event_logging.v4.VersionSimpleType version = 1 [(.buf.validate.field) = { ... }</code>
       * @param value The enum numeric value on the wire for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionValue(int value) {
        version_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The version of the schema that this document conforms to.
       * </pre>
       *
       * <code>.event_logging.v4.VersionSimpleType version = 1 [(.buf.validate.field) = { ... }</code>
       * @return The version.
       */
      @java.lang.Override
      public event_logging.v4.VersionSimpleTypeOuterClass.VersionSimpleType getVersion() {
        event_logging.v4.VersionSimpleTypeOuterClass.VersionSimpleType result = event_logging.v4.VersionSimpleTypeOuterClass.VersionSimpleType.forNumber(version_);
        return result == null ? event_logging.v4.VersionSimpleTypeOuterClass.VersionSimpleType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The version of the schema that this document conforms to.
       * </pre>
       *
       * <code>.event_logging.v4.VersionSimpleType version = 1 [(.buf.validate.field) = { ... }</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(event_logging.v4.VersionSimpleTypeOuterClass.VersionSimpleType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        version_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The version of the schema that this document conforms to.
       * </pre>
       *
       * <code>.event_logging.v4.VersionSimpleType version = 1 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0;
        onChanged();
        return this;
      }

      private event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType sharingData_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder> sharingDataBuilder_;
      /**
       * <pre>
       * This element contains data relating to the sharing of a set of events between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
       * </pre>
       *
       * <code>.event_logging.v4.AnyContentComplexType sharing_data = 2;</code>
       * @return Whether the sharingData field is set.
       */
      public boolean hasSharingData() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * This element contains data relating to the sharing of a set of events between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
       * </pre>
       *
       * <code>.event_logging.v4.AnyContentComplexType sharing_data = 2;</code>
       * @return The sharingData.
       */
      public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType getSharingData() {
        if (sharingDataBuilder_ == null) {
          return sharingData_ == null ? event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.getDefaultInstance() : sharingData_;
        } else {
          return sharingDataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * This element contains data relating to the sharing of a set of events between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
       * </pre>
       *
       * <code>.event_logging.v4.AnyContentComplexType sharing_data = 2;</code>
       */
      public Builder setSharingData(event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType value) {
        if (sharingDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sharingData_ = value;
        } else {
          sharingDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This element contains data relating to the sharing of a set of events between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
       * </pre>
       *
       * <code>.event_logging.v4.AnyContentComplexType sharing_data = 2;</code>
       */
      public Builder setSharingData(
          event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder builderForValue) {
        if (sharingDataBuilder_ == null) {
          sharingData_ = builderForValue.build();
        } else {
          sharingDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This element contains data relating to the sharing of a set of events between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
       * </pre>
       *
       * <code>.event_logging.v4.AnyContentComplexType sharing_data = 2;</code>
       */
      public Builder mergeSharingData(event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType value) {
        if (sharingDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            sharingData_ != null &&
            sharingData_ != event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.getDefaultInstance()) {
            getSharingDataBuilder().mergeFrom(value);
          } else {
            sharingData_ = value;
          }
        } else {
          sharingDataBuilder_.mergeFrom(value);
        }
        if (sharingData_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * This element contains data relating to the sharing of a set of events between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
       * </pre>
       *
       * <code>.event_logging.v4.AnyContentComplexType sharing_data = 2;</code>
       */
      public Builder clearSharingData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sharingData_ = null;
        if (sharingDataBuilder_ != null) {
          sharingDataBuilder_.dispose();
          sharingDataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This element contains data relating to the sharing of a set of events between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
       * </pre>
       *
       * <code>.event_logging.v4.AnyContentComplexType sharing_data = 2;</code>
       */
      public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder getSharingDataBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSharingDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * This element contains data relating to the sharing of a set of events between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
       * </pre>
       *
       * <code>.event_logging.v4.AnyContentComplexType sharing_data = 2;</code>
       */
      public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder getSharingDataOrBuilder() {
        if (sharingDataBuilder_ != null) {
          return sharingDataBuilder_.getMessageOrBuilder();
        } else {
          return sharingData_ == null ?
              event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.getDefaultInstance() : sharingData_;
        }
      }
      /**
       * <pre>
       * This element contains data relating to the sharing of a set of events between different systems or organisations. The data contained within this element will confirm to a specification defined outside of this schema.
       * </pre>
       *
       * <code>.event_logging.v4.AnyContentComplexType sharing_data = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder> 
          getSharingDataFieldBuilder() {
        if (sharingDataBuilder_ == null) {
          sharingDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder>(
                  getSharingData(),
                  getParentForChildren(),
                  isClean());
          sharingData_ = null;
        }
        return sharingDataBuilder_;
      }

      private java.util.List<event_logging.v4.EventLogging.EventsType.EventType> event_ =
        java.util.Collections.emptyList();
      private void ensureEventIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          event_ = new java.util.ArrayList<event_logging.v4.EventLogging.EventsType.EventType>(event_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          event_logging.v4.EventLogging.EventsType.EventType, event_logging.v4.EventLogging.EventsType.EventType.Builder, event_logging.v4.EventLogging.EventsType.EventTypeOrBuilder> eventBuilder_;

      /**
       * <pre>
       * A single event that has occurred and been recorded.
       * </pre>
       *
       * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<event_logging.v4.EventLogging.EventsType.EventType> getEventList() {
        if (eventBuilder_ == null) {
          return java.util.Collections.unmodifiableList(event_);
        } else {
          return eventBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A single event that has occurred and been recorded.
       * </pre>
       *
       * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
       */
      public int getEventCount() {
        if (eventBuilder_ == null) {
          return event_.size();
        } else {
          return eventBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A single event that has occurred and been recorded.
       * </pre>
       *
       * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.EventLogging.EventsType.EventType getEvent(int index) {
        if (eventBuilder_ == null) {
          return event_.get(index);
        } else {
          return eventBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A single event that has occurred and been recorded.
       * </pre>
       *
       * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setEvent(
          int index, event_logging.v4.EventLogging.EventsType.EventType value) {
        if (eventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventIsMutable();
          event_.set(index, value);
          onChanged();
        } else {
          eventBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A single event that has occurred and been recorded.
       * </pre>
       *
       * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setEvent(
          int index, event_logging.v4.EventLogging.EventsType.EventType.Builder builderForValue) {
        if (eventBuilder_ == null) {
          ensureEventIsMutable();
          event_.set(index, builderForValue.build());
          onChanged();
        } else {
          eventBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A single event that has occurred and been recorded.
       * </pre>
       *
       * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addEvent(event_logging.v4.EventLogging.EventsType.EventType value) {
        if (eventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventIsMutable();
          event_.add(value);
          onChanged();
        } else {
          eventBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A single event that has occurred and been recorded.
       * </pre>
       *
       * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addEvent(
          int index, event_logging.v4.EventLogging.EventsType.EventType value) {
        if (eventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventIsMutable();
          event_.add(index, value);
          onChanged();
        } else {
          eventBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A single event that has occurred and been recorded.
       * </pre>
       *
       * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addEvent(
          event_logging.v4.EventLogging.EventsType.EventType.Builder builderForValue) {
        if (eventBuilder_ == null) {
          ensureEventIsMutable();
          event_.add(builderForValue.build());
          onChanged();
        } else {
          eventBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A single event that has occurred and been recorded.
       * </pre>
       *
       * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addEvent(
          int index, event_logging.v4.EventLogging.EventsType.EventType.Builder builderForValue) {
        if (eventBuilder_ == null) {
          ensureEventIsMutable();
          event_.add(index, builderForValue.build());
          onChanged();
        } else {
          eventBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A single event that has occurred and been recorded.
       * </pre>
       *
       * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addAllEvent(
          java.lang.Iterable<? extends event_logging.v4.EventLogging.EventsType.EventType> values) {
        if (eventBuilder_ == null) {
          ensureEventIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, event_);
          onChanged();
        } else {
          eventBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A single event that has occurred and been recorded.
       * </pre>
       *
       * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearEvent() {
        if (eventBuilder_ == null) {
          event_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          eventBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A single event that has occurred and been recorded.
       * </pre>
       *
       * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
       */
      public Builder removeEvent(int index) {
        if (eventBuilder_ == null) {
          ensureEventIsMutable();
          event_.remove(index);
          onChanged();
        } else {
          eventBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A single event that has occurred and been recorded.
       * </pre>
       *
       * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.EventLogging.EventsType.EventType.Builder getEventBuilder(
          int index) {
        return getEventFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A single event that has occurred and been recorded.
       * </pre>
       *
       * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.EventLogging.EventsType.EventTypeOrBuilder getEventOrBuilder(
          int index) {
        if (eventBuilder_ == null) {
          return event_.get(index);  } else {
          return eventBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A single event that has occurred and been recorded.
       * </pre>
       *
       * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<? extends event_logging.v4.EventLogging.EventsType.EventTypeOrBuilder> 
           getEventOrBuilderList() {
        if (eventBuilder_ != null) {
          return eventBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(event_);
        }
      }
      /**
       * <pre>
       * A single event that has occurred and been recorded.
       * </pre>
       *
       * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.EventLogging.EventsType.EventType.Builder addEventBuilder() {
        return getEventFieldBuilder().addBuilder(
            event_logging.v4.EventLogging.EventsType.EventType.getDefaultInstance());
      }
      /**
       * <pre>
       * A single event that has occurred and been recorded.
       * </pre>
       *
       * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.EventLogging.EventsType.EventType.Builder addEventBuilder(
          int index) {
        return getEventFieldBuilder().addBuilder(
            index, event_logging.v4.EventLogging.EventsType.EventType.getDefaultInstance());
      }
      /**
       * <pre>
       * A single event that has occurred and been recorded.
       * </pre>
       *
       * <code>repeated .event_logging.v4.EventsType.EventType event = 3 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<event_logging.v4.EventLogging.EventsType.EventType.Builder> 
           getEventBuilderList() {
        return getEventFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          event_logging.v4.EventLogging.EventsType.EventType, event_logging.v4.EventLogging.EventsType.EventType.Builder, event_logging.v4.EventLogging.EventsType.EventTypeOrBuilder> 
          getEventFieldBuilder() {
        if (eventBuilder_ == null) {
          eventBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              event_logging.v4.EventLogging.EventsType.EventType, event_logging.v4.EventLogging.EventsType.EventType.Builder, event_logging.v4.EventLogging.EventsType.EventTypeOrBuilder>(
                  event_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        return eventBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:event_logging.v4.EventsType)
    }

    // @@protoc_insertion_point(class_scope:event_logging.v4.EventsType)
    private static final event_logging.v4.EventLogging.EventsType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new event_logging.v4.EventLogging.EventsType();
    }

    public static event_logging.v4.EventLogging.EventsType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventsType>
        PARSER = new com.google.protobuf.AbstractParser<EventsType>() {
      @java.lang.Override
      public EventsType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<EventsType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventsType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public event_logging.v4.EventLogging.EventsType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_logging_v4_EventsType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_event_logging_v4_EventsType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_logging_v4_EventsType_EventType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_event_logging_v4_EventsType_EventType_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n$event_logging/v4/event_logging.proto\022\020" +
      "event_logging.v4\032/event_logging/v4/any_c" +
      "ontent_complex_type.proto\0322event_logging" +
      "/v4/classification_complex_type.proto\032(e" +
      "vent_logging/v4/data_complex_type.proto\032" +
      "/event_logging/v4/event_chain_complex_ty" +
      "pe.proto\0320event_logging/v4/event_detail_" +
      "complex_type.proto\0320event_logging/v4/eve" +
      "nt_source_complex_type.proto\032.event_logg" +
      "ing/v4/event_time_complex_type.proto\032*ev" +
      "ent_logging/v4/version_simple_type.proto" +
      "\032\033buf/validate/validate.proto\"\346\005\n\nEvents" +
      "Type\022>\n\007version\030\001 \001(\0162#.event_logging.v4" +
      ".VersionSimpleTypeB\010\272H\005\202\001\002\020\001\022=\n\014sharing_" +
      "data\030\002 \001(\0132\'.event_logging.v4.AnyContent" +
      "ComplexType\022=\n\005event\030\003 \003(\0132&.event_loggi" +
      "ng.v4.EventsType.EventTypeB\006\272H\003\222\001\000\032\231\004\n\tE" +
      "ventType\022=\n\004meta\030\001 \003(\0132\'.event_logging.v" +
      "4.AnyContentComplexTypeB\006\272H\003\222\001\000\022C\n\016class" +
      "ification\030\002 \001(\0132+.event_logging.v4.Class" +
      "ificationComplexType\022=\n\014sharing_data\030\003 \001" +
      "(\0132\'.event_logging.v4.AnyContentComplexT" +
      "ype\022B\n\nevent_time\030\004 \001(\0132&.event_logging." +
      "v4.EventTimeComplexTypeB\006\272H\003\310\001\001\022F\n\014event" +
      "_source\030\005 \001(\0132(.event_logging.v4.EventSo" +
      "urceComplexTypeB\006\272H\003\310\001\001\022F\n\014event_detail\030" +
      "\006 \001(\0132(.event_logging.v4.EventDetailComp" +
      "lexTypeB\006\272H\003\310\001\001\022<\n\013event_chain\030\007 \001(\0132\'.e" +
      "vent_logging.v4.EventChainComplexType\0227\n" +
      "\004data\030\010 \003(\0132!.event_logging.v4.DataCompl" +
      "exTypeB\006\272H\003\222\001\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          event_logging.v4.AnyContentComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.ClassificationComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.DataComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.EventChainComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.EventDetailComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.EventSourceComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.EventTimeComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.VersionSimpleTypeOuterClass.getDescriptor(),
          build.buf.validate.ValidateProto.getDescriptor(),
        });
    internal_static_event_logging_v4_EventsType_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_event_logging_v4_EventsType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_event_logging_v4_EventsType_descriptor,
        new java.lang.String[] { "Version", "SharingData", "Event", });
    internal_static_event_logging_v4_EventsType_EventType_descriptor =
      internal_static_event_logging_v4_EventsType_descriptor.getNestedTypes().get(0);
    internal_static_event_logging_v4_EventsType_EventType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_event_logging_v4_EventsType_EventType_descriptor,
        new java.lang.String[] { "Meta", "Classification", "SharingData", "EventTime", "EventSource", "EventDetail", "EventChain", "Data", });
    descriptor.resolveAllFeaturesImmutable();
    event_logging.v4.AnyContentComplexTypeOuterClass.getDescriptor();
    event_logging.v4.ClassificationComplexTypeOuterClass.getDescriptor();
    event_logging.v4.DataComplexTypeOuterClass.getDescriptor();
    event_logging.v4.EventChainComplexTypeOuterClass.getDescriptor();
    event_logging.v4.EventDetailComplexTypeOuterClass.getDescriptor();
    event_logging.v4.EventSourceComplexTypeOuterClass.getDescriptor();
    event_logging.v4.EventTimeComplexTypeOuterClass.getDescriptor();
    event_logging.v4.VersionSimpleTypeOuterClass.getDescriptor();
    build.buf.validate.ValidateProto.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(build.buf.validate.ValidateProto.field);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
