// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event_logging/v4/software_complex_type.proto
// Protobuf Java Version: 4.26.1

package event_logging.v4;

public final class SoftwareComplexTypeOuterClass {
  private SoftwareComplexTypeOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      SoftwareComplexTypeOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SoftwareComplexTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_logging.v4.SoftwareComplexType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * An identifier for the software asset.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * An identifier for the software asset.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The name of the software product.
     * </pre>
     *
     * <code>string name = 2 [(.buf.validate.field) = { ... }</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the software product.
     * </pre>
     *
     * <code>string name = 2 [(.buf.validate.field) = { ... }</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The version of the software product, e.g. v3.1.
     * </pre>
     *
     * <code>string version = 3;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * The version of the software product, e.g. v3.1.
     * </pre>
     *
     * <code>string version = 3;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <pre>
     * The manufacturer of the software product, e.g. Borland
     * </pre>
     *
     * <code>string manufacturer = 4;</code>
     * @return The manufacturer.
     */
    java.lang.String getManufacturer();
    /**
     * <pre>
     * The manufacturer of the software product, e.g. Borland
     * </pre>
     *
     * <code>string manufacturer = 4;</code>
     * @return The bytes for manufacturer.
     */
    com.google.protobuf.ByteString
        getManufacturerBytes();

    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
     */
    java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> 
        getDataList();
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index);
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
     */
    int getDataCount();
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
     */
    java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
        getDataOrBuilderList();
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Used to describe a software asset.
   * </pre>
   *
   * Protobuf type {@code event_logging.v4.SoftwareComplexType}
   */
  public static final class SoftwareComplexType extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:event_logging.v4.SoftwareComplexType)
      SoftwareComplexTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        SoftwareComplexType.class.getName());
    }
    // Use SoftwareComplexType.newBuilder() to construct.
    private SoftwareComplexType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private SoftwareComplexType() {
      id_ = "";
      name_ = "";
      version_ = "";
      manufacturer_ = "";
      data_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return event_logging.v4.SoftwareComplexTypeOuterClass.internal_static_event_logging_v4_SoftwareComplexType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return event_logging.v4.SoftwareComplexTypeOuterClass.internal_static_event_logging_v4_SoftwareComplexType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType.class, event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object id_ = "";
    /**
     * <pre>
     * An identifier for the software asset.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * An identifier for the software asset.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <pre>
     * The name of the software product.
     * </pre>
     *
     * <code>string name = 2 [(.buf.validate.field) = { ... }</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the software product.
     * </pre>
     *
     * <code>string name = 2 [(.buf.validate.field) = { ... }</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object version_ = "";
    /**
     * <pre>
     * The version of the software product, e.g. v3.1.
     * </pre>
     *
     * <code>string version = 3;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The version of the software product, e.g. v3.1.
     * </pre>
     *
     * <code>string version = 3;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MANUFACTURER_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object manufacturer_ = "";
    /**
     * <pre>
     * The manufacturer of the software product, e.g. Borland
     * </pre>
     *
     * <code>string manufacturer = 4;</code>
     * @return The manufacturer.
     */
    @java.lang.Override
    public java.lang.String getManufacturer() {
      java.lang.Object ref = manufacturer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        manufacturer_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The manufacturer of the software product, e.g. Borland
     * </pre>
     *
     * <code>string manufacturer = 4;</code>
     * @return The bytes for manufacturer.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getManufacturerBytes() {
      java.lang.Object ref = manufacturer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        manufacturer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> data_;
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> getDataList() {
      return data_;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
        getDataOrBuilderList() {
      return data_;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index) {
      return data_.get(index);
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
        int index) {
      return data_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, id_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, name_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(version_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, version_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(manufacturer_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, manufacturer_);
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeMessage(5, data_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, id_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, name_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(version_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, version_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(manufacturer_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, manufacturer_);
      }
      for (int i = 0; i < data_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, data_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType)) {
        return super.equals(obj);
      }
      event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType other = (event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType) obj;

      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!getManufacturer()
          .equals(other.getManufacturer())) return false;
      if (!getDataList()
          .equals(other.getDataList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (37 * hash) + MANUFACTURER_FIELD_NUMBER;
      hash = (53 * hash) + getManufacturer().hashCode();
      if (getDataCount() > 0) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDataList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Used to describe a software asset.
     * </pre>
     *
     * Protobuf type {@code event_logging.v4.SoftwareComplexType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_logging.v4.SoftwareComplexType)
        event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_logging.v4.SoftwareComplexTypeOuterClass.internal_static_event_logging_v4_SoftwareComplexType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_logging.v4.SoftwareComplexTypeOuterClass.internal_static_event_logging_v4_SoftwareComplexType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType.class, event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType.Builder.class);
      }

      // Construct using event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = "";
        name_ = "";
        version_ = "";
        manufacturer_ = "";
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
        } else {
          data_ = null;
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return event_logging.v4.SoftwareComplexTypeOuterClass.internal_static_event_logging_v4_SoftwareComplexType_descriptor;
      }

      @java.lang.Override
      public event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType getDefaultInstanceForType() {
        return event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType.getDefaultInstance();
      }

      @java.lang.Override
      public event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType build() {
        event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType buildPartial() {
        event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType result = new event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType result) {
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
      }

      private void buildPartial0(event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.name_ = name_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.version_ = version_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.manufacturer_ = manufacturer_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType) {
          return mergeFrom((event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType other) {
        if (other == event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (!other.getManufacturer().isEmpty()) {
          manufacturer_ = other.manufacturer_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (dataBuilder_ == null) {
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
        } else {
          if (!other.data_.isEmpty()) {
            if (dataBuilder_.isEmpty()) {
              dataBuilder_.dispose();
              dataBuilder_ = null;
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000010);
              dataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDataFieldBuilder() : null;
            } else {
              dataBuilder_.addAllMessages(other.data_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                id_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                version_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                manufacturer_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                event_logging.v4.DataComplexTypeOuterClass.DataComplexType m =
                    input.readMessage(
                        event_logging.v4.DataComplexTypeOuterClass.DataComplexType.parser(),
                        extensionRegistry);
                if (dataBuilder_ == null) {
                  ensureDataIsMutable();
                  data_.add(m);
                } else {
                  dataBuilder_.addMessage(m);
                }
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * An identifier for the software asset.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * An identifier for the software asset.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * An identifier for the software asset.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An identifier for the software asset.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        id_ = getDefaultInstance().getId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An identifier for the software asset.
       * </pre>
       *
       * <code>string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the software product.
       * </pre>
       *
       * <code>string name = 2 [(.buf.validate.field) = { ... }</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the software product.
       * </pre>
       *
       * <code>string name = 2 [(.buf.validate.field) = { ... }</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the software product.
       * </pre>
       *
       * <code>string name = 2 [(.buf.validate.field) = { ... }</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the software product.
       * </pre>
       *
       * <code>string name = 2 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the software product.
       * </pre>
       *
       * <code>string name = 2 [(.buf.validate.field) = { ... }</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * The version of the software product, e.g. v3.1.
       * </pre>
       *
       * <code>string version = 3;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The version of the software product, e.g. v3.1.
       * </pre>
       *
       * <code>string version = 3;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The version of the software product, e.g. v3.1.
       * </pre>
       *
       * <code>string version = 3;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        version_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The version of the software product, e.g. v3.1.
       * </pre>
       *
       * <code>string version = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        version_ = getDefaultInstance().getVersion();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The version of the software product, e.g. v3.1.
       * </pre>
       *
       * <code>string version = 3;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        version_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.lang.Object manufacturer_ = "";
      /**
       * <pre>
       * The manufacturer of the software product, e.g. Borland
       * </pre>
       *
       * <code>string manufacturer = 4;</code>
       * @return The manufacturer.
       */
      public java.lang.String getManufacturer() {
        java.lang.Object ref = manufacturer_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          manufacturer_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The manufacturer of the software product, e.g. Borland
       * </pre>
       *
       * <code>string manufacturer = 4;</code>
       * @return The bytes for manufacturer.
       */
      public com.google.protobuf.ByteString
          getManufacturerBytes() {
        java.lang.Object ref = manufacturer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          manufacturer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The manufacturer of the software product, e.g. Borland
       * </pre>
       *
       * <code>string manufacturer = 4;</code>
       * @param value The manufacturer to set.
       * @return This builder for chaining.
       */
      public Builder setManufacturer(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        manufacturer_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The manufacturer of the software product, e.g. Borland
       * </pre>
       *
       * <code>string manufacturer = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearManufacturer() {
        manufacturer_ = getDefaultInstance().getManufacturer();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The manufacturer of the software product, e.g. Borland
       * </pre>
       *
       * <code>string manufacturer = 4;</code>
       * @param value The bytes for manufacturer to set.
       * @return This builder for chaining.
       */
      public Builder setManufacturerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        manufacturer_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> data_ =
        java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          data_ = new java.util.ArrayList<event_logging.v4.DataComplexTypeOuterClass.DataComplexType>(data_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> dataBuilder_;

      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> getDataList() {
        if (dataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(data_);
        } else {
          return dataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      public int getDataCount() {
        if (dataBuilder_ == null) {
          return data_.size();
        } else {
          return dataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);
        } else {
          return dataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
        } else {
          dataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
        } else {
          dataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(index, value);
          onChanged();
        } else {
          dataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(
          event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexType> values) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, data_);
          onChanged();
        } else {
          dataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      public Builder removeData(int index) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.remove(index);
          onChanged();
        } else {
          dataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder getDataBuilder(
          int index) {
        return getDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
          int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);  } else {
          return dataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
           getDataOrBuilderList() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(data_);
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder addDataBuilder() {
        return getDataFieldBuilder().addBuilder(
            event_logging.v4.DataComplexTypeOuterClass.DataComplexType.getDefaultInstance());
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder addDataBuilder(
          int index) {
        return getDataFieldBuilder().addBuilder(
            index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.getDefaultInstance());
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 5 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder> 
           getDataBuilderList() {
        return getDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder>(
                  data_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:event_logging.v4.SoftwareComplexType)
    }

    // @@protoc_insertion_point(class_scope:event_logging.v4.SoftwareComplexType)
    private static final event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType();
    }

    public static event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SoftwareComplexType>
        PARSER = new com.google.protobuf.AbstractParser<SoftwareComplexType>() {
      @java.lang.Override
      public SoftwareComplexType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SoftwareComplexType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SoftwareComplexType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public event_logging.v4.SoftwareComplexTypeOuterClass.SoftwareComplexType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_logging_v4_SoftwareComplexType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_event_logging_v4_SoftwareComplexType_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n,event_logging/v4/software_complex_type" +
      ".proto\022\020event_logging.v4\032(event_logging/" +
      "v4/data_complex_type.proto\032\033buf/validate" +
      "/validate.proto\"\227\001\n\023SoftwareComplexType\022" +
      "\n\n\002id\030\001 \001(\t\022\024\n\004name\030\002 \001(\tB\006\272H\003\310\001\001\022\017\n\007ver" +
      "sion\030\003 \001(\t\022\024\n\014manufacturer\030\004 \001(\t\0227\n\004data" +
      "\030\005 \003(\0132!.event_logging.v4.DataComplexTyp" +
      "eB\006\272H\003\222\001\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          event_logging.v4.DataComplexTypeOuterClass.getDescriptor(),
          build.buf.validate.ValidateProto.getDescriptor(),
        });
    internal_static_event_logging_v4_SoftwareComplexType_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_event_logging_v4_SoftwareComplexType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_event_logging_v4_SoftwareComplexType_descriptor,
        new java.lang.String[] { "Id", "Name", "Version", "Manufacturer", "Data", });
    descriptor.resolveAllFeaturesImmutable();
    event_logging.v4.DataComplexTypeOuterClass.getDescriptor();
    build.buf.validate.ValidateProto.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(build.buf.validate.ValidateProto.field);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
