// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event_logging/v4/configuration_complex_type.proto
// Protobuf Java Version: 4.26.1

package event_logging.v4;

public final class ConfigurationComplexTypeOuterClass {
  private ConfigurationComplexTypeOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      ConfigurationComplexTypeOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ConfigurationComplexTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_logging.v4.ConfigurationComplexType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
     */
    java.util.List<event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType> 
        getMetaList();
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType getMeta(int index);
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
     */
    int getMetaCount();
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
     */
    java.util.List<? extends event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder> 
        getMetaOrBuilderList();
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder getMetaOrBuilder(
        int index);

    /**
     * <pre>
     * The type of the object in question and specific to the object type from the list above, e.g. a 'Resource' object may have a type such as 'image' or 'script'.
     * </pre>
     *
     * <code>string type = 2;</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type of the object in question and specific to the object type from the list above, e.g. a 'Resource' object may have a type such as 'image' or 'script'.
     * </pre>
     *
     * <code>string type = 2;</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * An identifier for the object, e.g a document ID in a document management system. This ID is likely to be specific to the system that generated the event.
     * </pre>
     *
     * <code>string id = 3;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * An identifier for the object, e.g a document ID in a document management system. This ID is likely to be specific to the system that generated the event.
     * </pre>
     *
     * <code>string id = 3;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The name of the object, e.g. a filename.
     * </pre>
     *
     * <code>string name = 4;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * The name of the object, e.g. a filename.
     * </pre>
     *
     * <code>string name = 4;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Human readable description of what the object is.
     * </pre>
     *
     * <code>string description = 5;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * Human readable description of what the object is.
     * </pre>
     *
     * <code>string description = 5;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 6;</code>
     * @return Whether the classification field is set.
     */
    boolean hasClassification();
    /**
     * <pre>
     * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 6;</code>
     * @return The classification.
     */
    event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType getClassification();
    /**
     * <pre>
     * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 6;</code>
     */
    event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexTypeOrBuilder getClassificationOrBuilder();

    /**
     * <pre>
     * Any state information about the object, e.g. 'Archived'.
     * </pre>
     *
     * <code>string state = 7;</code>
     * @return The state.
     */
    java.lang.String getState();
    /**
     * <pre>
     * Any state information about the object, e.g. 'Archived'.
     * </pre>
     *
     * <code>string state = 7;</code>
     * @return The bytes for state.
     */
    com.google.protobuf.ByteString
        getStateBytes();

    /**
     * <pre>
     * Any groups associated with the object, e.g. group membership of a user account.
     * </pre>
     *
     * <code>.event_logging.v4.GroupsComplexType groups = 8;</code>
     * @return Whether the groups field is set.
     */
    boolean hasGroups();
    /**
     * <pre>
     * Any groups associated with the object, e.g. group membership of a user account.
     * </pre>
     *
     * <code>.event_logging.v4.GroupsComplexType groups = 8;</code>
     * @return The groups.
     */
    event_logging.v4.UserComplexTypeOuterClass.GroupsComplexType getGroups();
    /**
     * <pre>
     * Any groups associated with the object, e.g. group membership of a user account.
     * </pre>
     *
     * <code>.event_logging.v4.GroupsComplexType groups = 8;</code>
     */
    event_logging.v4.UserComplexTypeOuterClass.GroupsComplexTypeOrBuilder getGroupsOrBuilder();

    /**
     * <pre>
     * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
     * </pre>
     *
     * <code>.event_logging.v4.ConfigurationComplexType.PermissionsType permissions = 9;</code>
     * @return Whether the permissions field is set.
     */
    boolean hasPermissions();
    /**
     * <pre>
     * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
     * </pre>
     *
     * <code>.event_logging.v4.ConfigurationComplexType.PermissionsType permissions = 9;</code>
     * @return The permissions.
     */
    event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType getPermissions();
    /**
     * <pre>
     * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
     * </pre>
     *
     * <code>.event_logging.v4.ConfigurationComplexType.PermissionsType permissions = 9;</code>
     */
    event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsTypeOrBuilder getPermissionsOrBuilder();

    /**
     * <pre>
     * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
     * </pre>
     *
     * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10;</code>
     * @return Whether the tags field is set.
     */
    boolean hasTags();
    /**
     * <pre>
     * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
     * </pre>
     *
     * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10;</code>
     * @return The tags.
     */
    event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexType getTags();
    /**
     * <pre>
     * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
     * </pre>
     *
     * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10;</code>
     */
    event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexTypeOrBuilder getTagsOrBuilder();

    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
     */
    java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> 
        getDataList();
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index);
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
     */
    int getDataCount();
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
     */
    java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
        getDataOrBuilderList();
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Describes the configuration of entity, e.g. it can be used to describe the update to the configuration of a network device.
   * </pre>
   *
   * Protobuf type {@code event_logging.v4.ConfigurationComplexType}
   */
  public static final class ConfigurationComplexType extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:event_logging.v4.ConfigurationComplexType)
      ConfigurationComplexTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        ConfigurationComplexType.class.getName());
    }
    // Use ConfigurationComplexType.newBuilder() to construct.
    private ConfigurationComplexType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ConfigurationComplexType() {
      meta_ = java.util.Collections.emptyList();
      type_ = "";
      id_ = "";
      name_ = "";
      description_ = "";
      state_ = "";
      data_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return event_logging.v4.ConfigurationComplexTypeOuterClass.internal_static_event_logging_v4_ConfigurationComplexType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return event_logging.v4.ConfigurationComplexTypeOuterClass.internal_static_event_logging_v4_ConfigurationComplexType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.class, event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.Builder.class);
    }

    public interface PermissionsTypeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:event_logging.v4.ConfigurationComplexType.PermissionsType)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
       */
      java.util.List<event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType> 
          getPermissionList();
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
       */
      event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType getPermission(int index);
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
       */
      int getPermissionCount();
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
       */
      java.util.List<? extends event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionTypeOrBuilder> 
          getPermissionOrBuilderList();
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
       */
      event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionTypeOrBuilder getPermissionOrBuilder(
          int index);
    }
    /**
     * <pre>
     * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
     * </pre>
     *
     * Protobuf type {@code event_logging.v4.ConfigurationComplexType.PermissionsType}
     */
    public static final class PermissionsType extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:event_logging.v4.ConfigurationComplexType.PermissionsType)
        PermissionsTypeOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 26,
          /* patch= */ 1,
          /* suffix= */ "",
          PermissionsType.class.getName());
      }
      // Use PermissionsType.newBuilder() to construct.
      private PermissionsType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private PermissionsType() {
        permission_ = java.util.Collections.emptyList();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_logging.v4.ConfigurationComplexTypeOuterClass.internal_static_event_logging_v4_ConfigurationComplexType_PermissionsType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_logging.v4.ConfigurationComplexTypeOuterClass.internal_static_event_logging_v4_ConfigurationComplexType_PermissionsType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.class, event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.Builder.class);
      }

      public interface PermissionTypeOrBuilder extends
          // @@protoc_insertion_point(interface_extends:event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * A user that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.UserComplexType user = 1 [(.buf.validate.field) = { ... }</code>
         * @return Whether the user field is set.
         */
        boolean hasUser();
        /**
         * <pre>
         * A user that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.UserComplexType user = 1 [(.buf.validate.field) = { ... }</code>
         * @return The user.
         */
        event_logging.v4.UserComplexTypeOuterClass.UserComplexType getUser();
        /**
         * <pre>
         * A user that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.UserComplexType user = 1 [(.buf.validate.field) = { ... }</code>
         */
        event_logging.v4.UserComplexTypeOuterClass.UserComplexTypeOrBuilder getUserOrBuilder();

        /**
         * <pre>
         * A named group of users that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.GroupComplexType group = 2 [(.buf.validate.field) = { ... }</code>
         * @return Whether the group field is set.
         */
        boolean hasGroup();
        /**
         * <pre>
         * A named group of users that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.GroupComplexType group = 2 [(.buf.validate.field) = { ... }</code>
         * @return The group.
         */
        event_logging.v4.UserComplexTypeOuterClass.GroupComplexType getGroup();
        /**
         * <pre>
         * A named group of users that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.GroupComplexType group = 2 [(.buf.validate.field) = { ... }</code>
         */
        event_logging.v4.UserComplexTypeOuterClass.GroupComplexTypeOrBuilder getGroupOrBuilder();

        /**
         * <pre>
         * The permission attributes that have been explicitly allowed.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [(.buf.validate.field) = { ... }</code>
         * @return A list containing the allow.
         */
        java.util.List<event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType> getAllowList();
        /**
         * <pre>
         * The permission attributes that have been explicitly allowed.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [(.buf.validate.field) = { ... }</code>
         * @return The count of allow.
         */
        int getAllowCount();
        /**
         * <pre>
         * The permission attributes that have been explicitly allowed.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [(.buf.validate.field) = { ... }</code>
         * @param index The index of the element to return.
         * @return The allow at the given index.
         */
        event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType getAllow(int index);
        /**
         * <pre>
         * The permission attributes that have been explicitly allowed.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [(.buf.validate.field) = { ... }</code>
         * @return A list containing the enum numeric values on the wire for allow.
         */
        java.util.List<java.lang.Integer>
        getAllowValueList();
        /**
         * <pre>
         * The permission attributes that have been explicitly allowed.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [(.buf.validate.field) = { ... }</code>
         * @param index The index of the value to return.
         * @return The enum numeric value on the wire of allow at the given index.
         */
        int getAllowValue(int index);

        /**
         * <pre>
         * The permission attributes that have been explicitly denied.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [(.buf.validate.field) = { ... }</code>
         * @return A list containing the deny.
         */
        java.util.List<event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType> getDenyList();
        /**
         * <pre>
         * The permission attributes that have been explicitly denied.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [(.buf.validate.field) = { ... }</code>
         * @return The count of deny.
         */
        int getDenyCount();
        /**
         * <pre>
         * The permission attributes that have been explicitly denied.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [(.buf.validate.field) = { ... }</code>
         * @param index The index of the element to return.
         * @return The deny at the given index.
         */
        event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType getDeny(int index);
        /**
         * <pre>
         * The permission attributes that have been explicitly denied.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [(.buf.validate.field) = { ... }</code>
         * @return A list containing the enum numeric values on the wire for deny.
         */
        java.util.List<java.lang.Integer>
        getDenyValueList();
        /**
         * <pre>
         * The permission attributes that have been explicitly denied.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [(.buf.validate.field) = { ... }</code>
         * @param index The index of the value to return.
         * @return The enum numeric value on the wire of deny at the given index.
         */
        int getDenyValue(int index);
      }
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * Protobuf type {@code event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType}
       */
      public static final class PermissionType extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType)
          PermissionTypeOrBuilder {
      private static final long serialVersionUID = 0L;
        static {
          com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
            com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
            /* major= */ 4,
            /* minor= */ 26,
            /* patch= */ 1,
            /* suffix= */ "",
            PermissionType.class.getName());
        }
        // Use PermissionType.newBuilder() to construct.
        private PermissionType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
        }
        private PermissionType() {
          allow_ = java.util.Collections.emptyList();
          deny_ = java.util.Collections.emptyList();
        }

        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return event_logging.v4.ConfigurationComplexTypeOuterClass.internal_static_event_logging_v4_ConfigurationComplexType_PermissionsType_PermissionType_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return event_logging.v4.ConfigurationComplexTypeOuterClass.internal_static_event_logging_v4_ConfigurationComplexType_PermissionsType_PermissionType_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType.class, event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType.Builder.class);
        }

        private int bitField0_;
        public static final int USER_FIELD_NUMBER = 1;
        private event_logging.v4.UserComplexTypeOuterClass.UserComplexType user_;
        /**
         * <pre>
         * A user that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.UserComplexType user = 1 [(.buf.validate.field) = { ... }</code>
         * @return Whether the user field is set.
         */
        @java.lang.Override
        public boolean hasUser() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * A user that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.UserComplexType user = 1 [(.buf.validate.field) = { ... }</code>
         * @return The user.
         */
        @java.lang.Override
        public event_logging.v4.UserComplexTypeOuterClass.UserComplexType getUser() {
          return user_ == null ? event_logging.v4.UserComplexTypeOuterClass.UserComplexType.getDefaultInstance() : user_;
        }
        /**
         * <pre>
         * A user that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.UserComplexType user = 1 [(.buf.validate.field) = { ... }</code>
         */
        @java.lang.Override
        public event_logging.v4.UserComplexTypeOuterClass.UserComplexTypeOrBuilder getUserOrBuilder() {
          return user_ == null ? event_logging.v4.UserComplexTypeOuterClass.UserComplexType.getDefaultInstance() : user_;
        }

        public static final int GROUP_FIELD_NUMBER = 2;
        private event_logging.v4.UserComplexTypeOuterClass.GroupComplexType group_;
        /**
         * <pre>
         * A named group of users that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.GroupComplexType group = 2 [(.buf.validate.field) = { ... }</code>
         * @return Whether the group field is set.
         */
        @java.lang.Override
        public boolean hasGroup() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * A named group of users that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.GroupComplexType group = 2 [(.buf.validate.field) = { ... }</code>
         * @return The group.
         */
        @java.lang.Override
        public event_logging.v4.UserComplexTypeOuterClass.GroupComplexType getGroup() {
          return group_ == null ? event_logging.v4.UserComplexTypeOuterClass.GroupComplexType.getDefaultInstance() : group_;
        }
        /**
         * <pre>
         * A named group of users that has been granted (or is prevented from having) some form of permission.
         * </pre>
         *
         * <code>.event_logging.v4.GroupComplexType group = 2 [(.buf.validate.field) = { ... }</code>
         */
        @java.lang.Override
        public event_logging.v4.UserComplexTypeOuterClass.GroupComplexTypeOrBuilder getGroupOrBuilder() {
          return group_ == null ? event_logging.v4.UserComplexTypeOuterClass.GroupComplexType.getDefaultInstance() : group_;
        }

        public static final int ALLOW_FIELD_NUMBER = 11;
        @SuppressWarnings("serial")
        private java.util.List<java.lang.Integer> allow_;
        private static final com.google.protobuf.Internal.ListAdapter.Converter<
            java.lang.Integer, event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType> allow_converter_ =
                new com.google.protobuf.Internal.ListAdapter.Converter<
                    java.lang.Integer, event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType>() {
                  public event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType convert(java.lang.Integer from) {
                    event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType result = event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType.forNumber(from);
                    return result == null ? event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType.UNRECOGNIZED : result;
                  }
                };
        /**
         * <pre>
         * The permission attributes that have been explicitly allowed.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [(.buf.validate.field) = { ... }</code>
         * @return A list containing the allow.
         */
        @java.lang.Override
        public java.util.List<event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType> getAllowList() {
          return new com.google.protobuf.Internal.ListAdapter<
              java.lang.Integer, event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType>(allow_, allow_converter_);
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly allowed.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [(.buf.validate.field) = { ... }</code>
         * @return The count of allow.
         */
        @java.lang.Override
        public int getAllowCount() {
          return allow_.size();
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly allowed.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [(.buf.validate.field) = { ... }</code>
         * @param index The index of the element to return.
         * @return The allow at the given index.
         */
        @java.lang.Override
        public event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType getAllow(int index) {
          return allow_converter_.convert(allow_.get(index));
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly allowed.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [(.buf.validate.field) = { ... }</code>
         * @return A list containing the enum numeric values on the wire for allow.
         */
        @java.lang.Override
        public java.util.List<java.lang.Integer>
        getAllowValueList() {
          return allow_;
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly allowed.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [(.buf.validate.field) = { ... }</code>
         * @param index The index of the value to return.
         * @return The enum numeric value on the wire of allow at the given index.
         */
        @java.lang.Override
        public int getAllowValue(int index) {
          return allow_.get(index);
        }
        private int allowMemoizedSerializedSize;

        public static final int DENY_FIELD_NUMBER = 12;
        @SuppressWarnings("serial")
        private java.util.List<java.lang.Integer> deny_;
        private static final com.google.protobuf.Internal.ListAdapter.Converter<
            java.lang.Integer, event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType> deny_converter_ =
                new com.google.protobuf.Internal.ListAdapter.Converter<
                    java.lang.Integer, event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType>() {
                  public event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType convert(java.lang.Integer from) {
                    event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType result = event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType.forNumber(from);
                    return result == null ? event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType.UNRECOGNIZED : result;
                  }
                };
        /**
         * <pre>
         * The permission attributes that have been explicitly denied.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [(.buf.validate.field) = { ... }</code>
         * @return A list containing the deny.
         */
        @java.lang.Override
        public java.util.List<event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType> getDenyList() {
          return new com.google.protobuf.Internal.ListAdapter<
              java.lang.Integer, event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType>(deny_, deny_converter_);
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly denied.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [(.buf.validate.field) = { ... }</code>
         * @return The count of deny.
         */
        @java.lang.Override
        public int getDenyCount() {
          return deny_.size();
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly denied.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [(.buf.validate.field) = { ... }</code>
         * @param index The index of the element to return.
         * @return The deny at the given index.
         */
        @java.lang.Override
        public event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType getDeny(int index) {
          return deny_converter_.convert(deny_.get(index));
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly denied.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [(.buf.validate.field) = { ... }</code>
         * @return A list containing the enum numeric values on the wire for deny.
         */
        @java.lang.Override
        public java.util.List<java.lang.Integer>
        getDenyValueList() {
          return deny_;
        }
        /**
         * <pre>
         * The permission attributes that have been explicitly denied.
         * </pre>
         *
         * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [(.buf.validate.field) = { ... }</code>
         * @param index The index of the value to return.
         * @return The enum numeric value on the wire of deny at the given index.
         */
        @java.lang.Override
        public int getDenyValue(int index) {
          return deny_.get(index);
        }
        private int denyMemoizedSerializedSize;

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeMessage(1, getUser());
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeMessage(2, getGroup());
          }
          if (getAllowList().size() > 0) {
            output.writeUInt32NoTag(90);
            output.writeUInt32NoTag(allowMemoizedSerializedSize);
          }
          for (int i = 0; i < allow_.size(); i++) {
            output.writeEnumNoTag(allow_.get(i));
          }
          if (getDenyList().size() > 0) {
            output.writeUInt32NoTag(98);
            output.writeUInt32NoTag(denyMemoizedSerializedSize);
          }
          for (int i = 0; i < deny_.size(); i++) {
            output.writeEnumNoTag(deny_.get(i));
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, getUser());
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, getGroup());
          }
          {
            int dataSize = 0;
            for (int i = 0; i < allow_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeEnumSizeNoTag(allow_.get(i));
            }
            size += dataSize;
            if (!getAllowList().isEmpty()) {  size += 1;
              size += com.google.protobuf.CodedOutputStream
                .computeUInt32SizeNoTag(dataSize);
            }allowMemoizedSerializedSize = dataSize;
          }
          {
            int dataSize = 0;
            for (int i = 0; i < deny_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeEnumSizeNoTag(deny_.get(i));
            }
            size += dataSize;
            if (!getDenyList().isEmpty()) {  size += 1;
              size += com.google.protobuf.CodedOutputStream
                .computeUInt32SizeNoTag(dataSize);
            }denyMemoizedSerializedSize = dataSize;
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType)) {
            return super.equals(obj);
          }
          event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType other = (event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType) obj;

          if (hasUser() != other.hasUser()) return false;
          if (hasUser()) {
            if (!getUser()
                .equals(other.getUser())) return false;
          }
          if (hasGroup() != other.hasGroup()) return false;
          if (hasGroup()) {
            if (!getGroup()
                .equals(other.getGroup())) return false;
          }
          if (!allow_.equals(other.allow_)) return false;
          if (!deny_.equals(other.deny_)) return false;
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasUser()) {
            hash = (37 * hash) + USER_FIELD_NUMBER;
            hash = (53 * hash) + getUser().hashCode();
          }
          if (hasGroup()) {
            hash = (37 * hash) + GROUP_FIELD_NUMBER;
            hash = (53 * hash) + getGroup().hashCode();
          }
          if (getAllowCount() > 0) {
            hash = (37 * hash) + ALLOW_FIELD_NUMBER;
            hash = (53 * hash) + allow_.hashCode();
          }
          if (getDenyCount() > 0) {
            hash = (37 * hash) + DENY_FIELD_NUMBER;
            hash = (53 * hash) + deny_.hashCode();
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input);
        }
        public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseDelimitedWithIOException(PARSER, input);
        }

        public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input);
        }
        public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * A permission rule associated with an object, e.g. read and write access being granted to a user.
         * </pre>
         *
         * Protobuf type {@code event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType)
            event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionTypeOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return event_logging.v4.ConfigurationComplexTypeOuterClass.internal_static_event_logging_v4_ConfigurationComplexType_PermissionsType_PermissionType_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return event_logging.v4.ConfigurationComplexTypeOuterClass.internal_static_event_logging_v4_ConfigurationComplexType_PermissionsType_PermissionType_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType.class, event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType.Builder.class);
          }

          // Construct using event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage
                    .alwaysUseFieldBuilders) {
              getUserFieldBuilder();
              getGroupFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            user_ = null;
            if (userBuilder_ != null) {
              userBuilder_.dispose();
              userBuilder_ = null;
            }
            group_ = null;
            if (groupBuilder_ != null) {
              groupBuilder_.dispose();
              groupBuilder_ = null;
            }
            allow_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            deny_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return event_logging.v4.ConfigurationComplexTypeOuterClass.internal_static_event_logging_v4_ConfigurationComplexType_PermissionsType_PermissionType_descriptor;
          }

          @java.lang.Override
          public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType getDefaultInstanceForType() {
            return event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType.getDefaultInstance();
          }

          @java.lang.Override
          public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType build() {
            event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType buildPartial() {
            event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType result = new event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType(this);
            buildPartialRepeatedFields(result);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartialRepeatedFields(event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType result) {
            if (((bitField0_ & 0x00000004) != 0)) {
              allow_ = java.util.Collections.unmodifiableList(allow_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.allow_ = allow_;
            if (((bitField0_ & 0x00000008) != 0)) {
              deny_ = java.util.Collections.unmodifiableList(deny_);
              bitField0_ = (bitField0_ & ~0x00000008);
            }
            result.deny_ = deny_;
          }

          private void buildPartial0(event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType result) {
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.user_ = userBuilder_ == null
                  ? user_
                  : userBuilder_.build();
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.group_ = groupBuilder_ == null
                  ? group_
                  : groupBuilder_.build();
              to_bitField0_ |= 0x00000002;
            }
            result.bitField0_ |= to_bitField0_;
          }

          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType) {
              return mergeFrom((event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType other) {
            if (other == event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType.getDefaultInstance()) return this;
            if (other.hasUser()) {
              mergeUser(other.getUser());
            }
            if (other.hasGroup()) {
              mergeGroup(other.getGroup());
            }
            if (!other.allow_.isEmpty()) {
              if (allow_.isEmpty()) {
                allow_ = other.allow_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureAllowIsMutable();
                allow_.addAll(other.allow_);
              }
              onChanged();
            }
            if (!other.deny_.isEmpty()) {
              if (deny_.isEmpty()) {
                deny_ = other.deny_;
                bitField0_ = (bitField0_ & ~0x00000008);
              } else {
                ensureDenyIsMutable();
                deny_.addAll(other.deny_);
              }
              onChanged();
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 10: {
                    input.readMessage(
                        getUserFieldBuilder().getBuilder(),
                        extensionRegistry);
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 10
                  case 18: {
                    input.readMessage(
                        getGroupFieldBuilder().getBuilder(),
                        extensionRegistry);
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 18
                  case 88: {
                    int tmpRaw = input.readEnum();
                    ensureAllowIsMutable();
                    allow_.add(tmpRaw);
                    break;
                  } // case 88
                  case 90: {
                    int length = input.readRawVarint32();
                    int oldLimit = input.pushLimit(length);
                    while(input.getBytesUntilLimit() > 0) {
                      int tmpRaw = input.readEnum();
                      ensureAllowIsMutable();
                      allow_.add(tmpRaw);
                    }
                    input.popLimit(oldLimit);
                    break;
                  } // case 90
                  case 96: {
                    int tmpRaw = input.readEnum();
                    ensureDenyIsMutable();
                    deny_.add(tmpRaw);
                    break;
                  } // case 96
                  case 98: {
                    int length = input.readRawVarint32();
                    int oldLimit = input.pushLimit(length);
                    while(input.getBytesUntilLimit() > 0) {
                      int tmpRaw = input.readEnum();
                      ensureDenyIsMutable();
                      deny_.add(tmpRaw);
                    }
                    input.popLimit(oldLimit);
                    break;
                  } // case 98
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private event_logging.v4.UserComplexTypeOuterClass.UserComplexType user_;
          private com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.UserComplexTypeOuterClass.UserComplexType, event_logging.v4.UserComplexTypeOuterClass.UserComplexType.Builder, event_logging.v4.UserComplexTypeOuterClass.UserComplexTypeOrBuilder> userBuilder_;
          /**
           * <pre>
           * A user that has been granted (or is prevented from having) some form of permission.
           * </pre>
           *
           * <code>.event_logging.v4.UserComplexType user = 1 [(.buf.validate.field) = { ... }</code>
           * @return Whether the user field is set.
           */
          public boolean hasUser() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <pre>
           * A user that has been granted (or is prevented from having) some form of permission.
           * </pre>
           *
           * <code>.event_logging.v4.UserComplexType user = 1 [(.buf.validate.field) = { ... }</code>
           * @return The user.
           */
          public event_logging.v4.UserComplexTypeOuterClass.UserComplexType getUser() {
            if (userBuilder_ == null) {
              return user_ == null ? event_logging.v4.UserComplexTypeOuterClass.UserComplexType.getDefaultInstance() : user_;
            } else {
              return userBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * A user that has been granted (or is prevented from having) some form of permission.
           * </pre>
           *
           * <code>.event_logging.v4.UserComplexType user = 1 [(.buf.validate.field) = { ... }</code>
           */
          public Builder setUser(event_logging.v4.UserComplexTypeOuterClass.UserComplexType value) {
            if (userBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              user_ = value;
            } else {
              userBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A user that has been granted (or is prevented from having) some form of permission.
           * </pre>
           *
           * <code>.event_logging.v4.UserComplexType user = 1 [(.buf.validate.field) = { ... }</code>
           */
          public Builder setUser(
              event_logging.v4.UserComplexTypeOuterClass.UserComplexType.Builder builderForValue) {
            if (userBuilder_ == null) {
              user_ = builderForValue.build();
            } else {
              userBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A user that has been granted (or is prevented from having) some form of permission.
           * </pre>
           *
           * <code>.event_logging.v4.UserComplexType user = 1 [(.buf.validate.field) = { ... }</code>
           */
          public Builder mergeUser(event_logging.v4.UserComplexTypeOuterClass.UserComplexType value) {
            if (userBuilder_ == null) {
              if (((bitField0_ & 0x00000001) != 0) &&
                user_ != null &&
                user_ != event_logging.v4.UserComplexTypeOuterClass.UserComplexType.getDefaultInstance()) {
                getUserBuilder().mergeFrom(value);
              } else {
                user_ = value;
              }
            } else {
              userBuilder_.mergeFrom(value);
            }
            if (user_ != null) {
              bitField0_ |= 0x00000001;
              onChanged();
            }
            return this;
          }
          /**
           * <pre>
           * A user that has been granted (or is prevented from having) some form of permission.
           * </pre>
           *
           * <code>.event_logging.v4.UserComplexType user = 1 [(.buf.validate.field) = { ... }</code>
           */
          public Builder clearUser() {
            bitField0_ = (bitField0_ & ~0x00000001);
            user_ = null;
            if (userBuilder_ != null) {
              userBuilder_.dispose();
              userBuilder_ = null;
            }
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A user that has been granted (or is prevented from having) some form of permission.
           * </pre>
           *
           * <code>.event_logging.v4.UserComplexType user = 1 [(.buf.validate.field) = { ... }</code>
           */
          public event_logging.v4.UserComplexTypeOuterClass.UserComplexType.Builder getUserBuilder() {
            bitField0_ |= 0x00000001;
            onChanged();
            return getUserFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * A user that has been granted (or is prevented from having) some form of permission.
           * </pre>
           *
           * <code>.event_logging.v4.UserComplexType user = 1 [(.buf.validate.field) = { ... }</code>
           */
          public event_logging.v4.UserComplexTypeOuterClass.UserComplexTypeOrBuilder getUserOrBuilder() {
            if (userBuilder_ != null) {
              return userBuilder_.getMessageOrBuilder();
            } else {
              return user_ == null ?
                  event_logging.v4.UserComplexTypeOuterClass.UserComplexType.getDefaultInstance() : user_;
            }
          }
          /**
           * <pre>
           * A user that has been granted (or is prevented from having) some form of permission.
           * </pre>
           *
           * <code>.event_logging.v4.UserComplexType user = 1 [(.buf.validate.field) = { ... }</code>
           */
          private com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.UserComplexTypeOuterClass.UserComplexType, event_logging.v4.UserComplexTypeOuterClass.UserComplexType.Builder, event_logging.v4.UserComplexTypeOuterClass.UserComplexTypeOrBuilder> 
              getUserFieldBuilder() {
            if (userBuilder_ == null) {
              userBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  event_logging.v4.UserComplexTypeOuterClass.UserComplexType, event_logging.v4.UserComplexTypeOuterClass.UserComplexType.Builder, event_logging.v4.UserComplexTypeOuterClass.UserComplexTypeOrBuilder>(
                      getUser(),
                      getParentForChildren(),
                      isClean());
              user_ = null;
            }
            return userBuilder_;
          }

          private event_logging.v4.UserComplexTypeOuterClass.GroupComplexType group_;
          private com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.UserComplexTypeOuterClass.GroupComplexType, event_logging.v4.UserComplexTypeOuterClass.GroupComplexType.Builder, event_logging.v4.UserComplexTypeOuterClass.GroupComplexTypeOrBuilder> groupBuilder_;
          /**
           * <pre>
           * A named group of users that has been granted (or is prevented from having) some form of permission.
           * </pre>
           *
           * <code>.event_logging.v4.GroupComplexType group = 2 [(.buf.validate.field) = { ... }</code>
           * @return Whether the group field is set.
           */
          public boolean hasGroup() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <pre>
           * A named group of users that has been granted (or is prevented from having) some form of permission.
           * </pre>
           *
           * <code>.event_logging.v4.GroupComplexType group = 2 [(.buf.validate.field) = { ... }</code>
           * @return The group.
           */
          public event_logging.v4.UserComplexTypeOuterClass.GroupComplexType getGroup() {
            if (groupBuilder_ == null) {
              return group_ == null ? event_logging.v4.UserComplexTypeOuterClass.GroupComplexType.getDefaultInstance() : group_;
            } else {
              return groupBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * A named group of users that has been granted (or is prevented from having) some form of permission.
           * </pre>
           *
           * <code>.event_logging.v4.GroupComplexType group = 2 [(.buf.validate.field) = { ... }</code>
           */
          public Builder setGroup(event_logging.v4.UserComplexTypeOuterClass.GroupComplexType value) {
            if (groupBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              group_ = value;
            } else {
              groupBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A named group of users that has been granted (or is prevented from having) some form of permission.
           * </pre>
           *
           * <code>.event_logging.v4.GroupComplexType group = 2 [(.buf.validate.field) = { ... }</code>
           */
          public Builder setGroup(
              event_logging.v4.UserComplexTypeOuterClass.GroupComplexType.Builder builderForValue) {
            if (groupBuilder_ == null) {
              group_ = builderForValue.build();
            } else {
              groupBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A named group of users that has been granted (or is prevented from having) some form of permission.
           * </pre>
           *
           * <code>.event_logging.v4.GroupComplexType group = 2 [(.buf.validate.field) = { ... }</code>
           */
          public Builder mergeGroup(event_logging.v4.UserComplexTypeOuterClass.GroupComplexType value) {
            if (groupBuilder_ == null) {
              if (((bitField0_ & 0x00000002) != 0) &&
                group_ != null &&
                group_ != event_logging.v4.UserComplexTypeOuterClass.GroupComplexType.getDefaultInstance()) {
                getGroupBuilder().mergeFrom(value);
              } else {
                group_ = value;
              }
            } else {
              groupBuilder_.mergeFrom(value);
            }
            if (group_ != null) {
              bitField0_ |= 0x00000002;
              onChanged();
            }
            return this;
          }
          /**
           * <pre>
           * A named group of users that has been granted (or is prevented from having) some form of permission.
           * </pre>
           *
           * <code>.event_logging.v4.GroupComplexType group = 2 [(.buf.validate.field) = { ... }</code>
           */
          public Builder clearGroup() {
            bitField0_ = (bitField0_ & ~0x00000002);
            group_ = null;
            if (groupBuilder_ != null) {
              groupBuilder_.dispose();
              groupBuilder_ = null;
            }
            onChanged();
            return this;
          }
          /**
           * <pre>
           * A named group of users that has been granted (or is prevented from having) some form of permission.
           * </pre>
           *
           * <code>.event_logging.v4.GroupComplexType group = 2 [(.buf.validate.field) = { ... }</code>
           */
          public event_logging.v4.UserComplexTypeOuterClass.GroupComplexType.Builder getGroupBuilder() {
            bitField0_ |= 0x00000002;
            onChanged();
            return getGroupFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * A named group of users that has been granted (or is prevented from having) some form of permission.
           * </pre>
           *
           * <code>.event_logging.v4.GroupComplexType group = 2 [(.buf.validate.field) = { ... }</code>
           */
          public event_logging.v4.UserComplexTypeOuterClass.GroupComplexTypeOrBuilder getGroupOrBuilder() {
            if (groupBuilder_ != null) {
              return groupBuilder_.getMessageOrBuilder();
            } else {
              return group_ == null ?
                  event_logging.v4.UserComplexTypeOuterClass.GroupComplexType.getDefaultInstance() : group_;
            }
          }
          /**
           * <pre>
           * A named group of users that has been granted (or is prevented from having) some form of permission.
           * </pre>
           *
           * <code>.event_logging.v4.GroupComplexType group = 2 [(.buf.validate.field) = { ... }</code>
           */
          private com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.UserComplexTypeOuterClass.GroupComplexType, event_logging.v4.UserComplexTypeOuterClass.GroupComplexType.Builder, event_logging.v4.UserComplexTypeOuterClass.GroupComplexTypeOrBuilder> 
              getGroupFieldBuilder() {
            if (groupBuilder_ == null) {
              groupBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  event_logging.v4.UserComplexTypeOuterClass.GroupComplexType, event_logging.v4.UserComplexTypeOuterClass.GroupComplexType.Builder, event_logging.v4.UserComplexTypeOuterClass.GroupComplexTypeOrBuilder>(
                      getGroup(),
                      getParentForChildren(),
                      isClean());
              group_ = null;
            }
            return groupBuilder_;
          }

          private java.util.List<java.lang.Integer> allow_ =
            java.util.Collections.emptyList();
          private void ensureAllowIsMutable() {
            if (!((bitField0_ & 0x00000004) != 0)) {
              allow_ = new java.util.ArrayList<java.lang.Integer>(allow_);
              bitField0_ |= 0x00000004;
            }
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly allowed.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [(.buf.validate.field) = { ... }</code>
           * @return A list containing the allow.
           */
          public java.util.List<event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType> getAllowList() {
            return new com.google.protobuf.Internal.ListAdapter<
                java.lang.Integer, event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType>(allow_, allow_converter_);
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly allowed.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [(.buf.validate.field) = { ... }</code>
           * @return The count of allow.
           */
          public int getAllowCount() {
            return allow_.size();
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly allowed.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [(.buf.validate.field) = { ... }</code>
           * @param index The index of the element to return.
           * @return The allow at the given index.
           */
          public event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType getAllow(int index) {
            return allow_converter_.convert(allow_.get(index));
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly allowed.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [(.buf.validate.field) = { ... }</code>
           * @param index The index to set the value at.
           * @param value The allow to set.
           * @return This builder for chaining.
           */
          public Builder setAllow(
              int index, event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType value) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAllowIsMutable();
            allow_.set(index, value.getNumber());
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly allowed.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [(.buf.validate.field) = { ... }</code>
           * @param value The allow to add.
           * @return This builder for chaining.
           */
          public Builder addAllow(event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType value) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAllowIsMutable();
            allow_.add(value.getNumber());
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly allowed.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [(.buf.validate.field) = { ... }</code>
           * @param values The allow to add.
           * @return This builder for chaining.
           */
          public Builder addAllAllow(
              java.lang.Iterable<? extends event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType> values) {
            ensureAllowIsMutable();
            for (event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType value : values) {
              allow_.add(value.getNumber());
            }
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly allowed.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [(.buf.validate.field) = { ... }</code>
           * @return This builder for chaining.
           */
          public Builder clearAllow() {
            allow_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly allowed.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [(.buf.validate.field) = { ... }</code>
           * @return A list containing the enum numeric values on the wire for allow.
           */
          public java.util.List<java.lang.Integer>
          getAllowValueList() {
            return java.util.Collections.unmodifiableList(allow_);
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly allowed.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [(.buf.validate.field) = { ... }</code>
           * @param index The index of the value to return.
           * @return The enum numeric value on the wire of allow at the given index.
           */
          public int getAllowValue(int index) {
            return allow_.get(index);
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly allowed.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [(.buf.validate.field) = { ... }</code>
           * @param index The index to set the value at.
           * @param value The enum numeric value on the wire for allow to set.
           * @return This builder for chaining.
           */
          public Builder setAllowValue(
              int index, int value) {
            ensureAllowIsMutable();
            allow_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly allowed.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [(.buf.validate.field) = { ... }</code>
           * @param value The enum numeric value on the wire for allow to add.
           * @return This builder for chaining.
           */
          public Builder addAllowValue(int value) {
            ensureAllowIsMutable();
            allow_.add(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly allowed.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType allow = 11 [(.buf.validate.field) = { ... }</code>
           * @param values The enum numeric values on the wire for allow to add.
           * @return This builder for chaining.
           */
          public Builder addAllAllowValue(
              java.lang.Iterable<java.lang.Integer> values) {
            ensureAllowIsMutable();
            for (int value : values) {
              allow_.add(value);
            }
            onChanged();
            return this;
          }

          private java.util.List<java.lang.Integer> deny_ =
            java.util.Collections.emptyList();
          private void ensureDenyIsMutable() {
            if (!((bitField0_ & 0x00000008) != 0)) {
              deny_ = new java.util.ArrayList<java.lang.Integer>(deny_);
              bitField0_ |= 0x00000008;
            }
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly denied.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [(.buf.validate.field) = { ... }</code>
           * @return A list containing the deny.
           */
          public java.util.List<event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType> getDenyList() {
            return new com.google.protobuf.Internal.ListAdapter<
                java.lang.Integer, event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType>(deny_, deny_converter_);
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly denied.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [(.buf.validate.field) = { ... }</code>
           * @return The count of deny.
           */
          public int getDenyCount() {
            return deny_.size();
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly denied.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [(.buf.validate.field) = { ... }</code>
           * @param index The index of the element to return.
           * @return The deny at the given index.
           */
          public event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType getDeny(int index) {
            return deny_converter_.convert(deny_.get(index));
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly denied.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [(.buf.validate.field) = { ... }</code>
           * @param index The index to set the value at.
           * @param value The deny to set.
           * @return This builder for chaining.
           */
          public Builder setDeny(
              int index, event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType value) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDenyIsMutable();
            deny_.set(index, value.getNumber());
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly denied.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [(.buf.validate.field) = { ... }</code>
           * @param value The deny to add.
           * @return This builder for chaining.
           */
          public Builder addDeny(event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType value) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDenyIsMutable();
            deny_.add(value.getNumber());
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly denied.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [(.buf.validate.field) = { ... }</code>
           * @param values The deny to add.
           * @return This builder for chaining.
           */
          public Builder addAllDeny(
              java.lang.Iterable<? extends event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType> values) {
            ensureDenyIsMutable();
            for (event_logging.v4.PermissionAttributeSimpleTypeOuterClass.PermissionAttributeSimpleType value : values) {
              deny_.add(value.getNumber());
            }
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly denied.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [(.buf.validate.field) = { ... }</code>
           * @return This builder for chaining.
           */
          public Builder clearDeny() {
            deny_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly denied.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [(.buf.validate.field) = { ... }</code>
           * @return A list containing the enum numeric values on the wire for deny.
           */
          public java.util.List<java.lang.Integer>
          getDenyValueList() {
            return java.util.Collections.unmodifiableList(deny_);
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly denied.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [(.buf.validate.field) = { ... }</code>
           * @param index The index of the value to return.
           * @return The enum numeric value on the wire of deny at the given index.
           */
          public int getDenyValue(int index) {
            return deny_.get(index);
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly denied.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [(.buf.validate.field) = { ... }</code>
           * @param index The index to set the value at.
           * @param value The enum numeric value on the wire for deny to set.
           * @return This builder for chaining.
           */
          public Builder setDenyValue(
              int index, int value) {
            ensureDenyIsMutable();
            deny_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly denied.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [(.buf.validate.field) = { ... }</code>
           * @param value The enum numeric value on the wire for deny to add.
           * @return This builder for chaining.
           */
          public Builder addDenyValue(int value) {
            ensureDenyIsMutable();
            deny_.add(value);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * The permission attributes that have been explicitly denied.
           * </pre>
           *
           * <code>repeated .event_logging.v4.PermissionAttributeSimpleType deny = 12 [(.buf.validate.field) = { ... }</code>
           * @param values The enum numeric values on the wire for deny to add.
           * @return This builder for chaining.
           */
          public Builder addAllDenyValue(
              java.lang.Iterable<java.lang.Integer> values) {
            ensureDenyIsMutable();
            for (int value : values) {
              deny_.add(value);
            }
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType)
        }

        // @@protoc_insertion_point(class_scope:event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType)
        private static final event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType();
        }

        public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<PermissionType>
            PARSER = new com.google.protobuf.AbstractParser<PermissionType>() {
          @java.lang.Override
          public PermissionType parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<PermissionType> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<PermissionType> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public static final int PERMISSION_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private java.util.List<event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType> permission_;
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public java.util.List<event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType> getPermissionList() {
        return permission_;
      }
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public java.util.List<? extends event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionTypeOrBuilder> 
          getPermissionOrBuilderList() {
        return permission_;
      }
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public int getPermissionCount() {
        return permission_.size();
      }
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType getPermission(int index) {
        return permission_.get(index);
      }
      /**
       * <pre>
       * A permission rule associated with an object, e.g. read and write access being granted to a user.
       * </pre>
       *
       * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionTypeOrBuilder getPermissionOrBuilder(
          int index) {
        return permission_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < permission_.size(); i++) {
          output.writeMessage(1, permission_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < permission_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, permission_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType)) {
          return super.equals(obj);
        }
        event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType other = (event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType) obj;

        if (!getPermissionList()
            .equals(other.getPermissionList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getPermissionCount() > 0) {
          hash = (37 * hash) + PERMISSION_FIELD_NUMBER;
          hash = (53 * hash) + getPermissionList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
       * </pre>
       *
       * Protobuf type {@code event_logging.v4.ConfigurationComplexType.PermissionsType}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:event_logging.v4.ConfigurationComplexType.PermissionsType)
          event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsTypeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return event_logging.v4.ConfigurationComplexTypeOuterClass.internal_static_event_logging_v4_ConfigurationComplexType_PermissionsType_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return event_logging.v4.ConfigurationComplexTypeOuterClass.internal_static_event_logging_v4_ConfigurationComplexType_PermissionsType_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.class, event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.Builder.class);
        }

        // Construct using event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          if (permissionBuilder_ == null) {
            permission_ = java.util.Collections.emptyList();
          } else {
            permission_ = null;
            permissionBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return event_logging.v4.ConfigurationComplexTypeOuterClass.internal_static_event_logging_v4_ConfigurationComplexType_PermissionsType_descriptor;
        }

        @java.lang.Override
        public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType getDefaultInstanceForType() {
          return event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.getDefaultInstance();
        }

        @java.lang.Override
        public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType build() {
          event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType buildPartial() {
          event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType result = new event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType result) {
          if (permissionBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              permission_ = java.util.Collections.unmodifiableList(permission_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.permission_ = permission_;
          } else {
            result.permission_ = permissionBuilder_.build();
          }
        }

        private void buildPartial0(event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType result) {
          int from_bitField0_ = bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType) {
            return mergeFrom((event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType other) {
          if (other == event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.getDefaultInstance()) return this;
          if (permissionBuilder_ == null) {
            if (!other.permission_.isEmpty()) {
              if (permission_.isEmpty()) {
                permission_ = other.permission_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensurePermissionIsMutable();
                permission_.addAll(other.permission_);
              }
              onChanged();
            }
          } else {
            if (!other.permission_.isEmpty()) {
              if (permissionBuilder_.isEmpty()) {
                permissionBuilder_.dispose();
                permissionBuilder_ = null;
                permission_ = other.permission_;
                bitField0_ = (bitField0_ & ~0x00000001);
                permissionBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getPermissionFieldBuilder() : null;
              } else {
                permissionBuilder_.addAllMessages(other.permission_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType m =
                      input.readMessage(
                          event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType.parser(),
                          extensionRegistry);
                  if (permissionBuilder_ == null) {
                    ensurePermissionIsMutable();
                    permission_.add(m);
                  } else {
                    permissionBuilder_.addMessage(m);
                  }
                  break;
                } // case 10
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.util.List<event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType> permission_ =
          java.util.Collections.emptyList();
        private void ensurePermissionIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            permission_ = new java.util.ArrayList<event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType>(permission_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType, event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType.Builder, event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionTypeOrBuilder> permissionBuilder_;

        /**
         * <pre>
         * A permission rule associated with an object, e.g. read and write access being granted to a user.
         * </pre>
         *
         * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
         */
        public java.util.List<event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType> getPermissionList() {
          if (permissionBuilder_ == null) {
            return java.util.Collections.unmodifiableList(permission_);
          } else {
            return permissionBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * A permission rule associated with an object, e.g. read and write access being granted to a user.
         * </pre>
         *
         * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
         */
        public int getPermissionCount() {
          if (permissionBuilder_ == null) {
            return permission_.size();
          } else {
            return permissionBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * A permission rule associated with an object, e.g. read and write access being granted to a user.
         * </pre>
         *
         * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType getPermission(int index) {
          if (permissionBuilder_ == null) {
            return permission_.get(index);
          } else {
            return permissionBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * A permission rule associated with an object, e.g. read and write access being granted to a user.
         * </pre>
         *
         * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder setPermission(
            int index, event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType value) {
          if (permissionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePermissionIsMutable();
            permission_.set(index, value);
            onChanged();
          } else {
            permissionBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * A permission rule associated with an object, e.g. read and write access being granted to a user.
         * </pre>
         *
         * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder setPermission(
            int index, event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType.Builder builderForValue) {
          if (permissionBuilder_ == null) {
            ensurePermissionIsMutable();
            permission_.set(index, builderForValue.build());
            onChanged();
          } else {
            permissionBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * A permission rule associated with an object, e.g. read and write access being granted to a user.
         * </pre>
         *
         * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addPermission(event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType value) {
          if (permissionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePermissionIsMutable();
            permission_.add(value);
            onChanged();
          } else {
            permissionBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * A permission rule associated with an object, e.g. read and write access being granted to a user.
         * </pre>
         *
         * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addPermission(
            int index, event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType value) {
          if (permissionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePermissionIsMutable();
            permission_.add(index, value);
            onChanged();
          } else {
            permissionBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * A permission rule associated with an object, e.g. read and write access being granted to a user.
         * </pre>
         *
         * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addPermission(
            event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType.Builder builderForValue) {
          if (permissionBuilder_ == null) {
            ensurePermissionIsMutable();
            permission_.add(builderForValue.build());
            onChanged();
          } else {
            permissionBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * A permission rule associated with an object, e.g. read and write access being granted to a user.
         * </pre>
         *
         * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addPermission(
            int index, event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType.Builder builderForValue) {
          if (permissionBuilder_ == null) {
            ensurePermissionIsMutable();
            permission_.add(index, builderForValue.build());
            onChanged();
          } else {
            permissionBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * A permission rule associated with an object, e.g. read and write access being granted to a user.
         * </pre>
         *
         * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addAllPermission(
            java.lang.Iterable<? extends event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType> values) {
          if (permissionBuilder_ == null) {
            ensurePermissionIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, permission_);
            onChanged();
          } else {
            permissionBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * A permission rule associated with an object, e.g. read and write access being granted to a user.
         * </pre>
         *
         * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder clearPermission() {
          if (permissionBuilder_ == null) {
            permission_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            permissionBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * A permission rule associated with an object, e.g. read and write access being granted to a user.
         * </pre>
         *
         * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder removePermission(int index) {
          if (permissionBuilder_ == null) {
            ensurePermissionIsMutable();
            permission_.remove(index);
            onChanged();
          } else {
            permissionBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * A permission rule associated with an object, e.g. read and write access being granted to a user.
         * </pre>
         *
         * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType.Builder getPermissionBuilder(
            int index) {
          return getPermissionFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * A permission rule associated with an object, e.g. read and write access being granted to a user.
         * </pre>
         *
         * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionTypeOrBuilder getPermissionOrBuilder(
            int index) {
          if (permissionBuilder_ == null) {
            return permission_.get(index);  } else {
            return permissionBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * A permission rule associated with an object, e.g. read and write access being granted to a user.
         * </pre>
         *
         * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
         */
        public java.util.List<? extends event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionTypeOrBuilder> 
             getPermissionOrBuilderList() {
          if (permissionBuilder_ != null) {
            return permissionBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(permission_);
          }
        }
        /**
         * <pre>
         * A permission rule associated with an object, e.g. read and write access being granted to a user.
         * </pre>
         *
         * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType.Builder addPermissionBuilder() {
          return getPermissionFieldBuilder().addBuilder(
              event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType.getDefaultInstance());
        }
        /**
         * <pre>
         * A permission rule associated with an object, e.g. read and write access being granted to a user.
         * </pre>
         *
         * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType.Builder addPermissionBuilder(
            int index) {
          return getPermissionFieldBuilder().addBuilder(
              index, event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType.getDefaultInstance());
        }
        /**
         * <pre>
         * A permission rule associated with an object, e.g. read and write access being granted to a user.
         * </pre>
         *
         * <code>repeated .event_logging.v4.ConfigurationComplexType.PermissionsType.PermissionType permission = 1 [(.buf.validate.field) = { ... }</code>
         */
        public java.util.List<event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType.Builder> 
             getPermissionBuilderList() {
          return getPermissionFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType, event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType.Builder, event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionTypeOrBuilder> 
            getPermissionFieldBuilder() {
          if (permissionBuilder_ == null) {
            permissionBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType, event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionType.Builder, event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.PermissionTypeOrBuilder>(
                    permission_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            permission_ = null;
          }
          return permissionBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:event_logging.v4.ConfigurationComplexType.PermissionsType)
      }

      // @@protoc_insertion_point(class_scope:event_logging.v4.ConfigurationComplexType.PermissionsType)
      private static final event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType();
      }

      public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PermissionsType>
          PARSER = new com.google.protobuf.AbstractParser<PermissionsType>() {
        @java.lang.Override
        public PermissionsType parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<PermissionsType> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PermissionsType> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int META_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType> meta_;
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType> getMetaList() {
      return meta_;
    }
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<? extends event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder> 
        getMetaOrBuilderList() {
      return meta_;
    }
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public int getMetaCount() {
      return meta_.size();
    }
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType getMeta(int index) {
      return meta_.get(index);
    }
    /**
     * <pre>
     * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
     * </pre>
     *
     * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder getMetaOrBuilder(
        int index) {
      return meta_.get(index);
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object type_ = "";
    /**
     * <pre>
     * The type of the object in question and specific to the object type from the list above, e.g. a 'Resource' object may have a type such as 'image' or 'script'.
     * </pre>
     *
     * <code>string type = 2;</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The type of the object in question and specific to the object type from the list above, e.g. a 'Resource' object may have a type such as 'image' or 'script'.
     * </pre>
     *
     * <code>string type = 2;</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object id_ = "";
    /**
     * <pre>
     * An identifier for the object, e.g a document ID in a document management system. This ID is likely to be specific to the system that generated the event.
     * </pre>
     *
     * <code>string id = 3;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * An identifier for the object, e.g a document ID in a document management system. This ID is likely to be specific to the system that generated the event.
     * </pre>
     *
     * <code>string id = 3;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <pre>
     * The name of the object, e.g. a filename.
     * </pre>
     *
     * <code>string name = 4;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the object, e.g. a filename.
     * </pre>
     *
     * <code>string name = 4;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private volatile java.lang.Object description_ = "";
    /**
     * <pre>
     * Human readable description of what the object is.
     * </pre>
     *
     * <code>string description = 5;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Human readable description of what the object is.
     * </pre>
     *
     * <code>string description = 5;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLASSIFICATION_FIELD_NUMBER = 6;
    private event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType classification_;
    /**
     * <pre>
     * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 6;</code>
     * @return Whether the classification field is set.
     */
    @java.lang.Override
    public boolean hasClassification() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 6;</code>
     * @return The classification.
     */
    @java.lang.Override
    public event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType getClassification() {
      return classification_ == null ? event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType.getDefaultInstance() : classification_;
    }
    /**
     * <pre>
     * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
     * </pre>
     *
     * <code>.event_logging.v4.ClassificationComplexType classification = 6;</code>
     */
    @java.lang.Override
    public event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexTypeOrBuilder getClassificationOrBuilder() {
      return classification_ == null ? event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType.getDefaultInstance() : classification_;
    }

    public static final int STATE_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private volatile java.lang.Object state_ = "";
    /**
     * <pre>
     * Any state information about the object, e.g. 'Archived'.
     * </pre>
     *
     * <code>string state = 7;</code>
     * @return The state.
     */
    @java.lang.Override
    public java.lang.String getState() {
      java.lang.Object ref = state_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        state_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Any state information about the object, e.g. 'Archived'.
     * </pre>
     *
     * <code>string state = 7;</code>
     * @return The bytes for state.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStateBytes() {
      java.lang.Object ref = state_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        state_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GROUPS_FIELD_NUMBER = 8;
    private event_logging.v4.UserComplexTypeOuterClass.GroupsComplexType groups_;
    /**
     * <pre>
     * Any groups associated with the object, e.g. group membership of a user account.
     * </pre>
     *
     * <code>.event_logging.v4.GroupsComplexType groups = 8;</code>
     * @return Whether the groups field is set.
     */
    @java.lang.Override
    public boolean hasGroups() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Any groups associated with the object, e.g. group membership of a user account.
     * </pre>
     *
     * <code>.event_logging.v4.GroupsComplexType groups = 8;</code>
     * @return The groups.
     */
    @java.lang.Override
    public event_logging.v4.UserComplexTypeOuterClass.GroupsComplexType getGroups() {
      return groups_ == null ? event_logging.v4.UserComplexTypeOuterClass.GroupsComplexType.getDefaultInstance() : groups_;
    }
    /**
     * <pre>
     * Any groups associated with the object, e.g. group membership of a user account.
     * </pre>
     *
     * <code>.event_logging.v4.GroupsComplexType groups = 8;</code>
     */
    @java.lang.Override
    public event_logging.v4.UserComplexTypeOuterClass.GroupsComplexTypeOrBuilder getGroupsOrBuilder() {
      return groups_ == null ? event_logging.v4.UserComplexTypeOuterClass.GroupsComplexType.getDefaultInstance() : groups_;
    }

    public static final int PERMISSIONS_FIELD_NUMBER = 9;
    private event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType permissions_;
    /**
     * <pre>
     * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
     * </pre>
     *
     * <code>.event_logging.v4.ConfigurationComplexType.PermissionsType permissions = 9;</code>
     * @return Whether the permissions field is set.
     */
    @java.lang.Override
    public boolean hasPermissions() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
     * </pre>
     *
     * <code>.event_logging.v4.ConfigurationComplexType.PermissionsType permissions = 9;</code>
     * @return The permissions.
     */
    @java.lang.Override
    public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType getPermissions() {
      return permissions_ == null ? event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.getDefaultInstance() : permissions_;
    }
    /**
     * <pre>
     * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
     * </pre>
     *
     * <code>.event_logging.v4.ConfigurationComplexType.PermissionsType permissions = 9;</code>
     */
    @java.lang.Override
    public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsTypeOrBuilder getPermissionsOrBuilder() {
      return permissions_ == null ? event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.getDefaultInstance() : permissions_;
    }

    public static final int TAGS_FIELD_NUMBER = 10;
    private event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexType tags_;
    /**
     * <pre>
     * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
     * </pre>
     *
     * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10;</code>
     * @return Whether the tags field is set.
     */
    @java.lang.Override
    public boolean hasTags() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
     * </pre>
     *
     * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10;</code>
     * @return The tags.
     */
    @java.lang.Override
    public event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexType getTags() {
      return tags_ == null ? event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexType.getDefaultInstance() : tags_;
    }
    /**
     * <pre>
     * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
     * </pre>
     *
     * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10;</code>
     */
    @java.lang.Override
    public event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexTypeOrBuilder getTagsOrBuilder() {
      return tags_ == null ? event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexType.getDefaultInstance() : tags_;
    }

    public static final int DATA_FIELD_NUMBER = 11;
    @SuppressWarnings("serial")
    private java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> data_;
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> getDataList() {
      return data_;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
        getDataOrBuilderList() {
      return data_;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index) {
      return data_.get(index);
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
        int index) {
      return data_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < meta_.size(); i++) {
        output.writeMessage(1, meta_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(type_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, type_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, id_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, name_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(description_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 5, description_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(6, getClassification());
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(state_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 7, state_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(8, getGroups());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(9, getPermissions());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(10, getTags());
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeMessage(11, data_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < meta_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, meta_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(type_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, type_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, id_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, name_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(description_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(5, description_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getClassification());
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(state_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(7, state_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getGroups());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getPermissions());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getTags());
      }
      for (int i = 0; i < data_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, data_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType)) {
        return super.equals(obj);
      }
      event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType other = (event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType) obj;

      if (!getMetaList()
          .equals(other.getMetaList())) return false;
      if (!getType()
          .equals(other.getType())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (hasClassification() != other.hasClassification()) return false;
      if (hasClassification()) {
        if (!getClassification()
            .equals(other.getClassification())) return false;
      }
      if (!getState()
          .equals(other.getState())) return false;
      if (hasGroups() != other.hasGroups()) return false;
      if (hasGroups()) {
        if (!getGroups()
            .equals(other.getGroups())) return false;
      }
      if (hasPermissions() != other.hasPermissions()) return false;
      if (hasPermissions()) {
        if (!getPermissions()
            .equals(other.getPermissions())) return false;
      }
      if (hasTags() != other.hasTags()) return false;
      if (hasTags()) {
        if (!getTags()
            .equals(other.getTags())) return false;
      }
      if (!getDataList()
          .equals(other.getDataList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getMetaCount() > 0) {
        hash = (37 * hash) + META_FIELD_NUMBER;
        hash = (53 * hash) + getMetaList().hashCode();
      }
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      if (hasClassification()) {
        hash = (37 * hash) + CLASSIFICATION_FIELD_NUMBER;
        hash = (53 * hash) + getClassification().hashCode();
      }
      hash = (37 * hash) + STATE_FIELD_NUMBER;
      hash = (53 * hash) + getState().hashCode();
      if (hasGroups()) {
        hash = (37 * hash) + GROUPS_FIELD_NUMBER;
        hash = (53 * hash) + getGroups().hashCode();
      }
      if (hasPermissions()) {
        hash = (37 * hash) + PERMISSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getPermissions().hashCode();
      }
      if (hasTags()) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTags().hashCode();
      }
      if (getDataCount() > 0) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDataList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes the configuration of entity, e.g. it can be used to describe the update to the configuration of a network device.
     * </pre>
     *
     * Protobuf type {@code event_logging.v4.ConfigurationComplexType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_logging.v4.ConfigurationComplexType)
        event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_logging.v4.ConfigurationComplexTypeOuterClass.internal_static_event_logging_v4_ConfigurationComplexType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_logging.v4.ConfigurationComplexTypeOuterClass.internal_static_event_logging_v4_ConfigurationComplexType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.class, event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.Builder.class);
      }

      // Construct using event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getMetaFieldBuilder();
          getClassificationFieldBuilder();
          getGroupsFieldBuilder();
          getPermissionsFieldBuilder();
          getTagsFieldBuilder();
          getDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (metaBuilder_ == null) {
          meta_ = java.util.Collections.emptyList();
        } else {
          meta_ = null;
          metaBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = "";
        id_ = "";
        name_ = "";
        description_ = "";
        classification_ = null;
        if (classificationBuilder_ != null) {
          classificationBuilder_.dispose();
          classificationBuilder_ = null;
        }
        state_ = "";
        groups_ = null;
        if (groupsBuilder_ != null) {
          groupsBuilder_.dispose();
          groupsBuilder_ = null;
        }
        permissions_ = null;
        if (permissionsBuilder_ != null) {
          permissionsBuilder_.dispose();
          permissionsBuilder_ = null;
        }
        tags_ = null;
        if (tagsBuilder_ != null) {
          tagsBuilder_.dispose();
          tagsBuilder_ = null;
        }
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
        } else {
          data_ = null;
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return event_logging.v4.ConfigurationComplexTypeOuterClass.internal_static_event_logging_v4_ConfigurationComplexType_descriptor;
      }

      @java.lang.Override
      public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType getDefaultInstanceForType() {
        return event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.getDefaultInstance();
      }

      @java.lang.Override
      public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType build() {
        event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType buildPartial() {
        event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType result = new event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType result) {
        if (metaBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            meta_ = java.util.Collections.unmodifiableList(meta_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.meta_ = meta_;
        } else {
          result.meta_ = metaBuilder_.build();
        }
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000400) != 0)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
      }

      private void buildPartial0(event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.type_ = type_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.id_ = id_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.name_ = name_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.description_ = description_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.classification_ = classificationBuilder_ == null
              ? classification_
              : classificationBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.state_ = state_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.groups_ = groupsBuilder_ == null
              ? groups_
              : groupsBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.permissions_ = permissionsBuilder_ == null
              ? permissions_
              : permissionsBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.tags_ = tagsBuilder_ == null
              ? tags_
              : tagsBuilder_.build();
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType) {
          return mergeFrom((event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType other) {
        if (other == event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.getDefaultInstance()) return this;
        if (metaBuilder_ == null) {
          if (!other.meta_.isEmpty()) {
            if (meta_.isEmpty()) {
              meta_ = other.meta_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMetaIsMutable();
              meta_.addAll(other.meta_);
            }
            onChanged();
          }
        } else {
          if (!other.meta_.isEmpty()) {
            if (metaBuilder_.isEmpty()) {
              metaBuilder_.dispose();
              metaBuilder_ = null;
              meta_ = other.meta_;
              bitField0_ = (bitField0_ & ~0x00000001);
              metaBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMetaFieldBuilder() : null;
            } else {
              metaBuilder_.addAllMessages(other.meta_);
            }
          }
        }
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        if (other.hasClassification()) {
          mergeClassification(other.getClassification());
        }
        if (!other.getState().isEmpty()) {
          state_ = other.state_;
          bitField0_ |= 0x00000040;
          onChanged();
        }
        if (other.hasGroups()) {
          mergeGroups(other.getGroups());
        }
        if (other.hasPermissions()) {
          mergePermissions(other.getPermissions());
        }
        if (other.hasTags()) {
          mergeTags(other.getTags());
        }
        if (dataBuilder_ == null) {
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
        } else {
          if (!other.data_.isEmpty()) {
            if (dataBuilder_.isEmpty()) {
              dataBuilder_.dispose();
              dataBuilder_ = null;
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000400);
              dataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDataFieldBuilder() : null;
            } else {
              dataBuilder_.addAllMessages(other.data_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType m =
                    input.readMessage(
                        event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.parser(),
                        extensionRegistry);
                if (metaBuilder_ == null) {
                  ensureMetaIsMutable();
                  meta_.add(m);
                } else {
                  metaBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                type_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                id_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                description_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 50: {
                input.readMessage(
                    getClassificationFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              case 58: {
                state_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              case 66: {
                input.readMessage(
                    getGroupsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              case 74: {
                input.readMessage(
                    getPermissionsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000100;
                break;
              } // case 74
              case 82: {
                input.readMessage(
                    getTagsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000200;
                break;
              } // case 82
              case 90: {
                event_logging.v4.DataComplexTypeOuterClass.DataComplexType m =
                    input.readMessage(
                        event_logging.v4.DataComplexTypeOuterClass.DataComplexType.parser(),
                        extensionRegistry);
                if (dataBuilder_ == null) {
                  ensureDataIsMutable();
                  data_.add(m);
                } else {
                  dataBuilder_.addMessage(m);
                }
                break;
              } // case 90
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType> meta_ =
        java.util.Collections.emptyList();
      private void ensureMetaIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          meta_ = new java.util.ArrayList<event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType>(meta_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder> metaBuilder_;

      /**
       * <pre>
       * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType> getMetaList() {
        if (metaBuilder_ == null) {
          return java.util.Collections.unmodifiableList(meta_);
        } else {
          return metaBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      public int getMetaCount() {
        if (metaBuilder_ == null) {
          return meta_.size();
        } else {
          return metaBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType getMeta(int index) {
        if (metaBuilder_ == null) {
          return meta_.get(index);
        } else {
          return metaBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setMeta(
          int index, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType value) {
        if (metaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaIsMutable();
          meta_.set(index, value);
          onChanged();
        } else {
          metaBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setMeta(
          int index, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder builderForValue) {
        if (metaBuilder_ == null) {
          ensureMetaIsMutable();
          meta_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addMeta(event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType value) {
        if (metaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaIsMutable();
          meta_.add(value);
          onChanged();
        } else {
          metaBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addMeta(
          int index, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType value) {
        if (metaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaIsMutable();
          meta_.add(index, value);
          onChanged();
        } else {
          metaBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addMeta(
          event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder builderForValue) {
        if (metaBuilder_ == null) {
          ensureMetaIsMutable();
          meta_.add(builderForValue.build());
          onChanged();
        } else {
          metaBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addMeta(
          int index, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder builderForValue) {
        if (metaBuilder_ == null) {
          ensureMetaIsMutable();
          meta_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addAllMeta(
          java.lang.Iterable<? extends event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType> values) {
        if (metaBuilder_ == null) {
          ensureMetaIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, meta_);
          onChanged();
        } else {
          metaBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearMeta() {
        if (metaBuilder_ == null) {
          meta_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          metaBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      public Builder removeMeta(int index) {
        if (metaBuilder_ == null) {
          ensureMetaIsMutable();
          meta_.remove(index);
          onChanged();
        } else {
          metaBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder getMetaBuilder(
          int index) {
        return getMetaFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder getMetaOrBuilder(
          int index) {
        if (metaBuilder_ == null) {
          return meta_.get(index);  } else {
          return metaBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<? extends event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder> 
           getMetaOrBuilderList() {
        if (metaBuilder_ != null) {
          return metaBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(meta_);
        }
      }
      /**
       * <pre>
       * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder addMetaBuilder() {
        return getMetaFieldBuilder().addBuilder(
            event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.getDefaultInstance());
      }
      /**
       * <pre>
       * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder addMetaBuilder(
          int index) {
        return getMetaFieldBuilder().addBuilder(
            index, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.getDefaultInstance());
      }
      /**
       * <pre>
       * This element can be used to supply any metadata relating to an object as long as it conforms to an allowed format/specification (defined outside this XML Schema). This can be used for adding metadata to the event after receipt.
       * </pre>
       *
       * <code>repeated .event_logging.v4.AnyContentComplexType meta = 1 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder> 
           getMetaBuilderList() {
        return getMetaFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder> 
          getMetaFieldBuilder() {
        if (metaBuilder_ == null) {
          metaBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexType.Builder, event_logging.v4.AnyContentComplexTypeOuterClass.AnyContentComplexTypeOrBuilder>(
                  meta_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          meta_ = null;
        }
        return metaBuilder_;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * The type of the object in question and specific to the object type from the list above, e.g. a 'Resource' object may have a type such as 'image' or 'script'.
       * </pre>
       *
       * <code>string type = 2;</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The type of the object in question and specific to the object type from the list above, e.g. a 'Resource' object may have a type such as 'image' or 'script'.
       * </pre>
       *
       * <code>string type = 2;</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The type of the object in question and specific to the object type from the list above, e.g. a 'Resource' object may have a type such as 'image' or 'script'.
       * </pre>
       *
       * <code>string type = 2;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        type_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of the object in question and specific to the object type from the list above, e.g. a 'Resource' object may have a type such as 'image' or 'script'.
       * </pre>
       *
       * <code>string type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        type_ = getDefaultInstance().getType();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of the object in question and specific to the object type from the list above, e.g. a 'Resource' object may have a type such as 'image' or 'script'.
       * </pre>
       *
       * <code>string type = 2;</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        type_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * An identifier for the object, e.g a document ID in a document management system. This ID is likely to be specific to the system that generated the event.
       * </pre>
       *
       * <code>string id = 3;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * An identifier for the object, e.g a document ID in a document management system. This ID is likely to be specific to the system that generated the event.
       * </pre>
       *
       * <code>string id = 3;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * An identifier for the object, e.g a document ID in a document management system. This ID is likely to be specific to the system that generated the event.
       * </pre>
       *
       * <code>string id = 3;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        id_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An identifier for the object, e.g a document ID in a document management system. This ID is likely to be specific to the system that generated the event.
       * </pre>
       *
       * <code>string id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        id_ = getDefaultInstance().getId();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An identifier for the object, e.g a document ID in a document management system. This ID is likely to be specific to the system that generated the event.
       * </pre>
       *
       * <code>string id = 3;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        id_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the object, e.g. a filename.
       * </pre>
       *
       * <code>string name = 4;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the object, e.g. a filename.
       * </pre>
       *
       * <code>string name = 4;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the object, e.g. a filename.
       * </pre>
       *
       * <code>string name = 4;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the object, e.g. a filename.
       * </pre>
       *
       * <code>string name = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the object, e.g. a filename.
       * </pre>
       *
       * <code>string name = 4;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * Human readable description of what the object is.
       * </pre>
       *
       * <code>string description = 5;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Human readable description of what the object is.
       * </pre>
       *
       * <code>string description = 5;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Human readable description of what the object is.
       * </pre>
       *
       * <code>string description = 5;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        description_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Human readable description of what the object is.
       * </pre>
       *
       * <code>string description = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        description_ = getDefaultInstance().getDescription();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Human readable description of what the object is.
       * </pre>
       *
       * <code>string description = 5;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        description_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      private event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType classification_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType, event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType.Builder, event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexTypeOrBuilder> classificationBuilder_;
      /**
       * <pre>
       * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
       * </pre>
       *
       * <code>.event_logging.v4.ClassificationComplexType classification = 6;</code>
       * @return Whether the classification field is set.
       */
      public boolean hasClassification() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
       * </pre>
       *
       * <code>.event_logging.v4.ClassificationComplexType classification = 6;</code>
       * @return The classification.
       */
      public event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType getClassification() {
        if (classificationBuilder_ == null) {
          return classification_ == null ? event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType.getDefaultInstance() : classification_;
        } else {
          return classificationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
       * </pre>
       *
       * <code>.event_logging.v4.ClassificationComplexType classification = 6;</code>
       */
      public Builder setClassification(event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType value) {
        if (classificationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          classification_ = value;
        } else {
          classificationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
       * </pre>
       *
       * <code>.event_logging.v4.ClassificationComplexType classification = 6;</code>
       */
      public Builder setClassification(
          event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType.Builder builderForValue) {
        if (classificationBuilder_ == null) {
          classification_ = builderForValue.build();
        } else {
          classificationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
       * </pre>
       *
       * <code>.event_logging.v4.ClassificationComplexType classification = 6;</code>
       */
      public Builder mergeClassification(event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType value) {
        if (classificationBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            classification_ != null &&
            classification_ != event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType.getDefaultInstance()) {
            getClassificationBuilder().mergeFrom(value);
          } else {
            classification_ = value;
          }
        } else {
          classificationBuilder_.mergeFrom(value);
        }
        if (classification_ != null) {
          bitField0_ |= 0x00000020;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
       * </pre>
       *
       * <code>.event_logging.v4.ClassificationComplexType classification = 6;</code>
       */
      public Builder clearClassification() {
        bitField0_ = (bitField0_ & ~0x00000020);
        classification_ = null;
        if (classificationBuilder_ != null) {
          classificationBuilder_.dispose();
          classificationBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
       * </pre>
       *
       * <code>.event_logging.v4.ClassificationComplexType classification = 6;</code>
       */
      public event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType.Builder getClassificationBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getClassificationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
       * </pre>
       *
       * <code>.event_logging.v4.ClassificationComplexType classification = 6;</code>
       */
      public event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexTypeOrBuilder getClassificationOrBuilder() {
        if (classificationBuilder_ != null) {
          return classificationBuilder_.getMessageOrBuilder();
        } else {
          return classification_ == null ?
              event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType.getDefaultInstance() : classification_;
        }
      }
      /**
       * <pre>
       * Any classification, protective marking or restrictions placed on the object, e.g. for commercially sensitive reports or user health records.
       * </pre>
       *
       * <code>.event_logging.v4.ClassificationComplexType classification = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType, event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType.Builder, event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexTypeOrBuilder> 
          getClassificationFieldBuilder() {
        if (classificationBuilder_ == null) {
          classificationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType, event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexType.Builder, event_logging.v4.ClassificationComplexTypeOuterClass.ClassificationComplexTypeOrBuilder>(
                  getClassification(),
                  getParentForChildren(),
                  isClean());
          classification_ = null;
        }
        return classificationBuilder_;
      }

      private java.lang.Object state_ = "";
      /**
       * <pre>
       * Any state information about the object, e.g. 'Archived'.
       * </pre>
       *
       * <code>string state = 7;</code>
       * @return The state.
       */
      public java.lang.String getState() {
        java.lang.Object ref = state_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          state_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Any state information about the object, e.g. 'Archived'.
       * </pre>
       *
       * <code>string state = 7;</code>
       * @return The bytes for state.
       */
      public com.google.protobuf.ByteString
          getStateBytes() {
        java.lang.Object ref = state_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          state_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Any state information about the object, e.g. 'Archived'.
       * </pre>
       *
       * <code>string state = 7;</code>
       * @param value The state to set.
       * @return This builder for chaining.
       */
      public Builder setState(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        state_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any state information about the object, e.g. 'Archived'.
       * </pre>
       *
       * <code>string state = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearState() {
        state_ = getDefaultInstance().getState();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any state information about the object, e.g. 'Archived'.
       * </pre>
       *
       * <code>string state = 7;</code>
       * @param value The bytes for state to set.
       * @return This builder for chaining.
       */
      public Builder setStateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        state_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }

      private event_logging.v4.UserComplexTypeOuterClass.GroupsComplexType groups_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.UserComplexTypeOuterClass.GroupsComplexType, event_logging.v4.UserComplexTypeOuterClass.GroupsComplexType.Builder, event_logging.v4.UserComplexTypeOuterClass.GroupsComplexTypeOrBuilder> groupsBuilder_;
      /**
       * <pre>
       * Any groups associated with the object, e.g. group membership of a user account.
       * </pre>
       *
       * <code>.event_logging.v4.GroupsComplexType groups = 8;</code>
       * @return Whether the groups field is set.
       */
      public boolean hasGroups() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * Any groups associated with the object, e.g. group membership of a user account.
       * </pre>
       *
       * <code>.event_logging.v4.GroupsComplexType groups = 8;</code>
       * @return The groups.
       */
      public event_logging.v4.UserComplexTypeOuterClass.GroupsComplexType getGroups() {
        if (groupsBuilder_ == null) {
          return groups_ == null ? event_logging.v4.UserComplexTypeOuterClass.GroupsComplexType.getDefaultInstance() : groups_;
        } else {
          return groupsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Any groups associated with the object, e.g. group membership of a user account.
       * </pre>
       *
       * <code>.event_logging.v4.GroupsComplexType groups = 8;</code>
       */
      public Builder setGroups(event_logging.v4.UserComplexTypeOuterClass.GroupsComplexType value) {
        if (groupsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          groups_ = value;
        } else {
          groupsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any groups associated with the object, e.g. group membership of a user account.
       * </pre>
       *
       * <code>.event_logging.v4.GroupsComplexType groups = 8;</code>
       */
      public Builder setGroups(
          event_logging.v4.UserComplexTypeOuterClass.GroupsComplexType.Builder builderForValue) {
        if (groupsBuilder_ == null) {
          groups_ = builderForValue.build();
        } else {
          groupsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any groups associated with the object, e.g. group membership of a user account.
       * </pre>
       *
       * <code>.event_logging.v4.GroupsComplexType groups = 8;</code>
       */
      public Builder mergeGroups(event_logging.v4.UserComplexTypeOuterClass.GroupsComplexType value) {
        if (groupsBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0) &&
            groups_ != null &&
            groups_ != event_logging.v4.UserComplexTypeOuterClass.GroupsComplexType.getDefaultInstance()) {
            getGroupsBuilder().mergeFrom(value);
          } else {
            groups_ = value;
          }
        } else {
          groupsBuilder_.mergeFrom(value);
        }
        if (groups_ != null) {
          bitField0_ |= 0x00000080;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Any groups associated with the object, e.g. group membership of a user account.
       * </pre>
       *
       * <code>.event_logging.v4.GroupsComplexType groups = 8;</code>
       */
      public Builder clearGroups() {
        bitField0_ = (bitField0_ & ~0x00000080);
        groups_ = null;
        if (groupsBuilder_ != null) {
          groupsBuilder_.dispose();
          groupsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any groups associated with the object, e.g. group membership of a user account.
       * </pre>
       *
       * <code>.event_logging.v4.GroupsComplexType groups = 8;</code>
       */
      public event_logging.v4.UserComplexTypeOuterClass.GroupsComplexType.Builder getGroupsBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getGroupsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Any groups associated with the object, e.g. group membership of a user account.
       * </pre>
       *
       * <code>.event_logging.v4.GroupsComplexType groups = 8;</code>
       */
      public event_logging.v4.UserComplexTypeOuterClass.GroupsComplexTypeOrBuilder getGroupsOrBuilder() {
        if (groupsBuilder_ != null) {
          return groupsBuilder_.getMessageOrBuilder();
        } else {
          return groups_ == null ?
              event_logging.v4.UserComplexTypeOuterClass.GroupsComplexType.getDefaultInstance() : groups_;
        }
      }
      /**
       * <pre>
       * Any groups associated with the object, e.g. group membership of a user account.
       * </pre>
       *
       * <code>.event_logging.v4.GroupsComplexType groups = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.UserComplexTypeOuterClass.GroupsComplexType, event_logging.v4.UserComplexTypeOuterClass.GroupsComplexType.Builder, event_logging.v4.UserComplexTypeOuterClass.GroupsComplexTypeOrBuilder> 
          getGroupsFieldBuilder() {
        if (groupsBuilder_ == null) {
          groupsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.UserComplexTypeOuterClass.GroupsComplexType, event_logging.v4.UserComplexTypeOuterClass.GroupsComplexType.Builder, event_logging.v4.UserComplexTypeOuterClass.GroupsComplexTypeOrBuilder>(
                  getGroups(),
                  getParentForChildren(),
                  isClean());
          groups_ = null;
        }
        return groupsBuilder_;
      }

      private event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType permissions_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType, event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.Builder, event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsTypeOrBuilder> permissionsBuilder_;
      /**
       * <pre>
       * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
       * </pre>
       *
       * <code>.event_logging.v4.ConfigurationComplexType.PermissionsType permissions = 9;</code>
       * @return Whether the permissions field is set.
       */
      public boolean hasPermissions() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
       * </pre>
       *
       * <code>.event_logging.v4.ConfigurationComplexType.PermissionsType permissions = 9;</code>
       * @return The permissions.
       */
      public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType getPermissions() {
        if (permissionsBuilder_ == null) {
          return permissions_ == null ? event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.getDefaultInstance() : permissions_;
        } else {
          return permissionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
       * </pre>
       *
       * <code>.event_logging.v4.ConfigurationComplexType.PermissionsType permissions = 9;</code>
       */
      public Builder setPermissions(event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType value) {
        if (permissionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          permissions_ = value;
        } else {
          permissionsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
       * </pre>
       *
       * <code>.event_logging.v4.ConfigurationComplexType.PermissionsType permissions = 9;</code>
       */
      public Builder setPermissions(
          event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.Builder builderForValue) {
        if (permissionsBuilder_ == null) {
          permissions_ = builderForValue.build();
        } else {
          permissionsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
       * </pre>
       *
       * <code>.event_logging.v4.ConfigurationComplexType.PermissionsType permissions = 9;</code>
       */
      public Builder mergePermissions(event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType value) {
        if (permissionsBuilder_ == null) {
          if (((bitField0_ & 0x00000100) != 0) &&
            permissions_ != null &&
            permissions_ != event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.getDefaultInstance()) {
            getPermissionsBuilder().mergeFrom(value);
          } else {
            permissions_ = value;
          }
        } else {
          permissionsBuilder_.mergeFrom(value);
        }
        if (permissions_ != null) {
          bitField0_ |= 0x00000100;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
       * </pre>
       *
       * <code>.event_logging.v4.ConfigurationComplexType.PermissionsType permissions = 9;</code>
       */
      public Builder clearPermissions() {
        bitField0_ = (bitField0_ & ~0x00000100);
        permissions_ = null;
        if (permissionsBuilder_ != null) {
          permissionsBuilder_.dispose();
          permissionsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
       * </pre>
       *
       * <code>.event_logging.v4.ConfigurationComplexType.PermissionsType permissions = 9;</code>
       */
      public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.Builder getPermissionsBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getPermissionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
       * </pre>
       *
       * <code>.event_logging.v4.ConfigurationComplexType.PermissionsType permissions = 9;</code>
       */
      public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsTypeOrBuilder getPermissionsOrBuilder() {
        if (permissionsBuilder_ != null) {
          return permissionsBuilder_.getMessageOrBuilder();
        } else {
          return permissions_ == null ?
              event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.getDefaultInstance() : permissions_;
        }
      }
      /**
       * <pre>
       * The collection of permissions associated with the object, e.g. write access being granted to a list of named users.
       * </pre>
       *
       * <code>.event_logging.v4.ConfigurationComplexType.PermissionsType permissions = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType, event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.Builder, event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsTypeOrBuilder> 
          getPermissionsFieldBuilder() {
        if (permissionsBuilder_ == null) {
          permissionsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType, event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsType.Builder, event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType.PermissionsTypeOrBuilder>(
                  getPermissions(),
                  getParentForChildren(),
                  isClean());
          permissions_ = null;
        }
        return permissionsBuilder_;
      }

      private event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexType tags_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexType, event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexType.Builder, event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexTypeOrBuilder> tagsBuilder_;
      /**
       * <pre>
       * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
       * </pre>
       *
       * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10;</code>
       * @return Whether the tags field is set.
       */
      public boolean hasTags() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
       * </pre>
       *
       * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10;</code>
       * @return The tags.
       */
      public event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexType getTags() {
        if (tagsBuilder_ == null) {
          return tags_ == null ? event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexType.getDefaultInstance() : tags_;
        } else {
          return tagsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
       * </pre>
       *
       * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10;</code>
       */
      public Builder setTags(event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexType value) {
        if (tagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tags_ = value;
        } else {
          tagsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
       * </pre>
       *
       * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10;</code>
       */
      public Builder setTags(
          event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexType.Builder builderForValue) {
        if (tagsBuilder_ == null) {
          tags_ = builderForValue.build();
        } else {
          tagsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
       * </pre>
       *
       * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10;</code>
       */
      public Builder mergeTags(event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexType value) {
        if (tagsBuilder_ == null) {
          if (((bitField0_ & 0x00000200) != 0) &&
            tags_ != null &&
            tags_ != event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexType.getDefaultInstance()) {
            getTagsBuilder().mergeFrom(value);
          } else {
            tags_ = value;
          }
        } else {
          tagsBuilder_.mergeFrom(value);
        }
        if (tags_ != null) {
          bitField0_ |= 0x00000200;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
       * </pre>
       *
       * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10;</code>
       */
      public Builder clearTags() {
        bitField0_ = (bitField0_ & ~0x00000200);
        tags_ = null;
        if (tagsBuilder_ != null) {
          tagsBuilder_.dispose();
          tagsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
       * </pre>
       *
       * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10;</code>
       */
      public event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexType.Builder getTagsBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getTagsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
       * </pre>
       *
       * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10;</code>
       */
      public event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexTypeOrBuilder getTagsOrBuilder() {
        if (tagsBuilder_ != null) {
          return tagsBuilder_.getMessageOrBuilder();
        } else {
          return tags_ == null ?
              event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexType.getDefaultInstance() : tags_;
        }
      }
      /**
       * <pre>
       * Metadata tags that can be used for additional object tagging or categorisation. Object tagging allows for the labelling (or filtering) of objects using words that label, categorise or group similar items, using a taxonomy defined outside this schema. For example, an email could be tagged with tags like 'internal', 'spam', 'external', 'rich-content', etc.
       * </pre>
       *
       * <code>.event_logging.v4.MetaDataTagsComplexType tags = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexType, event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexType.Builder, event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexTypeOrBuilder> 
          getTagsFieldBuilder() {
        if (tagsBuilder_ == null) {
          tagsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexType, event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexType.Builder, event_logging.v4.MetaDataTagsComplexTypeOuterClass.MetaDataTagsComplexTypeOrBuilder>(
                  getTags(),
                  getParentForChildren(),
                  isClean());
          tags_ = null;
        }
        return tagsBuilder_;
      }

      private java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> data_ =
        java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000400) != 0)) {
          data_ = new java.util.ArrayList<event_logging.v4.DataComplexTypeOuterClass.DataComplexType>(data_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> dataBuilder_;

      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> getDataList() {
        if (dataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(data_);
        } else {
          return dataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public int getDataCount() {
        if (dataBuilder_ == null) {
          return data_.size();
        } else {
          return dataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);
        } else {
          return dataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
        } else {
          dataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
        } else {
          dataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(index, value);
          onChanged();
        } else {
          dataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(
          event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexType> values) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, data_);
          onChanged();
        } else {
          dataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public Builder removeData(int index) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.remove(index);
          onChanged();
        } else {
          dataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder getDataBuilder(
          int index) {
        return getDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
          int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);  } else {
          return dataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
           getDataOrBuilderList() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(data_);
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder addDataBuilder() {
        return getDataFieldBuilder().addBuilder(
            event_logging.v4.DataComplexTypeOuterClass.DataComplexType.getDefaultInstance());
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder addDataBuilder(
          int index) {
        return getDataFieldBuilder().addBuilder(
            index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.getDefaultInstance());
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder> 
           getDataBuilderList() {
        return getDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder>(
                  data_,
                  ((bitField0_ & 0x00000400) != 0),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:event_logging.v4.ConfigurationComplexType)
    }

    // @@protoc_insertion_point(class_scope:event_logging.v4.ConfigurationComplexType)
    private static final event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType();
    }

    public static event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConfigurationComplexType>
        PARSER = new com.google.protobuf.AbstractParser<ConfigurationComplexType>() {
      @java.lang.Override
      public ConfigurationComplexType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ConfigurationComplexType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConfigurationComplexType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public event_logging.v4.ConfigurationComplexTypeOuterClass.ConfigurationComplexType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_logging_v4_ConfigurationComplexType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_event_logging_v4_ConfigurationComplexType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_logging_v4_ConfigurationComplexType_PermissionsType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_event_logging_v4_ConfigurationComplexType_PermissionsType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_logging_v4_ConfigurationComplexType_PermissionsType_PermissionType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_event_logging_v4_ConfigurationComplexType_PermissionsType_PermissionType_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n1event_logging/v4/configuration_complex" +
      "_type.proto\022\020event_logging.v4\032/event_log" +
      "ging/v4/any_content_complex_type.proto\0322" +
      "event_logging/v4/classification_complex_" +
      "type.proto\032(event_logging/v4/data_comple" +
      "x_type.proto\0322event_logging/v4/meta_data" +
      "_tags_complex_type.proto\0327event_logging/" +
      "v4/permission_attribute_simple_type.prot" +
      "o\032(event_logging/v4/user_complex_type.pr" +
      "oto\032\033buf/validate/validate.proto\"\203\007\n\030Con" +
      "figurationComplexType\022=\n\004meta\030\001 \003(\0132\'.ev" +
      "ent_logging.v4.AnyContentComplexTypeB\006\272H" +
      "\003\222\001\000\022\014\n\004type\030\002 \001(\t\022\n\n\002id\030\003 \001(\t\022\014\n\004name\030\004" +
      " \001(\t\022\023\n\013description\030\005 \001(\t\022C\n\016classificat" +
      "ion\030\006 \001(\0132+.event_logging.v4.Classificat" +
      "ionComplexType\022\r\n\005state\030\007 \001(\t\0223\n\006groups\030" +
      "\010 \001(\0132#.event_logging.v4.GroupsComplexTy" +
      "pe\022O\n\013permissions\030\t \001(\0132:.event_logging." +
      "v4.ConfigurationComplexType.PermissionsT" +
      "ype\0227\n\004tags\030\n \001(\0132).event_logging.v4.Met" +
      "aDataTagsComplexType\0227\n\004data\030\013 \003(\0132!.eve" +
      "nt_logging.v4.DataComplexTypeB\006\272H\003\222\001\000\032\236\003" +
      "\n\017PermissionsType\022g\n\npermission\030\001 \003(\0132I." +
      "event_logging.v4.ConfigurationComplexTyp" +
      "e.PermissionsType.PermissionTypeB\010\272H\005\222\001\002" +
      "\010\001\032\241\002\n\016PermissionType\0227\n\004user\030\001 \001(\0132!.ev" +
      "ent_logging.v4.UserComplexTypeB\006\272H\003\310\001\001\0229" +
      "\n\005group\030\002 \001(\0132\".event_logging.v4.GroupCo" +
      "mplexTypeB\006\272H\003\310\001\001\022M\n\005allow\030\013 \003(\0162/.event" +
      "_logging.v4.PermissionAttributeSimpleTyp" +
      "eB\r\272H\n\222\001\007\"\005\202\001\002\020\001\022L\n\004deny\030\014 \003(\0162/.event_l" +
      "ogging.v4.PermissionAttributeSimpleTypeB" +
      "\r\272H\n\222\001\007\"\005\202\001\002\020\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          event_logging.v4.AnyContentComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.ClassificationComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.DataComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.MetaDataTagsComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.PermissionAttributeSimpleTypeOuterClass.getDescriptor(),
          event_logging.v4.UserComplexTypeOuterClass.getDescriptor(),
          build.buf.validate.ValidateProto.getDescriptor(),
        });
    internal_static_event_logging_v4_ConfigurationComplexType_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_event_logging_v4_ConfigurationComplexType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_event_logging_v4_ConfigurationComplexType_descriptor,
        new java.lang.String[] { "Meta", "Type", "Id", "Name", "Description", "Classification", "State", "Groups", "Permissions", "Tags", "Data", });
    internal_static_event_logging_v4_ConfigurationComplexType_PermissionsType_descriptor =
      internal_static_event_logging_v4_ConfigurationComplexType_descriptor.getNestedTypes().get(0);
    internal_static_event_logging_v4_ConfigurationComplexType_PermissionsType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_event_logging_v4_ConfigurationComplexType_PermissionsType_descriptor,
        new java.lang.String[] { "Permission", });
    internal_static_event_logging_v4_ConfigurationComplexType_PermissionsType_PermissionType_descriptor =
      internal_static_event_logging_v4_ConfigurationComplexType_PermissionsType_descriptor.getNestedTypes().get(0);
    internal_static_event_logging_v4_ConfigurationComplexType_PermissionsType_PermissionType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_event_logging_v4_ConfigurationComplexType_PermissionsType_PermissionType_descriptor,
        new java.lang.String[] { "User", "Group", "Allow", "Deny", });
    descriptor.resolveAllFeaturesImmutable();
    event_logging.v4.AnyContentComplexTypeOuterClass.getDescriptor();
    event_logging.v4.ClassificationComplexTypeOuterClass.getDescriptor();
    event_logging.v4.DataComplexTypeOuterClass.getDescriptor();
    event_logging.v4.MetaDataTagsComplexTypeOuterClass.getDescriptor();
    event_logging.v4.PermissionAttributeSimpleTypeOuterClass.getDescriptor();
    event_logging.v4.UserComplexTypeOuterClass.getDescriptor();
    build.buf.validate.ValidateProto.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(build.buf.validate.ValidateProto.field);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
