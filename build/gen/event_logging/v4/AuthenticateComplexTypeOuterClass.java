// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event_logging/v4/authenticate_complex_type.proto
// Protobuf Java Version: 4.26.1

package event_logging.v4;

public final class AuthenticateComplexTypeOuterClass {
  private AuthenticateComplexTypeOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      AuthenticateComplexTypeOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface AuthenticateComplexTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_logging.v4.AuthenticateComplexType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The authentication action that was performed, e.g. Logon, Logoff.
     * </pre>
     *
     * <code>.event_logging.v4.AuthenticateActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for action.
     */
    int getActionValue();
    /**
     * <pre>
     * The authentication action that was performed, e.g. Logon, Logoff.
     * </pre>
     *
     * <code>.event_logging.v4.AuthenticateActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
     * @return The action.
     */
    event_logging.v4.AuthenticateActionSimpleTypeOuterClass.AuthenticateActionSimpleType getAction();

    /**
     * <pre>
     * This indicates the type of logon. For example, Microsoft Windows has several logon types such as Interactive (logon to domain), RemoteInteractive (logon to remote machine), CachedInteractive (logon to local machine using cached domain information due to loss of network).
     * </pre>
     *
     * <code>.event_logging.v4.AuthenticateLogonTypeSimpleType logon_type = 2 [(.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for logonType.
     */
    int getLogonTypeValue();
    /**
     * <pre>
     * This indicates the type of logon. For example, Microsoft Windows has several logon types such as Interactive (logon to domain), RemoteInteractive (logon to remote machine), CachedInteractive (logon to local machine using cached domain information due to loss of network).
     * </pre>
     *
     * <code>.event_logging.v4.AuthenticateLogonTypeSimpleType logon_type = 2 [(.buf.validate.field) = { ... }</code>
     * @return The logonType.
     */
    event_logging.v4.AuthenticateLogonTypeSimpleTypeOuterClass.AuthenticateLogonTypeSimpleType getLogonType();

    /**
     * <pre>
     * The user who the authentication action relates to.
     * </pre>
     *
     * <code>.event_logging.v4.UserComplexType user = 3 [(.buf.validate.field) = { ... }</code>
     * @return Whether the user field is set.
     */
    boolean hasUser();
    /**
     * <pre>
     * The user who the authentication action relates to.
     * </pre>
     *
     * <code>.event_logging.v4.UserComplexType user = 3 [(.buf.validate.field) = { ... }</code>
     * @return The user.
     */
    event_logging.v4.UserComplexTypeOuterClass.UserComplexType getUser();
    /**
     * <pre>
     * The user who the authentication action relates to.
     * </pre>
     *
     * <code>.event_logging.v4.UserComplexType user = 3 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.UserComplexTypeOuterClass.UserComplexTypeOrBuilder getUserOrBuilder();

    /**
     * <pre>
     * Where a device authenticates with another device, this is the device that initiates the authentication action.
     * </pre>
     *
     * <code>.event_logging.v4.DeviceComplexType device = 4 [(.buf.validate.field) = { ... }</code>
     * @return Whether the device field is set.
     */
    boolean hasDevice();
    /**
     * <pre>
     * Where a device authenticates with another device, this is the device that initiates the authentication action.
     * </pre>
     *
     * <code>.event_logging.v4.DeviceComplexType device = 4 [(.buf.validate.field) = { ... }</code>
     * @return The device.
     */
    event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType getDevice();
    /**
     * <pre>
     * Where a device authenticates with another device, this is the device that initiates the authentication action.
     * </pre>
     *
     * <code>.event_logging.v4.DeviceComplexType device = 4 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexTypeOrBuilder getDeviceOrBuilder();

    /**
     * <pre>
     * The group the authentication action relates to.
     * </pre>
     *
     * <code>.event_logging.v4.GroupComplexType group = 5 [(.buf.validate.field) = { ... }</code>
     * @return Whether the group field is set.
     */
    boolean hasGroup();
    /**
     * <pre>
     * The group the authentication action relates to.
     * </pre>
     *
     * <code>.event_logging.v4.GroupComplexType group = 5 [(.buf.validate.field) = { ... }</code>
     * @return The group.
     */
    event_logging.v4.UserComplexTypeOuterClass.GroupComplexType getGroup();
    /**
     * <pre>
     * The group the authentication action relates to.
     * </pre>
     *
     * <code>.event_logging.v4.GroupComplexType group = 5 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.UserComplexTypeOuterClass.GroupComplexTypeOrBuilder getGroupOrBuilder();

    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.AuthenticateOutcomeComplexType outcome = 11;</code>
     * @return Whether the outcome field is set.
     */
    boolean hasOutcome();
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.AuthenticateOutcomeComplexType outcome = 11;</code>
     * @return The outcome.
     */
    event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexType getOutcome();
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.AuthenticateOutcomeComplexType outcome = 11;</code>
     */
    event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexTypeOrBuilder getOutcomeOrBuilder();

    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
     */
    java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> 
        getDataList();
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index);
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
     */
    int getDataCount();
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
     */
    java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
        getDataOrBuilderList();
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Used to record authentication events such as logon and logoff. All authentication events that originate from a client device should record details of the client device in the event source.
   * </pre>
   *
   * Protobuf type {@code event_logging.v4.AuthenticateComplexType}
   */
  public static final class AuthenticateComplexType extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:event_logging.v4.AuthenticateComplexType)
      AuthenticateComplexTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        AuthenticateComplexType.class.getName());
    }
    // Use AuthenticateComplexType.newBuilder() to construct.
    private AuthenticateComplexType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private AuthenticateComplexType() {
      action_ = 0;
      logonType_ = 0;
      data_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return event_logging.v4.AuthenticateComplexTypeOuterClass.internal_static_event_logging_v4_AuthenticateComplexType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return event_logging.v4.AuthenticateComplexTypeOuterClass.internal_static_event_logging_v4_AuthenticateComplexType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType.class, event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType.Builder.class);
    }

    private int bitField0_;
    public static final int ACTION_FIELD_NUMBER = 1;
    private int action_ = 0;
    /**
     * <pre>
     * The authentication action that was performed, e.g. Logon, Logoff.
     * </pre>
     *
     * <code>.event_logging.v4.AuthenticateActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for action.
     */
    @java.lang.Override public int getActionValue() {
      return action_;
    }
    /**
     * <pre>
     * The authentication action that was performed, e.g. Logon, Logoff.
     * </pre>
     *
     * <code>.event_logging.v4.AuthenticateActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
     * @return The action.
     */
    @java.lang.Override public event_logging.v4.AuthenticateActionSimpleTypeOuterClass.AuthenticateActionSimpleType getAction() {
      event_logging.v4.AuthenticateActionSimpleTypeOuterClass.AuthenticateActionSimpleType result = event_logging.v4.AuthenticateActionSimpleTypeOuterClass.AuthenticateActionSimpleType.forNumber(action_);
      return result == null ? event_logging.v4.AuthenticateActionSimpleTypeOuterClass.AuthenticateActionSimpleType.UNRECOGNIZED : result;
    }

    public static final int LOGON_TYPE_FIELD_NUMBER = 2;
    private int logonType_ = 0;
    /**
     * <pre>
     * This indicates the type of logon. For example, Microsoft Windows has several logon types such as Interactive (logon to domain), RemoteInteractive (logon to remote machine), CachedInteractive (logon to local machine using cached domain information due to loss of network).
     * </pre>
     *
     * <code>.event_logging.v4.AuthenticateLogonTypeSimpleType logon_type = 2 [(.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for logonType.
     */
    @java.lang.Override public int getLogonTypeValue() {
      return logonType_;
    }
    /**
     * <pre>
     * This indicates the type of logon. For example, Microsoft Windows has several logon types such as Interactive (logon to domain), RemoteInteractive (logon to remote machine), CachedInteractive (logon to local machine using cached domain information due to loss of network).
     * </pre>
     *
     * <code>.event_logging.v4.AuthenticateLogonTypeSimpleType logon_type = 2 [(.buf.validate.field) = { ... }</code>
     * @return The logonType.
     */
    @java.lang.Override public event_logging.v4.AuthenticateLogonTypeSimpleTypeOuterClass.AuthenticateLogonTypeSimpleType getLogonType() {
      event_logging.v4.AuthenticateLogonTypeSimpleTypeOuterClass.AuthenticateLogonTypeSimpleType result = event_logging.v4.AuthenticateLogonTypeSimpleTypeOuterClass.AuthenticateLogonTypeSimpleType.forNumber(logonType_);
      return result == null ? event_logging.v4.AuthenticateLogonTypeSimpleTypeOuterClass.AuthenticateLogonTypeSimpleType.UNRECOGNIZED : result;
    }

    public static final int USER_FIELD_NUMBER = 3;
    private event_logging.v4.UserComplexTypeOuterClass.UserComplexType user_;
    /**
     * <pre>
     * The user who the authentication action relates to.
     * </pre>
     *
     * <code>.event_logging.v4.UserComplexType user = 3 [(.buf.validate.field) = { ... }</code>
     * @return Whether the user field is set.
     */
    @java.lang.Override
    public boolean hasUser() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The user who the authentication action relates to.
     * </pre>
     *
     * <code>.event_logging.v4.UserComplexType user = 3 [(.buf.validate.field) = { ... }</code>
     * @return The user.
     */
    @java.lang.Override
    public event_logging.v4.UserComplexTypeOuterClass.UserComplexType getUser() {
      return user_ == null ? event_logging.v4.UserComplexTypeOuterClass.UserComplexType.getDefaultInstance() : user_;
    }
    /**
     * <pre>
     * The user who the authentication action relates to.
     * </pre>
     *
     * <code>.event_logging.v4.UserComplexType user = 3 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.UserComplexTypeOuterClass.UserComplexTypeOrBuilder getUserOrBuilder() {
      return user_ == null ? event_logging.v4.UserComplexTypeOuterClass.UserComplexType.getDefaultInstance() : user_;
    }

    public static final int DEVICE_FIELD_NUMBER = 4;
    private event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType device_;
    /**
     * <pre>
     * Where a device authenticates with another device, this is the device that initiates the authentication action.
     * </pre>
     *
     * <code>.event_logging.v4.DeviceComplexType device = 4 [(.buf.validate.field) = { ... }</code>
     * @return Whether the device field is set.
     */
    @java.lang.Override
    public boolean hasDevice() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Where a device authenticates with another device, this is the device that initiates the authentication action.
     * </pre>
     *
     * <code>.event_logging.v4.DeviceComplexType device = 4 [(.buf.validate.field) = { ... }</code>
     * @return The device.
     */
    @java.lang.Override
    public event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType getDevice() {
      return device_ == null ? event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType.getDefaultInstance() : device_;
    }
    /**
     * <pre>
     * Where a device authenticates with another device, this is the device that initiates the authentication action.
     * </pre>
     *
     * <code>.event_logging.v4.DeviceComplexType device = 4 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexTypeOrBuilder getDeviceOrBuilder() {
      return device_ == null ? event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType.getDefaultInstance() : device_;
    }

    public static final int GROUP_FIELD_NUMBER = 5;
    private event_logging.v4.UserComplexTypeOuterClass.GroupComplexType group_;
    /**
     * <pre>
     * The group the authentication action relates to.
     * </pre>
     *
     * <code>.event_logging.v4.GroupComplexType group = 5 [(.buf.validate.field) = { ... }</code>
     * @return Whether the group field is set.
     */
    @java.lang.Override
    public boolean hasGroup() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The group the authentication action relates to.
     * </pre>
     *
     * <code>.event_logging.v4.GroupComplexType group = 5 [(.buf.validate.field) = { ... }</code>
     * @return The group.
     */
    @java.lang.Override
    public event_logging.v4.UserComplexTypeOuterClass.GroupComplexType getGroup() {
      return group_ == null ? event_logging.v4.UserComplexTypeOuterClass.GroupComplexType.getDefaultInstance() : group_;
    }
    /**
     * <pre>
     * The group the authentication action relates to.
     * </pre>
     *
     * <code>.event_logging.v4.GroupComplexType group = 5 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.UserComplexTypeOuterClass.GroupComplexTypeOrBuilder getGroupOrBuilder() {
      return group_ == null ? event_logging.v4.UserComplexTypeOuterClass.GroupComplexType.getDefaultInstance() : group_;
    }

    public static final int OUTCOME_FIELD_NUMBER = 11;
    private event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexType outcome_;
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.AuthenticateOutcomeComplexType outcome = 11;</code>
     * @return Whether the outcome field is set.
     */
    @java.lang.Override
    public boolean hasOutcome() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.AuthenticateOutcomeComplexType outcome = 11;</code>
     * @return The outcome.
     */
    @java.lang.Override
    public event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexType getOutcome() {
      return outcome_ == null ? event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexType.getDefaultInstance() : outcome_;
    }
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.AuthenticateOutcomeComplexType outcome = 11;</code>
     */
    @java.lang.Override
    public event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexTypeOrBuilder getOutcomeOrBuilder() {
      return outcome_ == null ? event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexType.getDefaultInstance() : outcome_;
    }

    public static final int DATA_FIELD_NUMBER = 12;
    @SuppressWarnings("serial")
    private java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> data_;
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> getDataList() {
      return data_;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
        getDataOrBuilderList() {
      return data_;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index) {
      return data_.get(index);
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
        int index) {
      return data_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (action_ != event_logging.v4.AuthenticateActionSimpleTypeOuterClass.AuthenticateActionSimpleType.AUTHENTICATE_ACTION_SIMPLE_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, action_);
      }
      if (logonType_ != event_logging.v4.AuthenticateLogonTypeSimpleTypeOuterClass.AuthenticateLogonTypeSimpleType.AUTHENTICATE_LOGON_TYPE_SIMPLE_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(2, logonType_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(3, getUser());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(4, getDevice());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(5, getGroup());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(11, getOutcome());
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeMessage(12, data_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (action_ != event_logging.v4.AuthenticateActionSimpleTypeOuterClass.AuthenticateActionSimpleType.AUTHENTICATE_ACTION_SIMPLE_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, action_);
      }
      if (logonType_ != event_logging.v4.AuthenticateLogonTypeSimpleTypeOuterClass.AuthenticateLogonTypeSimpleType.AUTHENTICATE_LOGON_TYPE_SIMPLE_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, logonType_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getUser());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getDevice());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getGroup());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getOutcome());
      }
      for (int i = 0; i < data_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, data_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType)) {
        return super.equals(obj);
      }
      event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType other = (event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType) obj;

      if (action_ != other.action_) return false;
      if (logonType_ != other.logonType_) return false;
      if (hasUser() != other.hasUser()) return false;
      if (hasUser()) {
        if (!getUser()
            .equals(other.getUser())) return false;
      }
      if (hasDevice() != other.hasDevice()) return false;
      if (hasDevice()) {
        if (!getDevice()
            .equals(other.getDevice())) return false;
      }
      if (hasGroup() != other.hasGroup()) return false;
      if (hasGroup()) {
        if (!getGroup()
            .equals(other.getGroup())) return false;
      }
      if (hasOutcome() != other.hasOutcome()) return false;
      if (hasOutcome()) {
        if (!getOutcome()
            .equals(other.getOutcome())) return false;
      }
      if (!getDataList()
          .equals(other.getDataList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ACTION_FIELD_NUMBER;
      hash = (53 * hash) + action_;
      hash = (37 * hash) + LOGON_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + logonType_;
      if (hasUser()) {
        hash = (37 * hash) + USER_FIELD_NUMBER;
        hash = (53 * hash) + getUser().hashCode();
      }
      if (hasDevice()) {
        hash = (37 * hash) + DEVICE_FIELD_NUMBER;
        hash = (53 * hash) + getDevice().hashCode();
      }
      if (hasGroup()) {
        hash = (37 * hash) + GROUP_FIELD_NUMBER;
        hash = (53 * hash) + getGroup().hashCode();
      }
      if (hasOutcome()) {
        hash = (37 * hash) + OUTCOME_FIELD_NUMBER;
        hash = (53 * hash) + getOutcome().hashCode();
      }
      if (getDataCount() > 0) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDataList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Used to record authentication events such as logon and logoff. All authentication events that originate from a client device should record details of the client device in the event source.
     * </pre>
     *
     * Protobuf type {@code event_logging.v4.AuthenticateComplexType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_logging.v4.AuthenticateComplexType)
        event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_logging.v4.AuthenticateComplexTypeOuterClass.internal_static_event_logging_v4_AuthenticateComplexType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_logging.v4.AuthenticateComplexTypeOuterClass.internal_static_event_logging_v4_AuthenticateComplexType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType.class, event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType.Builder.class);
      }

      // Construct using event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getUserFieldBuilder();
          getDeviceFieldBuilder();
          getGroupFieldBuilder();
          getOutcomeFieldBuilder();
          getDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        action_ = 0;
        logonType_ = 0;
        user_ = null;
        if (userBuilder_ != null) {
          userBuilder_.dispose();
          userBuilder_ = null;
        }
        device_ = null;
        if (deviceBuilder_ != null) {
          deviceBuilder_.dispose();
          deviceBuilder_ = null;
        }
        group_ = null;
        if (groupBuilder_ != null) {
          groupBuilder_.dispose();
          groupBuilder_ = null;
        }
        outcome_ = null;
        if (outcomeBuilder_ != null) {
          outcomeBuilder_.dispose();
          outcomeBuilder_ = null;
        }
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
        } else {
          data_ = null;
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return event_logging.v4.AuthenticateComplexTypeOuterClass.internal_static_event_logging_v4_AuthenticateComplexType_descriptor;
      }

      @java.lang.Override
      public event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType getDefaultInstanceForType() {
        return event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType.getDefaultInstance();
      }

      @java.lang.Override
      public event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType build() {
        event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType buildPartial() {
        event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType result = new event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType result) {
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
      }

      private void buildPartial0(event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.action_ = action_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.logonType_ = logonType_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.user_ = userBuilder_ == null
              ? user_
              : userBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.device_ = deviceBuilder_ == null
              ? device_
              : deviceBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.group_ = groupBuilder_ == null
              ? group_
              : groupBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.outcome_ = outcomeBuilder_ == null
              ? outcome_
              : outcomeBuilder_.build();
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType) {
          return mergeFrom((event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType other) {
        if (other == event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType.getDefaultInstance()) return this;
        if (other.action_ != 0) {
          setActionValue(other.getActionValue());
        }
        if (other.logonType_ != 0) {
          setLogonTypeValue(other.getLogonTypeValue());
        }
        if (other.hasUser()) {
          mergeUser(other.getUser());
        }
        if (other.hasDevice()) {
          mergeDevice(other.getDevice());
        }
        if (other.hasGroup()) {
          mergeGroup(other.getGroup());
        }
        if (other.hasOutcome()) {
          mergeOutcome(other.getOutcome());
        }
        if (dataBuilder_ == null) {
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
        } else {
          if (!other.data_.isEmpty()) {
            if (dataBuilder_.isEmpty()) {
              dataBuilder_.dispose();
              dataBuilder_ = null;
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000040);
              dataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDataFieldBuilder() : null;
            } else {
              dataBuilder_.addAllMessages(other.data_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                action_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                logonType_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                input.readMessage(
                    getUserFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getDeviceFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getGroupFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 90: {
                input.readMessage(
                    getOutcomeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 90
              case 98: {
                event_logging.v4.DataComplexTypeOuterClass.DataComplexType m =
                    input.readMessage(
                        event_logging.v4.DataComplexTypeOuterClass.DataComplexType.parser(),
                        extensionRegistry);
                if (dataBuilder_ == null) {
                  ensureDataIsMutable();
                  data_.add(m);
                } else {
                  dataBuilder_.addMessage(m);
                }
                break;
              } // case 98
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int action_ = 0;
      /**
       * <pre>
       * The authentication action that was performed, e.g. Logon, Logoff.
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
       * @return The enum numeric value on the wire for action.
       */
      @java.lang.Override public int getActionValue() {
        return action_;
      }
      /**
       * <pre>
       * The authentication action that was performed, e.g. Logon, Logoff.
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
       * @param value The enum numeric value on the wire for action to set.
       * @return This builder for chaining.
       */
      public Builder setActionValue(int value) {
        action_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The authentication action that was performed, e.g. Logon, Logoff.
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
       * @return The action.
       */
      @java.lang.Override
      public event_logging.v4.AuthenticateActionSimpleTypeOuterClass.AuthenticateActionSimpleType getAction() {
        event_logging.v4.AuthenticateActionSimpleTypeOuterClass.AuthenticateActionSimpleType result = event_logging.v4.AuthenticateActionSimpleTypeOuterClass.AuthenticateActionSimpleType.forNumber(action_);
        return result == null ? event_logging.v4.AuthenticateActionSimpleTypeOuterClass.AuthenticateActionSimpleType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The authentication action that was performed, e.g. Logon, Logoff.
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
       * @param value The action to set.
       * @return This builder for chaining.
       */
      public Builder setAction(event_logging.v4.AuthenticateActionSimpleTypeOuterClass.AuthenticateActionSimpleType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        action_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The authentication action that was performed, e.g. Logon, Logoff.
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearAction() {
        bitField0_ = (bitField0_ & ~0x00000001);
        action_ = 0;
        onChanged();
        return this;
      }

      private int logonType_ = 0;
      /**
       * <pre>
       * This indicates the type of logon. For example, Microsoft Windows has several logon types such as Interactive (logon to domain), RemoteInteractive (logon to remote machine), CachedInteractive (logon to local machine using cached domain information due to loss of network).
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateLogonTypeSimpleType logon_type = 2 [(.buf.validate.field) = { ... }</code>
       * @return The enum numeric value on the wire for logonType.
       */
      @java.lang.Override public int getLogonTypeValue() {
        return logonType_;
      }
      /**
       * <pre>
       * This indicates the type of logon. For example, Microsoft Windows has several logon types such as Interactive (logon to domain), RemoteInteractive (logon to remote machine), CachedInteractive (logon to local machine using cached domain information due to loss of network).
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateLogonTypeSimpleType logon_type = 2 [(.buf.validate.field) = { ... }</code>
       * @param value The enum numeric value on the wire for logonType to set.
       * @return This builder for chaining.
       */
      public Builder setLogonTypeValue(int value) {
        logonType_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This indicates the type of logon. For example, Microsoft Windows has several logon types such as Interactive (logon to domain), RemoteInteractive (logon to remote machine), CachedInteractive (logon to local machine using cached domain information due to loss of network).
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateLogonTypeSimpleType logon_type = 2 [(.buf.validate.field) = { ... }</code>
       * @return The logonType.
       */
      @java.lang.Override
      public event_logging.v4.AuthenticateLogonTypeSimpleTypeOuterClass.AuthenticateLogonTypeSimpleType getLogonType() {
        event_logging.v4.AuthenticateLogonTypeSimpleTypeOuterClass.AuthenticateLogonTypeSimpleType result = event_logging.v4.AuthenticateLogonTypeSimpleTypeOuterClass.AuthenticateLogonTypeSimpleType.forNumber(logonType_);
        return result == null ? event_logging.v4.AuthenticateLogonTypeSimpleTypeOuterClass.AuthenticateLogonTypeSimpleType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * This indicates the type of logon. For example, Microsoft Windows has several logon types such as Interactive (logon to domain), RemoteInteractive (logon to remote machine), CachedInteractive (logon to local machine using cached domain information due to loss of network).
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateLogonTypeSimpleType logon_type = 2 [(.buf.validate.field) = { ... }</code>
       * @param value The logonType to set.
       * @return This builder for chaining.
       */
      public Builder setLogonType(event_logging.v4.AuthenticateLogonTypeSimpleTypeOuterClass.AuthenticateLogonTypeSimpleType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        logonType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This indicates the type of logon. For example, Microsoft Windows has several logon types such as Interactive (logon to domain), RemoteInteractive (logon to remote machine), CachedInteractive (logon to local machine using cached domain information due to loss of network).
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateLogonTypeSimpleType logon_type = 2 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearLogonType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        logonType_ = 0;
        onChanged();
        return this;
      }

      private event_logging.v4.UserComplexTypeOuterClass.UserComplexType user_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.UserComplexTypeOuterClass.UserComplexType, event_logging.v4.UserComplexTypeOuterClass.UserComplexType.Builder, event_logging.v4.UserComplexTypeOuterClass.UserComplexTypeOrBuilder> userBuilder_;
      /**
       * <pre>
       * The user who the authentication action relates to.
       * </pre>
       *
       * <code>.event_logging.v4.UserComplexType user = 3 [(.buf.validate.field) = { ... }</code>
       * @return Whether the user field is set.
       */
      public boolean hasUser() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The user who the authentication action relates to.
       * </pre>
       *
       * <code>.event_logging.v4.UserComplexType user = 3 [(.buf.validate.field) = { ... }</code>
       * @return The user.
       */
      public event_logging.v4.UserComplexTypeOuterClass.UserComplexType getUser() {
        if (userBuilder_ == null) {
          return user_ == null ? event_logging.v4.UserComplexTypeOuterClass.UserComplexType.getDefaultInstance() : user_;
        } else {
          return userBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The user who the authentication action relates to.
       * </pre>
       *
       * <code>.event_logging.v4.UserComplexType user = 3 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setUser(event_logging.v4.UserComplexTypeOuterClass.UserComplexType value) {
        if (userBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          user_ = value;
        } else {
          userBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The user who the authentication action relates to.
       * </pre>
       *
       * <code>.event_logging.v4.UserComplexType user = 3 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setUser(
          event_logging.v4.UserComplexTypeOuterClass.UserComplexType.Builder builderForValue) {
        if (userBuilder_ == null) {
          user_ = builderForValue.build();
        } else {
          userBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The user who the authentication action relates to.
       * </pre>
       *
       * <code>.event_logging.v4.UserComplexType user = 3 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeUser(event_logging.v4.UserComplexTypeOuterClass.UserComplexType value) {
        if (userBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            user_ != null &&
            user_ != event_logging.v4.UserComplexTypeOuterClass.UserComplexType.getDefaultInstance()) {
            getUserBuilder().mergeFrom(value);
          } else {
            user_ = value;
          }
        } else {
          userBuilder_.mergeFrom(value);
        }
        if (user_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The user who the authentication action relates to.
       * </pre>
       *
       * <code>.event_logging.v4.UserComplexType user = 3 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearUser() {
        bitField0_ = (bitField0_ & ~0x00000004);
        user_ = null;
        if (userBuilder_ != null) {
          userBuilder_.dispose();
          userBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The user who the authentication action relates to.
       * </pre>
       *
       * <code>.event_logging.v4.UserComplexType user = 3 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.UserComplexTypeOuterClass.UserComplexType.Builder getUserBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getUserFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The user who the authentication action relates to.
       * </pre>
       *
       * <code>.event_logging.v4.UserComplexType user = 3 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.UserComplexTypeOuterClass.UserComplexTypeOrBuilder getUserOrBuilder() {
        if (userBuilder_ != null) {
          return userBuilder_.getMessageOrBuilder();
        } else {
          return user_ == null ?
              event_logging.v4.UserComplexTypeOuterClass.UserComplexType.getDefaultInstance() : user_;
        }
      }
      /**
       * <pre>
       * The user who the authentication action relates to.
       * </pre>
       *
       * <code>.event_logging.v4.UserComplexType user = 3 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.UserComplexTypeOuterClass.UserComplexType, event_logging.v4.UserComplexTypeOuterClass.UserComplexType.Builder, event_logging.v4.UserComplexTypeOuterClass.UserComplexTypeOrBuilder> 
          getUserFieldBuilder() {
        if (userBuilder_ == null) {
          userBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.UserComplexTypeOuterClass.UserComplexType, event_logging.v4.UserComplexTypeOuterClass.UserComplexType.Builder, event_logging.v4.UserComplexTypeOuterClass.UserComplexTypeOrBuilder>(
                  getUser(),
                  getParentForChildren(),
                  isClean());
          user_ = null;
        }
        return userBuilder_;
      }

      private event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType device_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType, event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType.Builder, event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexTypeOrBuilder> deviceBuilder_;
      /**
       * <pre>
       * Where a device authenticates with another device, this is the device that initiates the authentication action.
       * </pre>
       *
       * <code>.event_logging.v4.DeviceComplexType device = 4 [(.buf.validate.field) = { ... }</code>
       * @return Whether the device field is set.
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Where a device authenticates with another device, this is the device that initiates the authentication action.
       * </pre>
       *
       * <code>.event_logging.v4.DeviceComplexType device = 4 [(.buf.validate.field) = { ... }</code>
       * @return The device.
       */
      public event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType getDevice() {
        if (deviceBuilder_ == null) {
          return device_ == null ? event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType.getDefaultInstance() : device_;
        } else {
          return deviceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Where a device authenticates with another device, this is the device that initiates the authentication action.
       * </pre>
       *
       * <code>.event_logging.v4.DeviceComplexType device = 4 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setDevice(event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType value) {
        if (deviceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          device_ = value;
        } else {
          deviceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Where a device authenticates with another device, this is the device that initiates the authentication action.
       * </pre>
       *
       * <code>.event_logging.v4.DeviceComplexType device = 4 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setDevice(
          event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType.Builder builderForValue) {
        if (deviceBuilder_ == null) {
          device_ = builderForValue.build();
        } else {
          deviceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Where a device authenticates with another device, this is the device that initiates the authentication action.
       * </pre>
       *
       * <code>.event_logging.v4.DeviceComplexType device = 4 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeDevice(event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType value) {
        if (deviceBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            device_ != null &&
            device_ != event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType.getDefaultInstance()) {
            getDeviceBuilder().mergeFrom(value);
          } else {
            device_ = value;
          }
        } else {
          deviceBuilder_.mergeFrom(value);
        }
        if (device_ != null) {
          bitField0_ |= 0x00000008;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Where a device authenticates with another device, this is the device that initiates the authentication action.
       * </pre>
       *
       * <code>.event_logging.v4.DeviceComplexType device = 4 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearDevice() {
        bitField0_ = (bitField0_ & ~0x00000008);
        device_ = null;
        if (deviceBuilder_ != null) {
          deviceBuilder_.dispose();
          deviceBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Where a device authenticates with another device, this is the device that initiates the authentication action.
       * </pre>
       *
       * <code>.event_logging.v4.DeviceComplexType device = 4 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType.Builder getDeviceBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getDeviceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Where a device authenticates with another device, this is the device that initiates the authentication action.
       * </pre>
       *
       * <code>.event_logging.v4.DeviceComplexType device = 4 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexTypeOrBuilder getDeviceOrBuilder() {
        if (deviceBuilder_ != null) {
          return deviceBuilder_.getMessageOrBuilder();
        } else {
          return device_ == null ?
              event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType.getDefaultInstance() : device_;
        }
      }
      /**
       * <pre>
       * Where a device authenticates with another device, this is the device that initiates the authentication action.
       * </pre>
       *
       * <code>.event_logging.v4.DeviceComplexType device = 4 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType, event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType.Builder, event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexTypeOrBuilder> 
          getDeviceFieldBuilder() {
        if (deviceBuilder_ == null) {
          deviceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType, event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexType.Builder, event_logging.v4.DeviceComplexTypeOuterClass.DeviceComplexTypeOrBuilder>(
                  getDevice(),
                  getParentForChildren(),
                  isClean());
          device_ = null;
        }
        return deviceBuilder_;
      }

      private event_logging.v4.UserComplexTypeOuterClass.GroupComplexType group_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.UserComplexTypeOuterClass.GroupComplexType, event_logging.v4.UserComplexTypeOuterClass.GroupComplexType.Builder, event_logging.v4.UserComplexTypeOuterClass.GroupComplexTypeOrBuilder> groupBuilder_;
      /**
       * <pre>
       * The group the authentication action relates to.
       * </pre>
       *
       * <code>.event_logging.v4.GroupComplexType group = 5 [(.buf.validate.field) = { ... }</code>
       * @return Whether the group field is set.
       */
      public boolean hasGroup() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * The group the authentication action relates to.
       * </pre>
       *
       * <code>.event_logging.v4.GroupComplexType group = 5 [(.buf.validate.field) = { ... }</code>
       * @return The group.
       */
      public event_logging.v4.UserComplexTypeOuterClass.GroupComplexType getGroup() {
        if (groupBuilder_ == null) {
          return group_ == null ? event_logging.v4.UserComplexTypeOuterClass.GroupComplexType.getDefaultInstance() : group_;
        } else {
          return groupBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The group the authentication action relates to.
       * </pre>
       *
       * <code>.event_logging.v4.GroupComplexType group = 5 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setGroup(event_logging.v4.UserComplexTypeOuterClass.GroupComplexType value) {
        if (groupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          group_ = value;
        } else {
          groupBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The group the authentication action relates to.
       * </pre>
       *
       * <code>.event_logging.v4.GroupComplexType group = 5 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setGroup(
          event_logging.v4.UserComplexTypeOuterClass.GroupComplexType.Builder builderForValue) {
        if (groupBuilder_ == null) {
          group_ = builderForValue.build();
        } else {
          groupBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The group the authentication action relates to.
       * </pre>
       *
       * <code>.event_logging.v4.GroupComplexType group = 5 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeGroup(event_logging.v4.UserComplexTypeOuterClass.GroupComplexType value) {
        if (groupBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            group_ != null &&
            group_ != event_logging.v4.UserComplexTypeOuterClass.GroupComplexType.getDefaultInstance()) {
            getGroupBuilder().mergeFrom(value);
          } else {
            group_ = value;
          }
        } else {
          groupBuilder_.mergeFrom(value);
        }
        if (group_ != null) {
          bitField0_ |= 0x00000010;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The group the authentication action relates to.
       * </pre>
       *
       * <code>.event_logging.v4.GroupComplexType group = 5 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearGroup() {
        bitField0_ = (bitField0_ & ~0x00000010);
        group_ = null;
        if (groupBuilder_ != null) {
          groupBuilder_.dispose();
          groupBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The group the authentication action relates to.
       * </pre>
       *
       * <code>.event_logging.v4.GroupComplexType group = 5 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.UserComplexTypeOuterClass.GroupComplexType.Builder getGroupBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getGroupFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The group the authentication action relates to.
       * </pre>
       *
       * <code>.event_logging.v4.GroupComplexType group = 5 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.UserComplexTypeOuterClass.GroupComplexTypeOrBuilder getGroupOrBuilder() {
        if (groupBuilder_ != null) {
          return groupBuilder_.getMessageOrBuilder();
        } else {
          return group_ == null ?
              event_logging.v4.UserComplexTypeOuterClass.GroupComplexType.getDefaultInstance() : group_;
        }
      }
      /**
       * <pre>
       * The group the authentication action relates to.
       * </pre>
       *
       * <code>.event_logging.v4.GroupComplexType group = 5 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.UserComplexTypeOuterClass.GroupComplexType, event_logging.v4.UserComplexTypeOuterClass.GroupComplexType.Builder, event_logging.v4.UserComplexTypeOuterClass.GroupComplexTypeOrBuilder> 
          getGroupFieldBuilder() {
        if (groupBuilder_ == null) {
          groupBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.UserComplexTypeOuterClass.GroupComplexType, event_logging.v4.UserComplexTypeOuterClass.GroupComplexType.Builder, event_logging.v4.UserComplexTypeOuterClass.GroupComplexTypeOrBuilder>(
                  getGroup(),
                  getParentForChildren(),
                  isClean());
          group_ = null;
        }
        return groupBuilder_;
      }

      private event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexType outcome_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexType, event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexType.Builder, event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexTypeOrBuilder> outcomeBuilder_;
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateOutcomeComplexType outcome = 11;</code>
       * @return Whether the outcome field is set.
       */
      public boolean hasOutcome() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateOutcomeComplexType outcome = 11;</code>
       * @return The outcome.
       */
      public event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexType getOutcome() {
        if (outcomeBuilder_ == null) {
          return outcome_ == null ? event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexType.getDefaultInstance() : outcome_;
        } else {
          return outcomeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateOutcomeComplexType outcome = 11;</code>
       */
      public Builder setOutcome(event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexType value) {
        if (outcomeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          outcome_ = value;
        } else {
          outcomeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateOutcomeComplexType outcome = 11;</code>
       */
      public Builder setOutcome(
          event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexType.Builder builderForValue) {
        if (outcomeBuilder_ == null) {
          outcome_ = builderForValue.build();
        } else {
          outcomeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateOutcomeComplexType outcome = 11;</code>
       */
      public Builder mergeOutcome(event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexType value) {
        if (outcomeBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            outcome_ != null &&
            outcome_ != event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexType.getDefaultInstance()) {
            getOutcomeBuilder().mergeFrom(value);
          } else {
            outcome_ = value;
          }
        } else {
          outcomeBuilder_.mergeFrom(value);
        }
        if (outcome_ != null) {
          bitField0_ |= 0x00000020;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateOutcomeComplexType outcome = 11;</code>
       */
      public Builder clearOutcome() {
        bitField0_ = (bitField0_ & ~0x00000020);
        outcome_ = null;
        if (outcomeBuilder_ != null) {
          outcomeBuilder_.dispose();
          outcomeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateOutcomeComplexType outcome = 11;</code>
       */
      public event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexType.Builder getOutcomeBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getOutcomeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateOutcomeComplexType outcome = 11;</code>
       */
      public event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexTypeOrBuilder getOutcomeOrBuilder() {
        if (outcomeBuilder_ != null) {
          return outcomeBuilder_.getMessageOrBuilder();
        } else {
          return outcome_ == null ?
              event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexType.getDefaultInstance() : outcome_;
        }
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateOutcomeComplexType outcome = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexType, event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexType.Builder, event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexTypeOrBuilder> 
          getOutcomeFieldBuilder() {
        if (outcomeBuilder_ == null) {
          outcomeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexType, event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexType.Builder, event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.AuthenticateOutcomeComplexTypeOrBuilder>(
                  getOutcome(),
                  getParentForChildren(),
                  isClean());
          outcome_ = null;
        }
        return outcomeBuilder_;
      }

      private java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> data_ =
        java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          data_ = new java.util.ArrayList<event_logging.v4.DataComplexTypeOuterClass.DataComplexType>(data_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> dataBuilder_;

      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> getDataList() {
        if (dataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(data_);
        } else {
          return dataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
       */
      public int getDataCount() {
        if (dataBuilder_ == null) {
          return data_.size();
        } else {
          return dataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);
        } else {
          return dataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
        } else {
          dataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
        } else {
          dataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(index, value);
          onChanged();
        } else {
          dataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(
          event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexType> values) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, data_);
          onChanged();
        } else {
          dataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
       */
      public Builder removeData(int index) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.remove(index);
          onChanged();
        } else {
          dataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder getDataBuilder(
          int index) {
        return getDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
          int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);  } else {
          return dataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
           getDataOrBuilderList() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(data_);
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder addDataBuilder() {
        return getDataFieldBuilder().addBuilder(
            event_logging.v4.DataComplexTypeOuterClass.DataComplexType.getDefaultInstance());
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder addDataBuilder(
          int index) {
        return getDataFieldBuilder().addBuilder(
            index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.getDefaultInstance());
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 12 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder> 
           getDataBuilderList() {
        return getDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder>(
                  data_,
                  ((bitField0_ & 0x00000040) != 0),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:event_logging.v4.AuthenticateComplexType)
    }

    // @@protoc_insertion_point(class_scope:event_logging.v4.AuthenticateComplexType)
    private static final event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType();
    }

    public static event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AuthenticateComplexType>
        PARSER = new com.google.protobuf.AbstractParser<AuthenticateComplexType>() {
      @java.lang.Override
      public AuthenticateComplexType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AuthenticateComplexType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AuthenticateComplexType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_logging_v4_AuthenticateComplexType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_event_logging_v4_AuthenticateComplexType_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n0event_logging/v4/authenticate_complex_" +
      "type.proto\022\020event_logging.v4\0326event_logg" +
      "ing/v4/authenticate_action_simple_type.p" +
      "roto\032:event_logging/v4/authenticate_logo" +
      "n_type_simple_type.proto\0328event_logging/" +
      "v4/authenticate_outcome_complex_type.pro" +
      "to\032(event_logging/v4/data_complex_type.p" +
      "roto\032*event_logging/v4/device_complex_ty" +
      "pe.proto\032(event_logging/v4/user_complex_" +
      "type.proto\032\033buf/validate/validate.proto\"" +
      "\337\003\n\027AuthenticateComplexType\022F\n\006action\030\001 " +
      "\001(\0162..event_logging.v4.AuthenticateActio" +
      "nSimpleTypeB\006\272H\003\310\001\001\022O\n\nlogon_type\030\002 \001(\0162" +
      "1.event_logging.v4.AuthenticateLogonType" +
      "SimpleTypeB\010\272H\005\202\001\002\020\001\0227\n\004user\030\003 \001(\0132!.eve" +
      "nt_logging.v4.UserComplexTypeB\006\272H\003\310\001\001\022;\n" +
      "\006device\030\004 \001(\0132#.event_logging.v4.DeviceC" +
      "omplexTypeB\006\272H\003\310\001\001\0229\n\005group\030\005 \001(\0132\".even" +
      "t_logging.v4.GroupComplexTypeB\006\272H\003\310\001\001\022A\n" +
      "\007outcome\030\013 \001(\01320.event_logging.v4.Authen" +
      "ticateOutcomeComplexType\0227\n\004data\030\014 \003(\0132!" +
      ".event_logging.v4.DataComplexTypeB\006\272H\003\222\001" +
      "\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          event_logging.v4.AuthenticateActionSimpleTypeOuterClass.getDescriptor(),
          event_logging.v4.AuthenticateLogonTypeSimpleTypeOuterClass.getDescriptor(),
          event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.DataComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.DeviceComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.UserComplexTypeOuterClass.getDescriptor(),
          build.buf.validate.ValidateProto.getDescriptor(),
        });
    internal_static_event_logging_v4_AuthenticateComplexType_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_event_logging_v4_AuthenticateComplexType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_event_logging_v4_AuthenticateComplexType_descriptor,
        new java.lang.String[] { "Action", "LogonType", "User", "Device", "Group", "Outcome", "Data", });
    descriptor.resolveAllFeaturesImmutable();
    event_logging.v4.AuthenticateActionSimpleTypeOuterClass.getDescriptor();
    event_logging.v4.AuthenticateLogonTypeSimpleTypeOuterClass.getDescriptor();
    event_logging.v4.AuthenticateOutcomeComplexTypeOuterClass.getDescriptor();
    event_logging.v4.DataComplexTypeOuterClass.getDescriptor();
    event_logging.v4.DeviceComplexTypeOuterClass.getDescriptor();
    event_logging.v4.UserComplexTypeOuterClass.getDescriptor();
    build.buf.validate.ValidateProto.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(build.buf.validate.ValidateProto.field);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
