// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event_logging/v4/process_complex_type.proto
// Protobuf Java Version: 4.26.1

package event_logging.v4;

public final class ProcessComplexTypeOuterClass {
  private ProcessComplexTypeOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      ProcessComplexTypeOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ProcessComplexTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_logging.v4.ProcessComplexType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The action that the process event is capturing, e.g. Startup, Shutdown.
     * </pre>
     *
     * <code>.event_logging.v4.ProcessActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for action.
     */
    int getActionValue();
    /**
     * <pre>
     * The action that the process event is capturing, e.g. Startup, Shutdown.
     * </pre>
     *
     * <code>.event_logging.v4.ProcessActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
     * @return The action.
     */
    event_logging.v4.ProcessActionSimpleTypeOuterClass.ProcessActionSimpleType getAction();

    /**
     * <pre>
     * The type of process, e.g. Application, OS, Service.
     * </pre>
     *
     * <code>.event_logging.v4.ProcessTypeSimpleType type = 2 [(.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * The type of process, e.g. Application, OS, Service.
     * </pre>
     *
     * <code>.event_logging.v4.ProcessTypeSimpleType type = 2 [(.buf.validate.field) = { ... }</code>
     * @return The type.
     */
    event_logging.v4.ProcessTypeSimpleTypeOuterClass.ProcessTypeSimpleType getType();

    /**
     * <pre>
     * The name of the process.
     * </pre>
     *
     * <code>string command = 3 [(.buf.validate.field) = { ... }</code>
     * @return The command.
     */
    java.lang.String getCommand();
    /**
     * <pre>
     * The name of the process.
     * </pre>
     *
     * <code>string command = 3 [(.buf.validate.field) = { ... }</code>
     * @return The bytes for command.
     */
    com.google.protobuf.ByteString
        getCommandBytes();

    /**
     * <pre>
     * The process command arguments/parameters.
     * </pre>
     *
     * <code>string arguments = 4;</code>
     * @return The arguments.
     */
    java.lang.String getArguments();
    /**
     * <pre>
     * The process command arguments/parameters.
     * </pre>
     *
     * <code>string arguments = 4;</code>
     * @return The bytes for arguments.
     */
    com.google.protobuf.ByteString
        getArgumentsBytes();

    /**
     * <pre>
     * The system identifier for the process.
     * </pre>
     *
     * <code>string process_id = 5;</code>
     * @return The processId.
     */
    java.lang.String getProcessId();
    /**
     * <pre>
     * The system identifier for the process.
     * </pre>
     *
     * <code>string process_id = 5;</code>
     * @return The bytes for processId.
     */
    com.google.protobuf.ByteString
        getProcessIdBytes();

    /**
     * <pre>
     * The thread identifier for the process.
     * </pre>
     *
     * <code>uint32 thread_id = 6 [(.buf.validate.field) = { ... }</code>
     * @return The threadId.
     */
    int getThreadId();

    /**
     * <pre>
     * The rule that was triggered when this process event happened.
     * </pre>
     *
     * <code>string rule = 7;</code>
     * @return The rule.
     */
    java.lang.String getRule();
    /**
     * <pre>
     * The rule that was triggered when this process event happened.
     * </pre>
     *
     * <code>string rule = 7;</code>
     * @return The bytes for rule.
     */
    com.google.protobuf.ByteString
        getRuleBytes();

    /**
     * <pre>
     * Any objects used as input to the process.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType input = 8;</code>
     * @return Whether the input field is set.
     */
    boolean hasInput();
    /**
     * <pre>
     * Any objects used as input to the process.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType input = 8;</code>
     * @return The input.
     */
    event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType getInput();
    /**
     * <pre>
     * Any objects used as input to the process.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType input = 8;</code>
     */
    event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder getInputOrBuilder();

    /**
     * <pre>
     * Any objects output by the process
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType output = 9;</code>
     * @return Whether the output field is set.
     */
    boolean hasOutput();
    /**
     * <pre>
     * Any objects output by the process
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType output = 9;</code>
     * @return The output.
     */
    event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType getOutput();
    /**
     * <pre>
     * Any objects output by the process
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType output = 9;</code>
     */
    event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder getOutputOrBuilder();

    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 10;</code>
     * @return Whether the outcome field is set.
     */
    boolean hasOutcome();
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 10;</code>
     * @return The outcome.
     */
    event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType getOutcome();
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 10;</code>
     */
    event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexTypeOrBuilder getOutcomeOrBuilder();

    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
     */
    java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> 
        getDataList();
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index);
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
     */
    int getDataCount();
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
     */
    java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
        getDataOrBuilderList();
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Describes various actions such as the startup/shutdown/install of operating systems, services, applications. It also describes the execution of operating system commands, shell scripts and batch processes.
   * </pre>
   *
   * Protobuf type {@code event_logging.v4.ProcessComplexType}
   */
  public static final class ProcessComplexType extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:event_logging.v4.ProcessComplexType)
      ProcessComplexTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        ProcessComplexType.class.getName());
    }
    // Use ProcessComplexType.newBuilder() to construct.
    private ProcessComplexType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ProcessComplexType() {
      action_ = 0;
      type_ = 0;
      command_ = "";
      arguments_ = "";
      processId_ = "";
      rule_ = "";
      data_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return event_logging.v4.ProcessComplexTypeOuterClass.internal_static_event_logging_v4_ProcessComplexType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return event_logging.v4.ProcessComplexTypeOuterClass.internal_static_event_logging_v4_ProcessComplexType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType.class, event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType.Builder.class);
    }

    private int bitField0_;
    public static final int ACTION_FIELD_NUMBER = 1;
    private int action_ = 0;
    /**
     * <pre>
     * The action that the process event is capturing, e.g. Startup, Shutdown.
     * </pre>
     *
     * <code>.event_logging.v4.ProcessActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for action.
     */
    @java.lang.Override public int getActionValue() {
      return action_;
    }
    /**
     * <pre>
     * The action that the process event is capturing, e.g. Startup, Shutdown.
     * </pre>
     *
     * <code>.event_logging.v4.ProcessActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
     * @return The action.
     */
    @java.lang.Override public event_logging.v4.ProcessActionSimpleTypeOuterClass.ProcessActionSimpleType getAction() {
      event_logging.v4.ProcessActionSimpleTypeOuterClass.ProcessActionSimpleType result = event_logging.v4.ProcessActionSimpleTypeOuterClass.ProcessActionSimpleType.forNumber(action_);
      return result == null ? event_logging.v4.ProcessActionSimpleTypeOuterClass.ProcessActionSimpleType.UNRECOGNIZED : result;
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_ = 0;
    /**
     * <pre>
     * The type of process, e.g. Application, OS, Service.
     * </pre>
     *
     * <code>.event_logging.v4.ProcessTypeSimpleType type = 2 [(.buf.validate.field) = { ... }</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * The type of process, e.g. Application, OS, Service.
     * </pre>
     *
     * <code>.event_logging.v4.ProcessTypeSimpleType type = 2 [(.buf.validate.field) = { ... }</code>
     * @return The type.
     */
    @java.lang.Override public event_logging.v4.ProcessTypeSimpleTypeOuterClass.ProcessTypeSimpleType getType() {
      event_logging.v4.ProcessTypeSimpleTypeOuterClass.ProcessTypeSimpleType result = event_logging.v4.ProcessTypeSimpleTypeOuterClass.ProcessTypeSimpleType.forNumber(type_);
      return result == null ? event_logging.v4.ProcessTypeSimpleTypeOuterClass.ProcessTypeSimpleType.UNRECOGNIZED : result;
    }

    public static final int COMMAND_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object command_ = "";
    /**
     * <pre>
     * The name of the process.
     * </pre>
     *
     * <code>string command = 3 [(.buf.validate.field) = { ... }</code>
     * @return The command.
     */
    @java.lang.Override
    public java.lang.String getCommand() {
      java.lang.Object ref = command_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        command_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the process.
     * </pre>
     *
     * <code>string command = 3 [(.buf.validate.field) = { ... }</code>
     * @return The bytes for command.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCommandBytes() {
      java.lang.Object ref = command_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        command_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ARGUMENTS_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object arguments_ = "";
    /**
     * <pre>
     * The process command arguments/parameters.
     * </pre>
     *
     * <code>string arguments = 4;</code>
     * @return The arguments.
     */
    @java.lang.Override
    public java.lang.String getArguments() {
      java.lang.Object ref = arguments_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        arguments_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The process command arguments/parameters.
     * </pre>
     *
     * <code>string arguments = 4;</code>
     * @return The bytes for arguments.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getArgumentsBytes() {
      java.lang.Object ref = arguments_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        arguments_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROCESS_ID_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private volatile java.lang.Object processId_ = "";
    /**
     * <pre>
     * The system identifier for the process.
     * </pre>
     *
     * <code>string process_id = 5;</code>
     * @return The processId.
     */
    @java.lang.Override
    public java.lang.String getProcessId() {
      java.lang.Object ref = processId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        processId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The system identifier for the process.
     * </pre>
     *
     * <code>string process_id = 5;</code>
     * @return The bytes for processId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getProcessIdBytes() {
      java.lang.Object ref = processId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        processId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int THREAD_ID_FIELD_NUMBER = 6;
    private int threadId_ = 0;
    /**
     * <pre>
     * The thread identifier for the process.
     * </pre>
     *
     * <code>uint32 thread_id = 6 [(.buf.validate.field) = { ... }</code>
     * @return The threadId.
     */
    @java.lang.Override
    public int getThreadId() {
      return threadId_;
    }

    public static final int RULE_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private volatile java.lang.Object rule_ = "";
    /**
     * <pre>
     * The rule that was triggered when this process event happened.
     * </pre>
     *
     * <code>string rule = 7;</code>
     * @return The rule.
     */
    @java.lang.Override
    public java.lang.String getRule() {
      java.lang.Object ref = rule_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        rule_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The rule that was triggered when this process event happened.
     * </pre>
     *
     * <code>string rule = 7;</code>
     * @return The bytes for rule.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRuleBytes() {
      java.lang.Object ref = rule_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rule_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INPUT_FIELD_NUMBER = 8;
    private event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType input_;
    /**
     * <pre>
     * Any objects used as input to the process.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType input = 8;</code>
     * @return Whether the input field is set.
     */
    @java.lang.Override
    public boolean hasInput() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Any objects used as input to the process.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType input = 8;</code>
     * @return The input.
     */
    @java.lang.Override
    public event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType getInput() {
      return input_ == null ? event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.getDefaultInstance() : input_;
    }
    /**
     * <pre>
     * Any objects used as input to the process.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType input = 8;</code>
     */
    @java.lang.Override
    public event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder getInputOrBuilder() {
      return input_ == null ? event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.getDefaultInstance() : input_;
    }

    public static final int OUTPUT_FIELD_NUMBER = 9;
    private event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType output_;
    /**
     * <pre>
     * Any objects output by the process
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType output = 9;</code>
     * @return Whether the output field is set.
     */
    @java.lang.Override
    public boolean hasOutput() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Any objects output by the process
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType output = 9;</code>
     * @return The output.
     */
    @java.lang.Override
    public event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType getOutput() {
      return output_ == null ? event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.getDefaultInstance() : output_;
    }
    /**
     * <pre>
     * Any objects output by the process
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType output = 9;</code>
     */
    @java.lang.Override
    public event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder getOutputOrBuilder() {
      return output_ == null ? event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.getDefaultInstance() : output_;
    }

    public static final int OUTCOME_FIELD_NUMBER = 10;
    private event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType outcome_;
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 10;</code>
     * @return Whether the outcome field is set.
     */
    @java.lang.Override
    public boolean hasOutcome() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 10;</code>
     * @return The outcome.
     */
    @java.lang.Override
    public event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType getOutcome() {
      return outcome_ == null ? event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.getDefaultInstance() : outcome_;
    }
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 10;</code>
     */
    @java.lang.Override
    public event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexTypeOrBuilder getOutcomeOrBuilder() {
      return outcome_ == null ? event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.getDefaultInstance() : outcome_;
    }

    public static final int DATA_FIELD_NUMBER = 11;
    @SuppressWarnings("serial")
    private java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> data_;
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> getDataList() {
      return data_;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
        getDataOrBuilderList() {
      return data_;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index) {
      return data_.get(index);
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
        int index) {
      return data_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (action_ != event_logging.v4.ProcessActionSimpleTypeOuterClass.ProcessActionSimpleType.PROCESS_ACTION_SIMPLE_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, action_);
      }
      if (type_ != event_logging.v4.ProcessTypeSimpleTypeOuterClass.ProcessTypeSimpleType.PROCESS_TYPE_SIMPLE_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(2, type_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(command_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, command_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(arguments_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, arguments_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(processId_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 5, processId_);
      }
      if (threadId_ != 0) {
        output.writeUInt32(6, threadId_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(rule_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 7, rule_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(8, getInput());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(9, getOutput());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(10, getOutcome());
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeMessage(11, data_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (action_ != event_logging.v4.ProcessActionSimpleTypeOuterClass.ProcessActionSimpleType.PROCESS_ACTION_SIMPLE_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, action_);
      }
      if (type_ != event_logging.v4.ProcessTypeSimpleTypeOuterClass.ProcessTypeSimpleType.PROCESS_TYPE_SIMPLE_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(command_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, command_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(arguments_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, arguments_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(processId_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(5, processId_);
      }
      if (threadId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, threadId_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(rule_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(7, rule_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getInput());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getOutput());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getOutcome());
      }
      for (int i = 0; i < data_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, data_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType)) {
        return super.equals(obj);
      }
      event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType other = (event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType) obj;

      if (action_ != other.action_) return false;
      if (type_ != other.type_) return false;
      if (!getCommand()
          .equals(other.getCommand())) return false;
      if (!getArguments()
          .equals(other.getArguments())) return false;
      if (!getProcessId()
          .equals(other.getProcessId())) return false;
      if (getThreadId()
          != other.getThreadId()) return false;
      if (!getRule()
          .equals(other.getRule())) return false;
      if (hasInput() != other.hasInput()) return false;
      if (hasInput()) {
        if (!getInput()
            .equals(other.getInput())) return false;
      }
      if (hasOutput() != other.hasOutput()) return false;
      if (hasOutput()) {
        if (!getOutput()
            .equals(other.getOutput())) return false;
      }
      if (hasOutcome() != other.hasOutcome()) return false;
      if (hasOutcome()) {
        if (!getOutcome()
            .equals(other.getOutcome())) return false;
      }
      if (!getDataList()
          .equals(other.getDataList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ACTION_FIELD_NUMBER;
      hash = (53 * hash) + action_;
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + COMMAND_FIELD_NUMBER;
      hash = (53 * hash) + getCommand().hashCode();
      hash = (37 * hash) + ARGUMENTS_FIELD_NUMBER;
      hash = (53 * hash) + getArguments().hashCode();
      hash = (37 * hash) + PROCESS_ID_FIELD_NUMBER;
      hash = (53 * hash) + getProcessId().hashCode();
      hash = (37 * hash) + THREAD_ID_FIELD_NUMBER;
      hash = (53 * hash) + getThreadId();
      hash = (37 * hash) + RULE_FIELD_NUMBER;
      hash = (53 * hash) + getRule().hashCode();
      if (hasInput()) {
        hash = (37 * hash) + INPUT_FIELD_NUMBER;
        hash = (53 * hash) + getInput().hashCode();
      }
      if (hasOutput()) {
        hash = (37 * hash) + OUTPUT_FIELD_NUMBER;
        hash = (53 * hash) + getOutput().hashCode();
      }
      if (hasOutcome()) {
        hash = (37 * hash) + OUTCOME_FIELD_NUMBER;
        hash = (53 * hash) + getOutcome().hashCode();
      }
      if (getDataCount() > 0) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDataList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes various actions such as the startup/shutdown/install of operating systems, services, applications. It also describes the execution of operating system commands, shell scripts and batch processes.
     * </pre>
     *
     * Protobuf type {@code event_logging.v4.ProcessComplexType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_logging.v4.ProcessComplexType)
        event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_logging.v4.ProcessComplexTypeOuterClass.internal_static_event_logging_v4_ProcessComplexType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_logging.v4.ProcessComplexTypeOuterClass.internal_static_event_logging_v4_ProcessComplexType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType.class, event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType.Builder.class);
      }

      // Construct using event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getInputFieldBuilder();
          getOutputFieldBuilder();
          getOutcomeFieldBuilder();
          getDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        action_ = 0;
        type_ = 0;
        command_ = "";
        arguments_ = "";
        processId_ = "";
        threadId_ = 0;
        rule_ = "";
        input_ = null;
        if (inputBuilder_ != null) {
          inputBuilder_.dispose();
          inputBuilder_ = null;
        }
        output_ = null;
        if (outputBuilder_ != null) {
          outputBuilder_.dispose();
          outputBuilder_ = null;
        }
        outcome_ = null;
        if (outcomeBuilder_ != null) {
          outcomeBuilder_.dispose();
          outcomeBuilder_ = null;
        }
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
        } else {
          data_ = null;
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return event_logging.v4.ProcessComplexTypeOuterClass.internal_static_event_logging_v4_ProcessComplexType_descriptor;
      }

      @java.lang.Override
      public event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType getDefaultInstanceForType() {
        return event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType.getDefaultInstance();
      }

      @java.lang.Override
      public event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType build() {
        event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType buildPartial() {
        event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType result = new event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType result) {
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000400) != 0)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
      }

      private void buildPartial0(event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.action_ = action_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.type_ = type_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.command_ = command_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.arguments_ = arguments_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.processId_ = processId_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.threadId_ = threadId_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.rule_ = rule_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.input_ = inputBuilder_ == null
              ? input_
              : inputBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.output_ = outputBuilder_ == null
              ? output_
              : outputBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.outcome_ = outcomeBuilder_ == null
              ? outcome_
              : outcomeBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType) {
          return mergeFrom((event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType other) {
        if (other == event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType.getDefaultInstance()) return this;
        if (other.action_ != 0) {
          setActionValue(other.getActionValue());
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (!other.getCommand().isEmpty()) {
          command_ = other.command_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (!other.getArguments().isEmpty()) {
          arguments_ = other.arguments_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (!other.getProcessId().isEmpty()) {
          processId_ = other.processId_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        if (other.getThreadId() != 0) {
          setThreadId(other.getThreadId());
        }
        if (!other.getRule().isEmpty()) {
          rule_ = other.rule_;
          bitField0_ |= 0x00000040;
          onChanged();
        }
        if (other.hasInput()) {
          mergeInput(other.getInput());
        }
        if (other.hasOutput()) {
          mergeOutput(other.getOutput());
        }
        if (other.hasOutcome()) {
          mergeOutcome(other.getOutcome());
        }
        if (dataBuilder_ == null) {
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
        } else {
          if (!other.data_.isEmpty()) {
            if (dataBuilder_.isEmpty()) {
              dataBuilder_.dispose();
              dataBuilder_ = null;
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000400);
              dataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDataFieldBuilder() : null;
            } else {
              dataBuilder_.addAllMessages(other.data_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                action_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                type_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                command_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                arguments_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                processId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 48: {
                threadId_ = input.readUInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 58: {
                rule_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              case 66: {
                input.readMessage(
                    getInputFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              case 74: {
                input.readMessage(
                    getOutputFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000100;
                break;
              } // case 74
              case 82: {
                input.readMessage(
                    getOutcomeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000200;
                break;
              } // case 82
              case 90: {
                event_logging.v4.DataComplexTypeOuterClass.DataComplexType m =
                    input.readMessage(
                        event_logging.v4.DataComplexTypeOuterClass.DataComplexType.parser(),
                        extensionRegistry);
                if (dataBuilder_ == null) {
                  ensureDataIsMutable();
                  data_.add(m);
                } else {
                  dataBuilder_.addMessage(m);
                }
                break;
              } // case 90
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int action_ = 0;
      /**
       * <pre>
       * The action that the process event is capturing, e.g. Startup, Shutdown.
       * </pre>
       *
       * <code>.event_logging.v4.ProcessActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
       * @return The enum numeric value on the wire for action.
       */
      @java.lang.Override public int getActionValue() {
        return action_;
      }
      /**
       * <pre>
       * The action that the process event is capturing, e.g. Startup, Shutdown.
       * </pre>
       *
       * <code>.event_logging.v4.ProcessActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
       * @param value The enum numeric value on the wire for action to set.
       * @return This builder for chaining.
       */
      public Builder setActionValue(int value) {
        action_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The action that the process event is capturing, e.g. Startup, Shutdown.
       * </pre>
       *
       * <code>.event_logging.v4.ProcessActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
       * @return The action.
       */
      @java.lang.Override
      public event_logging.v4.ProcessActionSimpleTypeOuterClass.ProcessActionSimpleType getAction() {
        event_logging.v4.ProcessActionSimpleTypeOuterClass.ProcessActionSimpleType result = event_logging.v4.ProcessActionSimpleTypeOuterClass.ProcessActionSimpleType.forNumber(action_);
        return result == null ? event_logging.v4.ProcessActionSimpleTypeOuterClass.ProcessActionSimpleType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The action that the process event is capturing, e.g. Startup, Shutdown.
       * </pre>
       *
       * <code>.event_logging.v4.ProcessActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
       * @param value The action to set.
       * @return This builder for chaining.
       */
      public Builder setAction(event_logging.v4.ProcessActionSimpleTypeOuterClass.ProcessActionSimpleType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        action_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The action that the process event is capturing, e.g. Startup, Shutdown.
       * </pre>
       *
       * <code>.event_logging.v4.ProcessActionSimpleType action = 1 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearAction() {
        bitField0_ = (bitField0_ & ~0x00000001);
        action_ = 0;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * The type of process, e.g. Application, OS, Service.
       * </pre>
       *
       * <code>.event_logging.v4.ProcessTypeSimpleType type = 2 [(.buf.validate.field) = { ... }</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * The type of process, e.g. Application, OS, Service.
       * </pre>
       *
       * <code>.event_logging.v4.ProcessTypeSimpleType type = 2 [(.buf.validate.field) = { ... }</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of process, e.g. Application, OS, Service.
       * </pre>
       *
       * <code>.event_logging.v4.ProcessTypeSimpleType type = 2 [(.buf.validate.field) = { ... }</code>
       * @return The type.
       */
      @java.lang.Override
      public event_logging.v4.ProcessTypeSimpleTypeOuterClass.ProcessTypeSimpleType getType() {
        event_logging.v4.ProcessTypeSimpleTypeOuterClass.ProcessTypeSimpleType result = event_logging.v4.ProcessTypeSimpleTypeOuterClass.ProcessTypeSimpleType.forNumber(type_);
        return result == null ? event_logging.v4.ProcessTypeSimpleTypeOuterClass.ProcessTypeSimpleType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The type of process, e.g. Application, OS, Service.
       * </pre>
       *
       * <code>.event_logging.v4.ProcessTypeSimpleType type = 2 [(.buf.validate.field) = { ... }</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(event_logging.v4.ProcessTypeSimpleTypeOuterClass.ProcessTypeSimpleType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The type of process, e.g. Application, OS, Service.
       * </pre>
       *
       * <code>.event_logging.v4.ProcessTypeSimpleType type = 2 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object command_ = "";
      /**
       * <pre>
       * The name of the process.
       * </pre>
       *
       * <code>string command = 3 [(.buf.validate.field) = { ... }</code>
       * @return The command.
       */
      public java.lang.String getCommand() {
        java.lang.Object ref = command_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          command_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the process.
       * </pre>
       *
       * <code>string command = 3 [(.buf.validate.field) = { ... }</code>
       * @return The bytes for command.
       */
      public com.google.protobuf.ByteString
          getCommandBytes() {
        java.lang.Object ref = command_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          command_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the process.
       * </pre>
       *
       * <code>string command = 3 [(.buf.validate.field) = { ... }</code>
       * @param value The command to set.
       * @return This builder for chaining.
       */
      public Builder setCommand(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        command_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the process.
       * </pre>
       *
       * <code>string command = 3 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearCommand() {
        command_ = getDefaultInstance().getCommand();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the process.
       * </pre>
       *
       * <code>string command = 3 [(.buf.validate.field) = { ... }</code>
       * @param value The bytes for command to set.
       * @return This builder for chaining.
       */
      public Builder setCommandBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        command_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.lang.Object arguments_ = "";
      /**
       * <pre>
       * The process command arguments/parameters.
       * </pre>
       *
       * <code>string arguments = 4;</code>
       * @return The arguments.
       */
      public java.lang.String getArguments() {
        java.lang.Object ref = arguments_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          arguments_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The process command arguments/parameters.
       * </pre>
       *
       * <code>string arguments = 4;</code>
       * @return The bytes for arguments.
       */
      public com.google.protobuf.ByteString
          getArgumentsBytes() {
        java.lang.Object ref = arguments_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          arguments_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The process command arguments/parameters.
       * </pre>
       *
       * <code>string arguments = 4;</code>
       * @param value The arguments to set.
       * @return This builder for chaining.
       */
      public Builder setArguments(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        arguments_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The process command arguments/parameters.
       * </pre>
       *
       * <code>string arguments = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearArguments() {
        arguments_ = getDefaultInstance().getArguments();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The process command arguments/parameters.
       * </pre>
       *
       * <code>string arguments = 4;</code>
       * @param value The bytes for arguments to set.
       * @return This builder for chaining.
       */
      public Builder setArgumentsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        arguments_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private java.lang.Object processId_ = "";
      /**
       * <pre>
       * The system identifier for the process.
       * </pre>
       *
       * <code>string process_id = 5;</code>
       * @return The processId.
       */
      public java.lang.String getProcessId() {
        java.lang.Object ref = processId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          processId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The system identifier for the process.
       * </pre>
       *
       * <code>string process_id = 5;</code>
       * @return The bytes for processId.
       */
      public com.google.protobuf.ByteString
          getProcessIdBytes() {
        java.lang.Object ref = processId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          processId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The system identifier for the process.
       * </pre>
       *
       * <code>string process_id = 5;</code>
       * @param value The processId to set.
       * @return This builder for chaining.
       */
      public Builder setProcessId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        processId_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The system identifier for the process.
       * </pre>
       *
       * <code>string process_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearProcessId() {
        processId_ = getDefaultInstance().getProcessId();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The system identifier for the process.
       * </pre>
       *
       * <code>string process_id = 5;</code>
       * @param value The bytes for processId to set.
       * @return This builder for chaining.
       */
      public Builder setProcessIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        processId_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      private int threadId_ ;
      /**
       * <pre>
       * The thread identifier for the process.
       * </pre>
       *
       * <code>uint32 thread_id = 6 [(.buf.validate.field) = { ... }</code>
       * @return The threadId.
       */
      @java.lang.Override
      public int getThreadId() {
        return threadId_;
      }
      /**
       * <pre>
       * The thread identifier for the process.
       * </pre>
       *
       * <code>uint32 thread_id = 6 [(.buf.validate.field) = { ... }</code>
       * @param value The threadId to set.
       * @return This builder for chaining.
       */
      public Builder setThreadId(int value) {

        threadId_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The thread identifier for the process.
       * </pre>
       *
       * <code>uint32 thread_id = 6 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearThreadId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        threadId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object rule_ = "";
      /**
       * <pre>
       * The rule that was triggered when this process event happened.
       * </pre>
       *
       * <code>string rule = 7;</code>
       * @return The rule.
       */
      public java.lang.String getRule() {
        java.lang.Object ref = rule_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          rule_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The rule that was triggered when this process event happened.
       * </pre>
       *
       * <code>string rule = 7;</code>
       * @return The bytes for rule.
       */
      public com.google.protobuf.ByteString
          getRuleBytes() {
        java.lang.Object ref = rule_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rule_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The rule that was triggered when this process event happened.
       * </pre>
       *
       * <code>string rule = 7;</code>
       * @param value The rule to set.
       * @return This builder for chaining.
       */
      public Builder setRule(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        rule_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The rule that was triggered when this process event happened.
       * </pre>
       *
       * <code>string rule = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearRule() {
        rule_ = getDefaultInstance().getRule();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The rule that was triggered when this process event happened.
       * </pre>
       *
       * <code>string rule = 7;</code>
       * @param value The bytes for rule to set.
       * @return This builder for chaining.
       */
      public Builder setRuleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        rule_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }

      private event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType input_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.Builder, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder> inputBuilder_;
      /**
       * <pre>
       * Any objects used as input to the process.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType input = 8;</code>
       * @return Whether the input field is set.
       */
      public boolean hasInput() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * Any objects used as input to the process.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType input = 8;</code>
       * @return The input.
       */
      public event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType getInput() {
        if (inputBuilder_ == null) {
          return input_ == null ? event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.getDefaultInstance() : input_;
        } else {
          return inputBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Any objects used as input to the process.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType input = 8;</code>
       */
      public Builder setInput(event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType value) {
        if (inputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          input_ = value;
        } else {
          inputBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any objects used as input to the process.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType input = 8;</code>
       */
      public Builder setInput(
          event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.Builder builderForValue) {
        if (inputBuilder_ == null) {
          input_ = builderForValue.build();
        } else {
          inputBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any objects used as input to the process.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType input = 8;</code>
       */
      public Builder mergeInput(event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType value) {
        if (inputBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0) &&
            input_ != null &&
            input_ != event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.getDefaultInstance()) {
            getInputBuilder().mergeFrom(value);
          } else {
            input_ = value;
          }
        } else {
          inputBuilder_.mergeFrom(value);
        }
        if (input_ != null) {
          bitField0_ |= 0x00000080;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Any objects used as input to the process.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType input = 8;</code>
       */
      public Builder clearInput() {
        bitField0_ = (bitField0_ & ~0x00000080);
        input_ = null;
        if (inputBuilder_ != null) {
          inputBuilder_.dispose();
          inputBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any objects used as input to the process.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType input = 8;</code>
       */
      public event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.Builder getInputBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getInputFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Any objects used as input to the process.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType input = 8;</code>
       */
      public event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder getInputOrBuilder() {
        if (inputBuilder_ != null) {
          return inputBuilder_.getMessageOrBuilder();
        } else {
          return input_ == null ?
              event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.getDefaultInstance() : input_;
        }
      }
      /**
       * <pre>
       * Any objects used as input to the process.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType input = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.Builder, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder> 
          getInputFieldBuilder() {
        if (inputBuilder_ == null) {
          inputBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.Builder, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder>(
                  getInput(),
                  getParentForChildren(),
                  isClean());
          input_ = null;
        }
        return inputBuilder_;
      }

      private event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType output_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.Builder, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder> outputBuilder_;
      /**
       * <pre>
       * Any objects output by the process
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType output = 9;</code>
       * @return Whether the output field is set.
       */
      public boolean hasOutput() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * Any objects output by the process
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType output = 9;</code>
       * @return The output.
       */
      public event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType getOutput() {
        if (outputBuilder_ == null) {
          return output_ == null ? event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.getDefaultInstance() : output_;
        } else {
          return outputBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Any objects output by the process
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType output = 9;</code>
       */
      public Builder setOutput(event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType value) {
        if (outputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          output_ = value;
        } else {
          outputBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any objects output by the process
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType output = 9;</code>
       */
      public Builder setOutput(
          event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.Builder builderForValue) {
        if (outputBuilder_ == null) {
          output_ = builderForValue.build();
        } else {
          outputBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any objects output by the process
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType output = 9;</code>
       */
      public Builder mergeOutput(event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType value) {
        if (outputBuilder_ == null) {
          if (((bitField0_ & 0x00000100) != 0) &&
            output_ != null &&
            output_ != event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.getDefaultInstance()) {
            getOutputBuilder().mergeFrom(value);
          } else {
            output_ = value;
          }
        } else {
          outputBuilder_.mergeFrom(value);
        }
        if (output_ != null) {
          bitField0_ |= 0x00000100;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Any objects output by the process
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType output = 9;</code>
       */
      public Builder clearOutput() {
        bitField0_ = (bitField0_ & ~0x00000100);
        output_ = null;
        if (outputBuilder_ != null) {
          outputBuilder_.dispose();
          outputBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any objects output by the process
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType output = 9;</code>
       */
      public event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.Builder getOutputBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getOutputFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Any objects output by the process
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType output = 9;</code>
       */
      public event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder getOutputOrBuilder() {
        if (outputBuilder_ != null) {
          return outputBuilder_.getMessageOrBuilder();
        } else {
          return output_ == null ?
              event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.getDefaultInstance() : output_;
        }
      }
      /**
       * <pre>
       * Any objects output by the process
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType output = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.Builder, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder> 
          getOutputFieldBuilder() {
        if (outputBuilder_ == null) {
          outputBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.Builder, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder>(
                  getOutput(),
                  getParentForChildren(),
                  isClean());
          output_ = null;
        }
        return outputBuilder_;
      }

      private event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType outcome_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType, event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.Builder, event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexTypeOrBuilder> outcomeBuilder_;
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 10;</code>
       * @return Whether the outcome field is set.
       */
      public boolean hasOutcome() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 10;</code>
       * @return The outcome.
       */
      public event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType getOutcome() {
        if (outcomeBuilder_ == null) {
          return outcome_ == null ? event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.getDefaultInstance() : outcome_;
        } else {
          return outcomeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 10;</code>
       */
      public Builder setOutcome(event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType value) {
        if (outcomeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          outcome_ = value;
        } else {
          outcomeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 10;</code>
       */
      public Builder setOutcome(
          event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.Builder builderForValue) {
        if (outcomeBuilder_ == null) {
          outcome_ = builderForValue.build();
        } else {
          outcomeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 10;</code>
       */
      public Builder mergeOutcome(event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType value) {
        if (outcomeBuilder_ == null) {
          if (((bitField0_ & 0x00000200) != 0) &&
            outcome_ != null &&
            outcome_ != event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.getDefaultInstance()) {
            getOutcomeBuilder().mergeFrom(value);
          } else {
            outcome_ = value;
          }
        } else {
          outcomeBuilder_.mergeFrom(value);
        }
        if (outcome_ != null) {
          bitField0_ |= 0x00000200;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 10;</code>
       */
      public Builder clearOutcome() {
        bitField0_ = (bitField0_ & ~0x00000200);
        outcome_ = null;
        if (outcomeBuilder_ != null) {
          outcomeBuilder_.dispose();
          outcomeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 10;</code>
       */
      public event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.Builder getOutcomeBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getOutcomeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 10;</code>
       */
      public event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexTypeOrBuilder getOutcomeOrBuilder() {
        if (outcomeBuilder_ != null) {
          return outcomeBuilder_.getMessageOrBuilder();
        } else {
          return outcome_ == null ?
              event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.getDefaultInstance() : outcome_;
        }
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType, event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.Builder, event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexTypeOrBuilder> 
          getOutcomeFieldBuilder() {
        if (outcomeBuilder_ == null) {
          outcomeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType, event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.Builder, event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexTypeOrBuilder>(
                  getOutcome(),
                  getParentForChildren(),
                  isClean());
          outcome_ = null;
        }
        return outcomeBuilder_;
      }

      private java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> data_ =
        java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000400) != 0)) {
          data_ = new java.util.ArrayList<event_logging.v4.DataComplexTypeOuterClass.DataComplexType>(data_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> dataBuilder_;

      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> getDataList() {
        if (dataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(data_);
        } else {
          return dataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public int getDataCount() {
        if (dataBuilder_ == null) {
          return data_.size();
        } else {
          return dataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);
        } else {
          return dataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
        } else {
          dataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
        } else {
          dataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(index, value);
          onChanged();
        } else {
          dataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(
          event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexType> values) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, data_);
          onChanged();
        } else {
          dataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public Builder removeData(int index) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.remove(index);
          onChanged();
        } else {
          dataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder getDataBuilder(
          int index) {
        return getDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
          int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);  } else {
          return dataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
           getDataOrBuilderList() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(data_);
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder addDataBuilder() {
        return getDataFieldBuilder().addBuilder(
            event_logging.v4.DataComplexTypeOuterClass.DataComplexType.getDefaultInstance());
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder addDataBuilder(
          int index) {
        return getDataFieldBuilder().addBuilder(
            index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.getDefaultInstance());
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 11 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder> 
           getDataBuilderList() {
        return getDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder>(
                  data_,
                  ((bitField0_ & 0x00000400) != 0),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:event_logging.v4.ProcessComplexType)
    }

    // @@protoc_insertion_point(class_scope:event_logging.v4.ProcessComplexType)
    private static final event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType();
    }

    public static event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProcessComplexType>
        PARSER = new com.google.protobuf.AbstractParser<ProcessComplexType>() {
      @java.lang.Override
      public ProcessComplexType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ProcessComplexType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProcessComplexType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_logging_v4_ProcessComplexType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_event_logging_v4_ProcessComplexType_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n+event_logging/v4/process_complex_type." +
      "proto\022\020event_logging.v4\032(event_logging/v" +
      "4/data_complex_type.proto\0320event_logging" +
      "/v4/multi_object_complex_type.proto\032+eve" +
      "nt_logging/v4/outcome_complex_type.proto" +
      "\0321event_logging/v4/process_action_simple" +
      "_type.proto\032/event_logging/v4/process_ty" +
      "pe_simple_type.proto\032\033buf/validate/valid" +
      "ate.proto\"\343\003\n\022ProcessComplexType\022A\n\006acti" +
      "on\030\001 \001(\0162).event_logging.v4.ProcessActio" +
      "nSimpleTypeB\006\272H\003\310\001\001\022=\n\004type\030\002 \001(\0162\'.even" +
      "t_logging.v4.ProcessTypeSimpleTypeB\006\272H\003\310" +
      "\001\001\022\027\n\007command\030\003 \001(\tB\006\272H\003\310\001\001\022\021\n\targuments" +
      "\030\004 \001(\t\022\022\n\nprocess_id\030\005 \001(\t\022\032\n\tthread_id\030" +
      "\006 \001(\rB\007\272H\004*\002 \000\022\014\n\004rule\030\007 \001(\t\0227\n\005input\030\010 " +
      "\001(\0132(.event_logging.v4.MultiObjectComple" +
      "xType\0228\n\006output\030\t \001(\0132(.event_logging.v4" +
      ".MultiObjectComplexType\0225\n\007outcome\030\n \001(\013" +
      "2$.event_logging.v4.OutcomeComplexType\0227" +
      "\n\004data\030\013 \003(\0132!.event_logging.v4.DataComp" +
      "lexTypeB\006\272H\003\222\001\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          event_logging.v4.DataComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.MultiObjectComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.OutcomeComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.ProcessActionSimpleTypeOuterClass.getDescriptor(),
          event_logging.v4.ProcessTypeSimpleTypeOuterClass.getDescriptor(),
          build.buf.validate.ValidateProto.getDescriptor(),
        });
    internal_static_event_logging_v4_ProcessComplexType_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_event_logging_v4_ProcessComplexType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_event_logging_v4_ProcessComplexType_descriptor,
        new java.lang.String[] { "Action", "Type", "Command", "Arguments", "ProcessId", "ThreadId", "Rule", "Input", "Output", "Outcome", "Data", });
    descriptor.resolveAllFeaturesImmutable();
    event_logging.v4.DataComplexTypeOuterClass.getDescriptor();
    event_logging.v4.MultiObjectComplexTypeOuterClass.getDescriptor();
    event_logging.v4.OutcomeComplexTypeOuterClass.getDescriptor();
    event_logging.v4.ProcessActionSimpleTypeOuterClass.getDescriptor();
    event_logging.v4.ProcessTypeSimpleTypeOuterClass.getDescriptor();
    build.buf.validate.ValidateProto.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(build.buf.validate.ValidateProto.field);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
