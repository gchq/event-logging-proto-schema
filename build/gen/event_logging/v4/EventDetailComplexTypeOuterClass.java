// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event_logging/v4/event_detail_complex_type.proto
// Protobuf Java Version: 4.26.1

package event_logging.v4;

public final class EventDetailComplexTypeOuterClass {
  private EventDetailComplexTypeOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      EventDetailComplexTypeOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface EventDetailComplexTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_logging.v4.EventDetailComplexType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A name/code/ID to uniquely identify the logical event type within the service providing the events. E.g. a Windows eventId (i.e. representing 'Failed logon', 'Change password attempt', etc.) or for application logging: SaveRecord, ViewUserRecord, ViewSearchResults, etc. The granularity will depend on the application. Typically, the number of unique TypeIds will be in the 10s. Note, the values of the TypeId are not meant to be globally consistent, they will only be relevant within that service providing the events.
     * </pre>
     *
     * <code>string type_id = 1 [(.buf.validate.field) = { ... }</code>
     * @return The typeId.
     */
    java.lang.String getTypeId();
    /**
     * <pre>
     * A name/code/ID to uniquely identify the logical event type within the service providing the events. E.g. a Windows eventId (i.e. representing 'Failed logon', 'Change password attempt', etc.) or for application logging: SaveRecord, ViewUserRecord, ViewSearchResults, etc. The granularity will depend on the application. Typically, the number of unique TypeIds will be in the 10s. Note, the values of the TypeId are not meant to be globally consistent, they will only be relevant within that service providing the events.
     * </pre>
     *
     * <code>string type_id = 1 [(.buf.validate.field) = { ... }</code>
     * @return The bytes for typeId.
     */
    com.google.protobuf.ByteString
        getTypeIdBytes();

    /**
     * <pre>
     * Some human-readable descriptive text for the event type.
     * </pre>
     *
     * <code>string description = 2;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * Some human-readable descriptive text for the event type.
     * </pre>
     *
     * <code>string description = 2;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * The purpose/justification assigned to this event for user actions that are required to be justified for reasons of corporate policy, e.g. transferring data to removable media, viewing personnel records or making a high value payment.
     * </pre>
     *
     * <code>.event_logging.v4.PurposeComplexType purpose = 3;</code>
     * @return Whether the purpose field is set.
     */
    boolean hasPurpose();
    /**
     * <pre>
     * The purpose/justification assigned to this event for user actions that are required to be justified for reasons of corporate policy, e.g. transferring data to removable media, viewing personnel records or making a high value payment.
     * </pre>
     *
     * <code>.event_logging.v4.PurposeComplexType purpose = 3;</code>
     * @return The purpose.
     */
    event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexType getPurpose();
    /**
     * <pre>
     * The purpose/justification assigned to this event for user actions that are required to be justified for reasons of corporate policy, e.g. transferring data to removable media, viewing personnel records or making a high value payment.
     * </pre>
     *
     * <code>.event_logging.v4.PurposeComplexType purpose = 3;</code>
     */
    event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexTypeOrBuilder getPurposeOrBuilder();

    /**
     * <pre>
     * Used to record authentication events such as logon and logoff. Also used for recording authentication by physical access controls, e.g. doors/turnstiles. All authentication events that originate from a client device should record details of the client device in the event source.
     * </pre>
     *
     * <code>.event_logging.v4.AuthenticateComplexType authenticate = 4 [(.buf.validate.field) = { ... }</code>
     * @return Whether the authenticate field is set.
     */
    boolean hasAuthenticate();
    /**
     * <pre>
     * Used to record authentication events such as logon and logoff. Also used for recording authentication by physical access controls, e.g. doors/turnstiles. All authentication events that originate from a client device should record details of the client device in the event source.
     * </pre>
     *
     * <code>.event_logging.v4.AuthenticateComplexType authenticate = 4 [(.buf.validate.field) = { ... }</code>
     * @return The authenticate.
     */
    event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType getAuthenticate();
    /**
     * <pre>
     * Used to record authentication events such as logon and logoff. Also used for recording authentication by physical access controls, e.g. doors/turnstiles. All authentication events that originate from a client device should record details of the client device in the event source.
     * </pre>
     *
     * <code>.event_logging.v4.AuthenticateComplexType authenticate = 4 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexTypeOrBuilder getAuthenticateOrBuilder();

    /**
     * <pre>
     * All events related to account management such as adding and removing user and system accounts.
     * </pre>
     *
     * <code>.event_logging.v4.AuthoriseComplexType authorise = 5 [(.buf.validate.field) = { ... }</code>
     * @return Whether the authorise field is set.
     */
    boolean hasAuthorise();
    /**
     * <pre>
     * All events related to account management such as adding and removing user and system accounts.
     * </pre>
     *
     * <code>.event_logging.v4.AuthoriseComplexType authorise = 5 [(.buf.validate.field) = { ... }</code>
     * @return The authorise.
     */
    event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexType getAuthorise();
    /**
     * <pre>
     * All events related to account management such as adding and removing user and system accounts.
     * </pre>
     *
     * <code>.event_logging.v4.AuthoriseComplexType authorise = 5 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexTypeOrBuilder getAuthoriseOrBuilder();

    /**
     * <pre>
     * Any events related to searching for data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.SearchComplexType search = 6 [(.buf.validate.field) = { ... }</code>
     * @return Whether the search field is set.
     */
    boolean hasSearch();
    /**
     * <pre>
     * Any events related to searching for data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.SearchComplexType search = 6 [(.buf.validate.field) = { ... }</code>
     * @return The search.
     */
    event_logging.v4.SearchComplexTypeOuterClass.SearchComplexType getSearch();
    /**
     * <pre>
     * Any events related to searching for data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.SearchComplexType search = 6 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.SearchComplexTypeOuterClass.SearchComplexTypeOrBuilder getSearchOrBuilder();

    /**
     * <pre>
     * All events related to copying data, files, documents, etc. should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.CopyComplexType copy = 7 [(.buf.validate.field) = { ... }</code>
     * @return Whether the copy field is set.
     */
    boolean hasCopy();
    /**
     * <pre>
     * All events related to copying data, files, documents, etc. should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.CopyComplexType copy = 7 [(.buf.validate.field) = { ... }</code>
     * @return The copy.
     */
    event_logging.v4.CopyComplexTypeOuterClass.CopyComplexType getCopy();
    /**
     * <pre>
     * All events related to copying data, files, documents, etc. should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.CopyComplexType copy = 7 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.CopyComplexTypeOuterClass.CopyComplexTypeOrBuilder getCopyOrBuilder();

    /**
     * <pre>
     * All events related to moving data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.MoveComplexType move = 8 [(.buf.validate.field) = { ... }</code>
     * @return Whether the move field is set.
     */
    boolean hasMove();
    /**
     * <pre>
     * All events related to moving data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.MoveComplexType move = 8 [(.buf.validate.field) = { ... }</code>
     * @return The move.
     */
    event_logging.v4.MoveComplexTypeOuterClass.MoveComplexType getMove();
    /**
     * <pre>
     * All events related to moving data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.MoveComplexType move = 8 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.MoveComplexTypeOuterClass.MoveComplexTypeOrBuilder getMoveOrBuilder();

    /**
     * <pre>
     * All events related to creating data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.CreateComplexType create = 9 [(.buf.validate.field) = { ... }</code>
     * @return Whether the create field is set.
     */
    boolean hasCreate();
    /**
     * <pre>
     * All events related to creating data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.CreateComplexType create = 9 [(.buf.validate.field) = { ... }</code>
     * @return The create.
     */
    event_logging.v4.CreateComplexTypeOuterClass.CreateComplexType getCreate();
    /**
     * <pre>
     * All events related to creating data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.CreateComplexType create = 9 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.CreateComplexTypeOuterClass.CreateComplexTypeOrBuilder getCreateOrBuilder();

    /**
     * <pre>
     * All events related to viewing data should use this element. Note that viewing data is subtly different from reading data. This event is to be used when data is displayed to an end user and not for data read by an application.
     * </pre>
     *
     * <code>.event_logging.v4.ViewComplexType view = 10 [(.buf.validate.field) = { ... }</code>
     * @return Whether the view field is set.
     */
    boolean hasView();
    /**
     * <pre>
     * All events related to viewing data should use this element. Note that viewing data is subtly different from reading data. This event is to be used when data is displayed to an end user and not for data read by an application.
     * </pre>
     *
     * <code>.event_logging.v4.ViewComplexType view = 10 [(.buf.validate.field) = { ... }</code>
     * @return The view.
     */
    event_logging.v4.ViewComplexTypeOuterClass.ViewComplexType getView();
    /**
     * <pre>
     * All events related to viewing data should use this element. Note that viewing data is subtly different from reading data. This event is to be used when data is displayed to an end user and not for data read by an application.
     * </pre>
     *
     * <code>.event_logging.v4.ViewComplexType view = 10 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.ViewComplexTypeOuterClass.ViewComplexTypeOrBuilder getViewOrBuilder();

    /**
     * <pre>
     * All events related to importing data should use this element. An import could include any batch insert of data from an external source or uploading a file.
     * </pre>
     *
     * <code>.event_logging.v4.ImportComplexType import_field = 11 [(.buf.validate.field) = { ... }</code>
     * @return Whether the importField field is set.
     */
    boolean hasImportField();
    /**
     * <pre>
     * All events related to importing data should use this element. An import could include any batch insert of data from an external source or uploading a file.
     * </pre>
     *
     * <code>.event_logging.v4.ImportComplexType import_field = 11 [(.buf.validate.field) = { ... }</code>
     * @return The importField.
     */
    event_logging.v4.ImportComplexTypeOuterClass.ImportComplexType getImportField();
    /**
     * <pre>
     * All events related to importing data should use this element. An import could include any batch insert of data from an external source or uploading a file.
     * </pre>
     *
     * <code>.event_logging.v4.ImportComplexType import_field = 11 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.ImportComplexTypeOuterClass.ImportComplexTypeOrBuilder getImportFieldOrBuilder();

    /**
     * <pre>
     * All events related to exporting data should use this element. An export could include activities such as downloading data from an application or generating a report.
     * </pre>
     *
     * <code>.event_logging.v4.ExportComplexType export = 12 [(.buf.validate.field) = { ... }</code>
     * @return Whether the export field is set.
     */
    boolean hasExport();
    /**
     * <pre>
     * All events related to exporting data should use this element. An export could include activities such as downloading data from an application or generating a report.
     * </pre>
     *
     * <code>.event_logging.v4.ExportComplexType export = 12 [(.buf.validate.field) = { ... }</code>
     * @return The export.
     */
    event_logging.v4.ExportComplexTypeOuterClass.ExportComplexType getExport();
    /**
     * <pre>
     * All events related to exporting data should use this element. An export could include activities such as downloading data from an application or generating a report.
     * </pre>
     *
     * <code>.event_logging.v4.ExportComplexType export = 12 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.ExportComplexTypeOuterClass.ExportComplexTypeOrBuilder getExportOrBuilder();

    /**
     * <pre>
     * All events related to updating data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.UpdateComplexType update = 13 [(.buf.validate.field) = { ... }</code>
     * @return Whether the update field is set.
     */
    boolean hasUpdate();
    /**
     * <pre>
     * All events related to updating data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.UpdateComplexType update = 13 [(.buf.validate.field) = { ... }</code>
     * @return The update.
     */
    event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType getUpdate();
    /**
     * <pre>
     * All events related to updating data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.UpdateComplexType update = 13 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexTypeOrBuilder getUpdateOrBuilder();

    /**
     * <pre>
     * All events related to deleting data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.DeleteComplexType delete = 14 [(.buf.validate.field) = { ... }</code>
     * @return Whether the delete field is set.
     */
    boolean hasDelete();
    /**
     * <pre>
     * All events related to deleting data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.DeleteComplexType delete = 14 [(.buf.validate.field) = { ... }</code>
     * @return The delete.
     */
    event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexType getDelete();
    /**
     * <pre>
     * All events related to deleting data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.DeleteComplexType delete = 14 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexTypeOrBuilder getDeleteOrBuilder();

    /**
     * <pre>
     * Whenever processes such as applications or services are started, stopped etc., this should be recorded in this element. It also covers the running of batch processes or jobs.
     * </pre>
     *
     * <code>.event_logging.v4.ProcessComplexType process = 15 [(.buf.validate.field) = { ... }</code>
     * @return Whether the process field is set.
     */
    boolean hasProcess();
    /**
     * <pre>
     * Whenever processes such as applications or services are started, stopped etc., this should be recorded in this element. It also covers the running of batch processes or jobs.
     * </pre>
     *
     * <code>.event_logging.v4.ProcessComplexType process = 15 [(.buf.validate.field) = { ... }</code>
     * @return The process.
     */
    event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType getProcess();
    /**
     * <pre>
     * Whenever processes such as applications or services are started, stopped etc., this should be recorded in this element. It also covers the running of batch processes or jobs.
     * </pre>
     *
     * <code>.event_logging.v4.ProcessComplexType process = 15 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexTypeOrBuilder getProcessOrBuilder();

    /**
     * <pre>
     * All events related to printing should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.PrintComplexType print = 16 [(.buf.validate.field) = { ... }</code>
     * @return Whether the print field is set.
     */
    boolean hasPrint();
    /**
     * <pre>
     * All events related to printing should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.PrintComplexType print = 16 [(.buf.validate.field) = { ... }</code>
     * @return The print.
     */
    event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType getPrint();
    /**
     * <pre>
     * All events related to printing should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.PrintComplexType print = 16 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.PrintComplexTypeOuterClass.PrintComplexTypeOrBuilder getPrintOrBuilder();

    /**
     * <pre>
     * Details about installation of either hardware or software.
     * </pre>
     *
     * <code>.event_logging.v4.InstallComplexType install = 17 [(.buf.validate.field) = { ... }</code>
     * @return Whether the install field is set.
     */
    boolean hasInstall();
    /**
     * <pre>
     * Details about installation of either hardware or software.
     * </pre>
     *
     * <code>.event_logging.v4.InstallComplexType install = 17 [(.buf.validate.field) = { ... }</code>
     * @return The install.
     */
    event_logging.v4.InstallComplexTypeOuterClass.InstallComplexType getInstall();
    /**
     * <pre>
     * Details about installation of either hardware or software.
     * </pre>
     *
     * <code>.event_logging.v4.InstallComplexType install = 17 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.InstallComplexTypeOuterClass.InstallComplexTypeOrBuilder getInstallOrBuilder();

    /**
     * <pre>
     * Details about removal of either hardware or software.
     * </pre>
     *
     * <code>.event_logging.v4.UninstallComplexType uninstall = 18 [(.buf.validate.field) = { ... }</code>
     * @return Whether the uninstall field is set.
     */
    boolean hasUninstall();
    /**
     * <pre>
     * Details about removal of either hardware or software.
     * </pre>
     *
     * <code>.event_logging.v4.UninstallComplexType uninstall = 18 [(.buf.validate.field) = { ... }</code>
     * @return The uninstall.
     */
    event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexType getUninstall();
    /**
     * <pre>
     * Details about removal of either hardware or software.
     * </pre>
     *
     * <code>.event_logging.v4.UninstallComplexType uninstall = 18 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexTypeOrBuilder getUninstallOrBuilder();

    /**
     * <pre>
     * Any events related to network traffic, filtering or access should be recorded using this element.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkEventActionComplexType network = 19 [(.buf.validate.field) = { ... }</code>
     * @return Whether the network field is set.
     */
    boolean hasNetwork();
    /**
     * <pre>
     * Any events related to network traffic, filtering or access should be recorded using this element.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkEventActionComplexType network = 19 [(.buf.validate.field) = { ... }</code>
     * @return The network.
     */
    event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexType getNetwork();
    /**
     * <pre>
     * Any events related to network traffic, filtering or access should be recorded using this element.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkEventActionComplexType network = 19 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexTypeOrBuilder getNetworkOrBuilder();

    /**
     * <pre>
     * An alert event according to the system producing the event, e.g. an event raised when an anti-malware system finds malware.
     * </pre>
     *
     * <code>.event_logging.v4.AlertComplexType alert = 20 [(.buf.validate.field) = { ... }</code>
     * @return Whether the alert field is set.
     */
    boolean hasAlert();
    /**
     * <pre>
     * An alert event according to the system producing the event, e.g. an event raised when an anti-malware system finds malware.
     * </pre>
     *
     * <code>.event_logging.v4.AlertComplexType alert = 20 [(.buf.validate.field) = { ... }</code>
     * @return The alert.
     */
    event_logging.v4.AlertComplexTypeOuterClass.AlertComplexType getAlert();
    /**
     * <pre>
     * An alert event according to the system producing the event, e.g. an event raised when an anti-malware system finds malware.
     * </pre>
     *
     * <code>.event_logging.v4.AlertComplexType alert = 20 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.AlertComplexTypeOuterClass.AlertComplexTypeOrBuilder getAlertOrBuilder();

    /**
     * <pre>
     * Used for send events that are at a higher level than a network/send event, e.g. sending an email
     * </pre>
     *
     * <code>.event_logging.v4.SendComplexType send = 21 [(.buf.validate.field) = { ... }</code>
     * @return Whether the send field is set.
     */
    boolean hasSend();
    /**
     * <pre>
     * Used for send events that are at a higher level than a network/send event, e.g. sending an email
     * </pre>
     *
     * <code>.event_logging.v4.SendComplexType send = 21 [(.buf.validate.field) = { ... }</code>
     * @return The send.
     */
    event_logging.v4.SendComplexTypeOuterClass.SendComplexType getSend();
    /**
     * <pre>
     * Used for send events that are at a higher level than a network/send event, e.g. sending an email
     * </pre>
     *
     * <code>.event_logging.v4.SendComplexType send = 21 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.SendComplexTypeOuterClass.SendComplexTypeOrBuilder getSendOrBuilder();

    /**
     * <pre>
     * Used for receive events that are at a higher level than a network/receive event, e.g. receiving an email
     * </pre>
     *
     * <code>.event_logging.v4.ReceiveComplexType receive = 22 [(.buf.validate.field) = { ... }</code>
     * @return Whether the receive field is set.
     */
    boolean hasReceive();
    /**
     * <pre>
     * Used for receive events that are at a higher level than a network/receive event, e.g. receiving an email
     * </pre>
     *
     * <code>.event_logging.v4.ReceiveComplexType receive = 22 [(.buf.validate.field) = { ... }</code>
     * @return The receive.
     */
    event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexType getReceive();
    /**
     * <pre>
     * Used for receive events that are at a higher level than a network/receive event, e.g. receiving an email
     * </pre>
     *
     * <code>.event_logging.v4.ReceiveComplexType receive = 22 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexTypeOrBuilder getReceiveOrBuilder();

    /**
     * <pre>
     * Any events relating to the action of approving/accepting or rejecting something, e.g. an approval step in a workflow, accepting a license agreement, or acceptable use policy. The event may relate to one user approving the work/action of another user or a single user accepting something.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType approval = 23 [(.buf.validate.field) = { ... }</code>
     * @return Whether the approval field is set.
     */
    boolean hasApproval();
    /**
     * <pre>
     * Any events relating to the action of approving/accepting or rejecting something, e.g. an approval step in a workflow, accepting a license agreement, or acceptable use policy. The event may relate to one user approving the work/action of another user or a single user accepting something.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType approval = 23 [(.buf.validate.field) = { ... }</code>
     * @return The approval.
     */
    event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexType getApproval();
    /**
     * <pre>
     * Any events relating to the action of approving/accepting or rejecting something, e.g. an approval step in a workflow, accepting a license agreement, or acceptable use policy. The event may relate to one user approving the work/action of another user or a single user accepting something.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType approval = 23 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexTypeOrBuilder getApprovalOrBuilder();

    /**
     * <pre>
     * This element should be used were the type of the event cannot be described by any of the other event actions, or the event type is unknown.
     * </pre>
     *
     * <code>.event_logging.v4.EventDetailComplexType.UnknownType unknown = 24 [(.buf.validate.field) = { ... }</code>
     * @return Whether the unknown field is set.
     */
    boolean hasUnknown();
    /**
     * <pre>
     * This element should be used were the type of the event cannot be described by any of the other event actions, or the event type is unknown.
     * </pre>
     *
     * <code>.event_logging.v4.EventDetailComplexType.UnknownType unknown = 24 [(.buf.validate.field) = { ... }</code>
     * @return The unknown.
     */
    event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType getUnknown();
    /**
     * <pre>
     * This element should be used were the type of the event cannot be described by any of the other event actions, or the event type is unknown.
     * </pre>
     *
     * <code>.event_logging.v4.EventDetailComplexType.UnknownType unknown = 24 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownTypeOrBuilder getUnknownOrBuilder();
  }
  /**
   * <pre>
   * This type describes the details of what happened in the event: the type of the event, why it happened and the event action.
   * </pre>
   *
   * Protobuf type {@code event_logging.v4.EventDetailComplexType}
   */
  public static final class EventDetailComplexType extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:event_logging.v4.EventDetailComplexType)
      EventDetailComplexTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        EventDetailComplexType.class.getName());
    }
    // Use EventDetailComplexType.newBuilder() to construct.
    private EventDetailComplexType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private EventDetailComplexType() {
      typeId_ = "";
      description_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return event_logging.v4.EventDetailComplexTypeOuterClass.internal_static_event_logging_v4_EventDetailComplexType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return event_logging.v4.EventDetailComplexTypeOuterClass.internal_static_event_logging_v4_EventDetailComplexType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.class, event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.Builder.class);
    }

    public interface UnknownTypeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:event_logging.v4.EventDetailComplexType.UnknownType)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
       */
      java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> 
          getDataList();
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
       */
      event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index);
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
       */
      int getDataCount();
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
       */
      java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
          getDataOrBuilderList();
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
       */
      event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
          int index);
    }
    /**
     * <pre>
     * This type should be used were the type of the event cannot be described by any of the other event actions, or the event type is unknown.
     * </pre>
     *
     * Protobuf type {@code event_logging.v4.EventDetailComplexType.UnknownType}
     */
    public static final class UnknownType extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:event_logging.v4.EventDetailComplexType.UnknownType)
        UnknownTypeOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 26,
          /* patch= */ 1,
          /* suffix= */ "",
          UnknownType.class.getName());
      }
      // Use UnknownType.newBuilder() to construct.
      private UnknownType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private UnknownType() {
        data_ = java.util.Collections.emptyList();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_logging.v4.EventDetailComplexTypeOuterClass.internal_static_event_logging_v4_EventDetailComplexType_UnknownType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_logging.v4.EventDetailComplexTypeOuterClass.internal_static_event_logging_v4_EventDetailComplexType_UnknownType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType.class, event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType.Builder.class);
      }

      public static final int DATA_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> data_;
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> getDataList() {
        return data_;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
          getDataOrBuilderList() {
        return data_;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public int getDataCount() {
        return data_.size();
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index) {
        return data_.get(index);
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
       */
      @java.lang.Override
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
          int index) {
        return data_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < data_.size(); i++) {
          output.writeMessage(1, data_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < data_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, data_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType)) {
          return super.equals(obj);
        }
        event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType other = (event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType) obj;

        if (!getDataList()
            .equals(other.getDataList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getDataCount() > 0) {
          hash = (37 * hash) + DATA_FIELD_NUMBER;
          hash = (53 * hash) + getDataList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * This type should be used were the type of the event cannot be described by any of the other event actions, or the event type is unknown.
       * </pre>
       *
       * Protobuf type {@code event_logging.v4.EventDetailComplexType.UnknownType}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:event_logging.v4.EventDetailComplexType.UnknownType)
          event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownTypeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return event_logging.v4.EventDetailComplexTypeOuterClass.internal_static_event_logging_v4_EventDetailComplexType_UnknownType_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return event_logging.v4.EventDetailComplexTypeOuterClass.internal_static_event_logging_v4_EventDetailComplexType_UnknownType_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType.class, event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType.Builder.class);
        }

        // Construct using event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          if (dataBuilder_ == null) {
            data_ = java.util.Collections.emptyList();
          } else {
            data_ = null;
            dataBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return event_logging.v4.EventDetailComplexTypeOuterClass.internal_static_event_logging_v4_EventDetailComplexType_UnknownType_descriptor;
        }

        @java.lang.Override
        public event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType getDefaultInstanceForType() {
          return event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType.getDefaultInstance();
        }

        @java.lang.Override
        public event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType build() {
          event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType buildPartial() {
          event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType result = new event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType result) {
          if (dataBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              data_ = java.util.Collections.unmodifiableList(data_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.data_ = data_;
          } else {
            result.data_ = dataBuilder_.build();
          }
        }

        private void buildPartial0(event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType result) {
          int from_bitField0_ = bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType) {
            return mergeFrom((event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType other) {
          if (other == event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType.getDefaultInstance()) return this;
          if (dataBuilder_ == null) {
            if (!other.data_.isEmpty()) {
              if (data_.isEmpty()) {
                data_ = other.data_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureDataIsMutable();
                data_.addAll(other.data_);
              }
              onChanged();
            }
          } else {
            if (!other.data_.isEmpty()) {
              if (dataBuilder_.isEmpty()) {
                dataBuilder_.dispose();
                dataBuilder_ = null;
                data_ = other.data_;
                bitField0_ = (bitField0_ & ~0x00000001);
                dataBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getDataFieldBuilder() : null;
              } else {
                dataBuilder_.addAllMessages(other.data_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  event_logging.v4.DataComplexTypeOuterClass.DataComplexType m =
                      input.readMessage(
                          event_logging.v4.DataComplexTypeOuterClass.DataComplexType.parser(),
                          extensionRegistry);
                  if (dataBuilder_ == null) {
                    ensureDataIsMutable();
                    data_.add(m);
                  } else {
                    dataBuilder_.addMessage(m);
                  }
                  break;
                } // case 10
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> data_ =
          java.util.Collections.emptyList();
        private void ensureDataIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            data_ = new java.util.ArrayList<event_logging.v4.DataComplexTypeOuterClass.DataComplexType>(data_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> dataBuilder_;

        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
         */
        public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> getDataList() {
          if (dataBuilder_ == null) {
            return java.util.Collections.unmodifiableList(data_);
          } else {
            return dataBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
         */
        public int getDataCount() {
          if (dataBuilder_ == null) {
            return data_.size();
          } else {
            return dataBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index) {
          if (dataBuilder_ == null) {
            return data_.get(index);
          } else {
            return dataBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder setData(
            int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
          if (dataBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDataIsMutable();
            data_.set(index, value);
            onChanged();
          } else {
            dataBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder setData(
            int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
          if (dataBuilder_ == null) {
            ensureDataIsMutable();
            data_.set(index, builderForValue.build());
            onChanged();
          } else {
            dataBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addData(event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
          if (dataBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDataIsMutable();
            data_.add(value);
            onChanged();
          } else {
            dataBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addData(
            int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
          if (dataBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureDataIsMutable();
            data_.add(index, value);
            onChanged();
          } else {
            dataBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addData(
            event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
          if (dataBuilder_ == null) {
            ensureDataIsMutable();
            data_.add(builderForValue.build());
            onChanged();
          } else {
            dataBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addData(
            int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
          if (dataBuilder_ == null) {
            ensureDataIsMutable();
            data_.add(index, builderForValue.build());
            onChanged();
          } else {
            dataBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder addAllData(
            java.lang.Iterable<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexType> values) {
          if (dataBuilder_ == null) {
            ensureDataIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, data_);
            onChanged();
          } else {
            dataBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder clearData() {
          if (dataBuilder_ == null) {
            data_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            dataBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
         */
        public Builder removeData(int index) {
          if (dataBuilder_ == null) {
            ensureDataIsMutable();
            data_.remove(index);
            onChanged();
          } else {
            dataBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder getDataBuilder(
            int index) {
          return getDataFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
            int index) {
          if (dataBuilder_ == null) {
            return data_.get(index);  } else {
            return dataBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
         */
        public java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
             getDataOrBuilderList() {
          if (dataBuilder_ != null) {
            return dataBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(data_);
          }
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder addDataBuilder() {
          return getDataFieldBuilder().addBuilder(
              event_logging.v4.DataComplexTypeOuterClass.DataComplexType.getDefaultInstance());
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
         */
        public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder addDataBuilder(
            int index) {
          return getDataFieldBuilder().addBuilder(
              index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.getDefaultInstance());
        }
        /**
         * <pre>
         * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
         * </pre>
         *
         * <code>repeated .event_logging.v4.DataComplexType data = 1 [(.buf.validate.field) = { ... }</code>
         */
        public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder> 
             getDataBuilderList() {
          return getDataFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
            getDataFieldBuilder() {
          if (dataBuilder_ == null) {
            dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder>(
                    data_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            data_ = null;
          }
          return dataBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:event_logging.v4.EventDetailComplexType.UnknownType)
      }

      // @@protoc_insertion_point(class_scope:event_logging.v4.EventDetailComplexType.UnknownType)
      private static final event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType();
      }

      public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<UnknownType>
          PARSER = new com.google.protobuf.AbstractParser<UnknownType>() {
        @java.lang.Override
        public UnknownType parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<UnknownType> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<UnknownType> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int TYPE_ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object typeId_ = "";
    /**
     * <pre>
     * A name/code/ID to uniquely identify the logical event type within the service providing the events. E.g. a Windows eventId (i.e. representing 'Failed logon', 'Change password attempt', etc.) or for application logging: SaveRecord, ViewUserRecord, ViewSearchResults, etc. The granularity will depend on the application. Typically, the number of unique TypeIds will be in the 10s. Note, the values of the TypeId are not meant to be globally consistent, they will only be relevant within that service providing the events.
     * </pre>
     *
     * <code>string type_id = 1 [(.buf.validate.field) = { ... }</code>
     * @return The typeId.
     */
    @java.lang.Override
    public java.lang.String getTypeId() {
      java.lang.Object ref = typeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        typeId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A name/code/ID to uniquely identify the logical event type within the service providing the events. E.g. a Windows eventId (i.e. representing 'Failed logon', 'Change password attempt', etc.) or for application logging: SaveRecord, ViewUserRecord, ViewSearchResults, etc. The granularity will depend on the application. Typically, the number of unique TypeIds will be in the 10s. Note, the values of the TypeId are not meant to be globally consistent, they will only be relevant within that service providing the events.
     * </pre>
     *
     * <code>string type_id = 1 [(.buf.validate.field) = { ... }</code>
     * @return The bytes for typeId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeIdBytes() {
      java.lang.Object ref = typeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        typeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object description_ = "";
    /**
     * <pre>
     * Some human-readable descriptive text for the event type.
     * </pre>
     *
     * <code>string description = 2;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Some human-readable descriptive text for the event type.
     * </pre>
     *
     * <code>string description = 2;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PURPOSE_FIELD_NUMBER = 3;
    private event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexType purpose_;
    /**
     * <pre>
     * The purpose/justification assigned to this event for user actions that are required to be justified for reasons of corporate policy, e.g. transferring data to removable media, viewing personnel records or making a high value payment.
     * </pre>
     *
     * <code>.event_logging.v4.PurposeComplexType purpose = 3;</code>
     * @return Whether the purpose field is set.
     */
    @java.lang.Override
    public boolean hasPurpose() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The purpose/justification assigned to this event for user actions that are required to be justified for reasons of corporate policy, e.g. transferring data to removable media, viewing personnel records or making a high value payment.
     * </pre>
     *
     * <code>.event_logging.v4.PurposeComplexType purpose = 3;</code>
     * @return The purpose.
     */
    @java.lang.Override
    public event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexType getPurpose() {
      return purpose_ == null ? event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexType.getDefaultInstance() : purpose_;
    }
    /**
     * <pre>
     * The purpose/justification assigned to this event for user actions that are required to be justified for reasons of corporate policy, e.g. transferring data to removable media, viewing personnel records or making a high value payment.
     * </pre>
     *
     * <code>.event_logging.v4.PurposeComplexType purpose = 3;</code>
     */
    @java.lang.Override
    public event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexTypeOrBuilder getPurposeOrBuilder() {
      return purpose_ == null ? event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexType.getDefaultInstance() : purpose_;
    }

    public static final int AUTHENTICATE_FIELD_NUMBER = 4;
    private event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType authenticate_;
    /**
     * <pre>
     * Used to record authentication events such as logon and logoff. Also used for recording authentication by physical access controls, e.g. doors/turnstiles. All authentication events that originate from a client device should record details of the client device in the event source.
     * </pre>
     *
     * <code>.event_logging.v4.AuthenticateComplexType authenticate = 4 [(.buf.validate.field) = { ... }</code>
     * @return Whether the authenticate field is set.
     */
    @java.lang.Override
    public boolean hasAuthenticate() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Used to record authentication events such as logon and logoff. Also used for recording authentication by physical access controls, e.g. doors/turnstiles. All authentication events that originate from a client device should record details of the client device in the event source.
     * </pre>
     *
     * <code>.event_logging.v4.AuthenticateComplexType authenticate = 4 [(.buf.validate.field) = { ... }</code>
     * @return The authenticate.
     */
    @java.lang.Override
    public event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType getAuthenticate() {
      return authenticate_ == null ? event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType.getDefaultInstance() : authenticate_;
    }
    /**
     * <pre>
     * Used to record authentication events such as logon and logoff. Also used for recording authentication by physical access controls, e.g. doors/turnstiles. All authentication events that originate from a client device should record details of the client device in the event source.
     * </pre>
     *
     * <code>.event_logging.v4.AuthenticateComplexType authenticate = 4 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexTypeOrBuilder getAuthenticateOrBuilder() {
      return authenticate_ == null ? event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType.getDefaultInstance() : authenticate_;
    }

    public static final int AUTHORISE_FIELD_NUMBER = 5;
    private event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexType authorise_;
    /**
     * <pre>
     * All events related to account management such as adding and removing user and system accounts.
     * </pre>
     *
     * <code>.event_logging.v4.AuthoriseComplexType authorise = 5 [(.buf.validate.field) = { ... }</code>
     * @return Whether the authorise field is set.
     */
    @java.lang.Override
    public boolean hasAuthorise() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * All events related to account management such as adding and removing user and system accounts.
     * </pre>
     *
     * <code>.event_logging.v4.AuthoriseComplexType authorise = 5 [(.buf.validate.field) = { ... }</code>
     * @return The authorise.
     */
    @java.lang.Override
    public event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexType getAuthorise() {
      return authorise_ == null ? event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexType.getDefaultInstance() : authorise_;
    }
    /**
     * <pre>
     * All events related to account management such as adding and removing user and system accounts.
     * </pre>
     *
     * <code>.event_logging.v4.AuthoriseComplexType authorise = 5 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexTypeOrBuilder getAuthoriseOrBuilder() {
      return authorise_ == null ? event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexType.getDefaultInstance() : authorise_;
    }

    public static final int SEARCH_FIELD_NUMBER = 6;
    private event_logging.v4.SearchComplexTypeOuterClass.SearchComplexType search_;
    /**
     * <pre>
     * Any events related to searching for data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.SearchComplexType search = 6 [(.buf.validate.field) = { ... }</code>
     * @return Whether the search field is set.
     */
    @java.lang.Override
    public boolean hasSearch() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Any events related to searching for data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.SearchComplexType search = 6 [(.buf.validate.field) = { ... }</code>
     * @return The search.
     */
    @java.lang.Override
    public event_logging.v4.SearchComplexTypeOuterClass.SearchComplexType getSearch() {
      return search_ == null ? event_logging.v4.SearchComplexTypeOuterClass.SearchComplexType.getDefaultInstance() : search_;
    }
    /**
     * <pre>
     * Any events related to searching for data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.SearchComplexType search = 6 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.SearchComplexTypeOuterClass.SearchComplexTypeOrBuilder getSearchOrBuilder() {
      return search_ == null ? event_logging.v4.SearchComplexTypeOuterClass.SearchComplexType.getDefaultInstance() : search_;
    }

    public static final int COPY_FIELD_NUMBER = 7;
    private event_logging.v4.CopyComplexTypeOuterClass.CopyComplexType copy_;
    /**
     * <pre>
     * All events related to copying data, files, documents, etc. should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.CopyComplexType copy = 7 [(.buf.validate.field) = { ... }</code>
     * @return Whether the copy field is set.
     */
    @java.lang.Override
    public boolean hasCopy() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * All events related to copying data, files, documents, etc. should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.CopyComplexType copy = 7 [(.buf.validate.field) = { ... }</code>
     * @return The copy.
     */
    @java.lang.Override
    public event_logging.v4.CopyComplexTypeOuterClass.CopyComplexType getCopy() {
      return copy_ == null ? event_logging.v4.CopyComplexTypeOuterClass.CopyComplexType.getDefaultInstance() : copy_;
    }
    /**
     * <pre>
     * All events related to copying data, files, documents, etc. should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.CopyComplexType copy = 7 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.CopyComplexTypeOuterClass.CopyComplexTypeOrBuilder getCopyOrBuilder() {
      return copy_ == null ? event_logging.v4.CopyComplexTypeOuterClass.CopyComplexType.getDefaultInstance() : copy_;
    }

    public static final int MOVE_FIELD_NUMBER = 8;
    private event_logging.v4.MoveComplexTypeOuterClass.MoveComplexType move_;
    /**
     * <pre>
     * All events related to moving data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.MoveComplexType move = 8 [(.buf.validate.field) = { ... }</code>
     * @return Whether the move field is set.
     */
    @java.lang.Override
    public boolean hasMove() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * All events related to moving data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.MoveComplexType move = 8 [(.buf.validate.field) = { ... }</code>
     * @return The move.
     */
    @java.lang.Override
    public event_logging.v4.MoveComplexTypeOuterClass.MoveComplexType getMove() {
      return move_ == null ? event_logging.v4.MoveComplexTypeOuterClass.MoveComplexType.getDefaultInstance() : move_;
    }
    /**
     * <pre>
     * All events related to moving data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.MoveComplexType move = 8 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.MoveComplexTypeOuterClass.MoveComplexTypeOrBuilder getMoveOrBuilder() {
      return move_ == null ? event_logging.v4.MoveComplexTypeOuterClass.MoveComplexType.getDefaultInstance() : move_;
    }

    public static final int CREATE_FIELD_NUMBER = 9;
    private event_logging.v4.CreateComplexTypeOuterClass.CreateComplexType create_;
    /**
     * <pre>
     * All events related to creating data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.CreateComplexType create = 9 [(.buf.validate.field) = { ... }</code>
     * @return Whether the create field is set.
     */
    @java.lang.Override
    public boolean hasCreate() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * All events related to creating data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.CreateComplexType create = 9 [(.buf.validate.field) = { ... }</code>
     * @return The create.
     */
    @java.lang.Override
    public event_logging.v4.CreateComplexTypeOuterClass.CreateComplexType getCreate() {
      return create_ == null ? event_logging.v4.CreateComplexTypeOuterClass.CreateComplexType.getDefaultInstance() : create_;
    }
    /**
     * <pre>
     * All events related to creating data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.CreateComplexType create = 9 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.CreateComplexTypeOuterClass.CreateComplexTypeOrBuilder getCreateOrBuilder() {
      return create_ == null ? event_logging.v4.CreateComplexTypeOuterClass.CreateComplexType.getDefaultInstance() : create_;
    }

    public static final int VIEW_FIELD_NUMBER = 10;
    private event_logging.v4.ViewComplexTypeOuterClass.ViewComplexType view_;
    /**
     * <pre>
     * All events related to viewing data should use this element. Note that viewing data is subtly different from reading data. This event is to be used when data is displayed to an end user and not for data read by an application.
     * </pre>
     *
     * <code>.event_logging.v4.ViewComplexType view = 10 [(.buf.validate.field) = { ... }</code>
     * @return Whether the view field is set.
     */
    @java.lang.Override
    public boolean hasView() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * All events related to viewing data should use this element. Note that viewing data is subtly different from reading data. This event is to be used when data is displayed to an end user and not for data read by an application.
     * </pre>
     *
     * <code>.event_logging.v4.ViewComplexType view = 10 [(.buf.validate.field) = { ... }</code>
     * @return The view.
     */
    @java.lang.Override
    public event_logging.v4.ViewComplexTypeOuterClass.ViewComplexType getView() {
      return view_ == null ? event_logging.v4.ViewComplexTypeOuterClass.ViewComplexType.getDefaultInstance() : view_;
    }
    /**
     * <pre>
     * All events related to viewing data should use this element. Note that viewing data is subtly different from reading data. This event is to be used when data is displayed to an end user and not for data read by an application.
     * </pre>
     *
     * <code>.event_logging.v4.ViewComplexType view = 10 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.ViewComplexTypeOuterClass.ViewComplexTypeOrBuilder getViewOrBuilder() {
      return view_ == null ? event_logging.v4.ViewComplexTypeOuterClass.ViewComplexType.getDefaultInstance() : view_;
    }

    public static final int IMPORT_FIELD_FIELD_NUMBER = 11;
    private event_logging.v4.ImportComplexTypeOuterClass.ImportComplexType importField_;
    /**
     * <pre>
     * All events related to importing data should use this element. An import could include any batch insert of data from an external source or uploading a file.
     * </pre>
     *
     * <code>.event_logging.v4.ImportComplexType import_field = 11 [(.buf.validate.field) = { ... }</code>
     * @return Whether the importField field is set.
     */
    @java.lang.Override
    public boolean hasImportField() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * All events related to importing data should use this element. An import could include any batch insert of data from an external source or uploading a file.
     * </pre>
     *
     * <code>.event_logging.v4.ImportComplexType import_field = 11 [(.buf.validate.field) = { ... }</code>
     * @return The importField.
     */
    @java.lang.Override
    public event_logging.v4.ImportComplexTypeOuterClass.ImportComplexType getImportField() {
      return importField_ == null ? event_logging.v4.ImportComplexTypeOuterClass.ImportComplexType.getDefaultInstance() : importField_;
    }
    /**
     * <pre>
     * All events related to importing data should use this element. An import could include any batch insert of data from an external source or uploading a file.
     * </pre>
     *
     * <code>.event_logging.v4.ImportComplexType import_field = 11 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.ImportComplexTypeOuterClass.ImportComplexTypeOrBuilder getImportFieldOrBuilder() {
      return importField_ == null ? event_logging.v4.ImportComplexTypeOuterClass.ImportComplexType.getDefaultInstance() : importField_;
    }

    public static final int EXPORT_FIELD_NUMBER = 12;
    private event_logging.v4.ExportComplexTypeOuterClass.ExportComplexType export_;
    /**
     * <pre>
     * All events related to exporting data should use this element. An export could include activities such as downloading data from an application or generating a report.
     * </pre>
     *
     * <code>.event_logging.v4.ExportComplexType export = 12 [(.buf.validate.field) = { ... }</code>
     * @return Whether the export field is set.
     */
    @java.lang.Override
    public boolean hasExport() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * All events related to exporting data should use this element. An export could include activities such as downloading data from an application or generating a report.
     * </pre>
     *
     * <code>.event_logging.v4.ExportComplexType export = 12 [(.buf.validate.field) = { ... }</code>
     * @return The export.
     */
    @java.lang.Override
    public event_logging.v4.ExportComplexTypeOuterClass.ExportComplexType getExport() {
      return export_ == null ? event_logging.v4.ExportComplexTypeOuterClass.ExportComplexType.getDefaultInstance() : export_;
    }
    /**
     * <pre>
     * All events related to exporting data should use this element. An export could include activities such as downloading data from an application or generating a report.
     * </pre>
     *
     * <code>.event_logging.v4.ExportComplexType export = 12 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.ExportComplexTypeOuterClass.ExportComplexTypeOrBuilder getExportOrBuilder() {
      return export_ == null ? event_logging.v4.ExportComplexTypeOuterClass.ExportComplexType.getDefaultInstance() : export_;
    }

    public static final int UPDATE_FIELD_NUMBER = 13;
    private event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType update_;
    /**
     * <pre>
     * All events related to updating data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.UpdateComplexType update = 13 [(.buf.validate.field) = { ... }</code>
     * @return Whether the update field is set.
     */
    @java.lang.Override
    public boolean hasUpdate() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * All events related to updating data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.UpdateComplexType update = 13 [(.buf.validate.field) = { ... }</code>
     * @return The update.
     */
    @java.lang.Override
    public event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType getUpdate() {
      return update_ == null ? event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType.getDefaultInstance() : update_;
    }
    /**
     * <pre>
     * All events related to updating data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.UpdateComplexType update = 13 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexTypeOrBuilder getUpdateOrBuilder() {
      return update_ == null ? event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType.getDefaultInstance() : update_;
    }

    public static final int DELETE_FIELD_NUMBER = 14;
    private event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexType delete_;
    /**
     * <pre>
     * All events related to deleting data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.DeleteComplexType delete = 14 [(.buf.validate.field) = { ... }</code>
     * @return Whether the delete field is set.
     */
    @java.lang.Override
    public boolean hasDelete() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * All events related to deleting data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.DeleteComplexType delete = 14 [(.buf.validate.field) = { ... }</code>
     * @return The delete.
     */
    @java.lang.Override
    public event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexType getDelete() {
      return delete_ == null ? event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexType.getDefaultInstance() : delete_;
    }
    /**
     * <pre>
     * All events related to deleting data should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.DeleteComplexType delete = 14 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexTypeOrBuilder getDeleteOrBuilder() {
      return delete_ == null ? event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexType.getDefaultInstance() : delete_;
    }

    public static final int PROCESS_FIELD_NUMBER = 15;
    private event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType process_;
    /**
     * <pre>
     * Whenever processes such as applications or services are started, stopped etc., this should be recorded in this element. It also covers the running of batch processes or jobs.
     * </pre>
     *
     * <code>.event_logging.v4.ProcessComplexType process = 15 [(.buf.validate.field) = { ... }</code>
     * @return Whether the process field is set.
     */
    @java.lang.Override
    public boolean hasProcess() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * Whenever processes such as applications or services are started, stopped etc., this should be recorded in this element. It also covers the running of batch processes or jobs.
     * </pre>
     *
     * <code>.event_logging.v4.ProcessComplexType process = 15 [(.buf.validate.field) = { ... }</code>
     * @return The process.
     */
    @java.lang.Override
    public event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType getProcess() {
      return process_ == null ? event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType.getDefaultInstance() : process_;
    }
    /**
     * <pre>
     * Whenever processes such as applications or services are started, stopped etc., this should be recorded in this element. It also covers the running of batch processes or jobs.
     * </pre>
     *
     * <code>.event_logging.v4.ProcessComplexType process = 15 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexTypeOrBuilder getProcessOrBuilder() {
      return process_ == null ? event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType.getDefaultInstance() : process_;
    }

    public static final int PRINT_FIELD_NUMBER = 16;
    private event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType print_;
    /**
     * <pre>
     * All events related to printing should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.PrintComplexType print = 16 [(.buf.validate.field) = { ... }</code>
     * @return Whether the print field is set.
     */
    @java.lang.Override
    public boolean hasPrint() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     * All events related to printing should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.PrintComplexType print = 16 [(.buf.validate.field) = { ... }</code>
     * @return The print.
     */
    @java.lang.Override
    public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType getPrint() {
      return print_ == null ? event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.getDefaultInstance() : print_;
    }
    /**
     * <pre>
     * All events related to printing should use this element.
     * </pre>
     *
     * <code>.event_logging.v4.PrintComplexType print = 16 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexTypeOrBuilder getPrintOrBuilder() {
      return print_ == null ? event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.getDefaultInstance() : print_;
    }

    public static final int INSTALL_FIELD_NUMBER = 17;
    private event_logging.v4.InstallComplexTypeOuterClass.InstallComplexType install_;
    /**
     * <pre>
     * Details about installation of either hardware or software.
     * </pre>
     *
     * <code>.event_logging.v4.InstallComplexType install = 17 [(.buf.validate.field) = { ... }</code>
     * @return Whether the install field is set.
     */
    @java.lang.Override
    public boolean hasInstall() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <pre>
     * Details about installation of either hardware or software.
     * </pre>
     *
     * <code>.event_logging.v4.InstallComplexType install = 17 [(.buf.validate.field) = { ... }</code>
     * @return The install.
     */
    @java.lang.Override
    public event_logging.v4.InstallComplexTypeOuterClass.InstallComplexType getInstall() {
      return install_ == null ? event_logging.v4.InstallComplexTypeOuterClass.InstallComplexType.getDefaultInstance() : install_;
    }
    /**
     * <pre>
     * Details about installation of either hardware or software.
     * </pre>
     *
     * <code>.event_logging.v4.InstallComplexType install = 17 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.InstallComplexTypeOuterClass.InstallComplexTypeOrBuilder getInstallOrBuilder() {
      return install_ == null ? event_logging.v4.InstallComplexTypeOuterClass.InstallComplexType.getDefaultInstance() : install_;
    }

    public static final int UNINSTALL_FIELD_NUMBER = 18;
    private event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexType uninstall_;
    /**
     * <pre>
     * Details about removal of either hardware or software.
     * </pre>
     *
     * <code>.event_logging.v4.UninstallComplexType uninstall = 18 [(.buf.validate.field) = { ... }</code>
     * @return Whether the uninstall field is set.
     */
    @java.lang.Override
    public boolean hasUninstall() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <pre>
     * Details about removal of either hardware or software.
     * </pre>
     *
     * <code>.event_logging.v4.UninstallComplexType uninstall = 18 [(.buf.validate.field) = { ... }</code>
     * @return The uninstall.
     */
    @java.lang.Override
    public event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexType getUninstall() {
      return uninstall_ == null ? event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexType.getDefaultInstance() : uninstall_;
    }
    /**
     * <pre>
     * Details about removal of either hardware or software.
     * </pre>
     *
     * <code>.event_logging.v4.UninstallComplexType uninstall = 18 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexTypeOrBuilder getUninstallOrBuilder() {
      return uninstall_ == null ? event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexType.getDefaultInstance() : uninstall_;
    }

    public static final int NETWORK_FIELD_NUMBER = 19;
    private event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexType network_;
    /**
     * <pre>
     * Any events related to network traffic, filtering or access should be recorded using this element.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkEventActionComplexType network = 19 [(.buf.validate.field) = { ... }</code>
     * @return Whether the network field is set.
     */
    @java.lang.Override
    public boolean hasNetwork() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <pre>
     * Any events related to network traffic, filtering or access should be recorded using this element.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkEventActionComplexType network = 19 [(.buf.validate.field) = { ... }</code>
     * @return The network.
     */
    @java.lang.Override
    public event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexType getNetwork() {
      return network_ == null ? event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexType.getDefaultInstance() : network_;
    }
    /**
     * <pre>
     * Any events related to network traffic, filtering or access should be recorded using this element.
     * </pre>
     *
     * <code>.event_logging.v4.NetworkEventActionComplexType network = 19 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexTypeOrBuilder getNetworkOrBuilder() {
      return network_ == null ? event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexType.getDefaultInstance() : network_;
    }

    public static final int ALERT_FIELD_NUMBER = 20;
    private event_logging.v4.AlertComplexTypeOuterClass.AlertComplexType alert_;
    /**
     * <pre>
     * An alert event according to the system producing the event, e.g. an event raised when an anti-malware system finds malware.
     * </pre>
     *
     * <code>.event_logging.v4.AlertComplexType alert = 20 [(.buf.validate.field) = { ... }</code>
     * @return Whether the alert field is set.
     */
    @java.lang.Override
    public boolean hasAlert() {
      return ((bitField0_ & 0x00020000) != 0);
    }
    /**
     * <pre>
     * An alert event according to the system producing the event, e.g. an event raised when an anti-malware system finds malware.
     * </pre>
     *
     * <code>.event_logging.v4.AlertComplexType alert = 20 [(.buf.validate.field) = { ... }</code>
     * @return The alert.
     */
    @java.lang.Override
    public event_logging.v4.AlertComplexTypeOuterClass.AlertComplexType getAlert() {
      return alert_ == null ? event_logging.v4.AlertComplexTypeOuterClass.AlertComplexType.getDefaultInstance() : alert_;
    }
    /**
     * <pre>
     * An alert event according to the system producing the event, e.g. an event raised when an anti-malware system finds malware.
     * </pre>
     *
     * <code>.event_logging.v4.AlertComplexType alert = 20 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.AlertComplexTypeOuterClass.AlertComplexTypeOrBuilder getAlertOrBuilder() {
      return alert_ == null ? event_logging.v4.AlertComplexTypeOuterClass.AlertComplexType.getDefaultInstance() : alert_;
    }

    public static final int SEND_FIELD_NUMBER = 21;
    private event_logging.v4.SendComplexTypeOuterClass.SendComplexType send_;
    /**
     * <pre>
     * Used for send events that are at a higher level than a network/send event, e.g. sending an email
     * </pre>
     *
     * <code>.event_logging.v4.SendComplexType send = 21 [(.buf.validate.field) = { ... }</code>
     * @return Whether the send field is set.
     */
    @java.lang.Override
    public boolean hasSend() {
      return ((bitField0_ & 0x00040000) != 0);
    }
    /**
     * <pre>
     * Used for send events that are at a higher level than a network/send event, e.g. sending an email
     * </pre>
     *
     * <code>.event_logging.v4.SendComplexType send = 21 [(.buf.validate.field) = { ... }</code>
     * @return The send.
     */
    @java.lang.Override
    public event_logging.v4.SendComplexTypeOuterClass.SendComplexType getSend() {
      return send_ == null ? event_logging.v4.SendComplexTypeOuterClass.SendComplexType.getDefaultInstance() : send_;
    }
    /**
     * <pre>
     * Used for send events that are at a higher level than a network/send event, e.g. sending an email
     * </pre>
     *
     * <code>.event_logging.v4.SendComplexType send = 21 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.SendComplexTypeOuterClass.SendComplexTypeOrBuilder getSendOrBuilder() {
      return send_ == null ? event_logging.v4.SendComplexTypeOuterClass.SendComplexType.getDefaultInstance() : send_;
    }

    public static final int RECEIVE_FIELD_NUMBER = 22;
    private event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexType receive_;
    /**
     * <pre>
     * Used for receive events that are at a higher level than a network/receive event, e.g. receiving an email
     * </pre>
     *
     * <code>.event_logging.v4.ReceiveComplexType receive = 22 [(.buf.validate.field) = { ... }</code>
     * @return Whether the receive field is set.
     */
    @java.lang.Override
    public boolean hasReceive() {
      return ((bitField0_ & 0x00080000) != 0);
    }
    /**
     * <pre>
     * Used for receive events that are at a higher level than a network/receive event, e.g. receiving an email
     * </pre>
     *
     * <code>.event_logging.v4.ReceiveComplexType receive = 22 [(.buf.validate.field) = { ... }</code>
     * @return The receive.
     */
    @java.lang.Override
    public event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexType getReceive() {
      return receive_ == null ? event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexType.getDefaultInstance() : receive_;
    }
    /**
     * <pre>
     * Used for receive events that are at a higher level than a network/receive event, e.g. receiving an email
     * </pre>
     *
     * <code>.event_logging.v4.ReceiveComplexType receive = 22 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexTypeOrBuilder getReceiveOrBuilder() {
      return receive_ == null ? event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexType.getDefaultInstance() : receive_;
    }

    public static final int APPROVAL_FIELD_NUMBER = 23;
    private event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexType approval_;
    /**
     * <pre>
     * Any events relating to the action of approving/accepting or rejecting something, e.g. an approval step in a workflow, accepting a license agreement, or acceptable use policy. The event may relate to one user approving the work/action of another user or a single user accepting something.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType approval = 23 [(.buf.validate.field) = { ... }</code>
     * @return Whether the approval field is set.
     */
    @java.lang.Override
    public boolean hasApproval() {
      return ((bitField0_ & 0x00100000) != 0);
    }
    /**
     * <pre>
     * Any events relating to the action of approving/accepting or rejecting something, e.g. an approval step in a workflow, accepting a license agreement, or acceptable use policy. The event may relate to one user approving the work/action of another user or a single user accepting something.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType approval = 23 [(.buf.validate.field) = { ... }</code>
     * @return The approval.
     */
    @java.lang.Override
    public event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexType getApproval() {
      return approval_ == null ? event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexType.getDefaultInstance() : approval_;
    }
    /**
     * <pre>
     * Any events relating to the action of approving/accepting or rejecting something, e.g. an approval step in a workflow, accepting a license agreement, or acceptable use policy. The event may relate to one user approving the work/action of another user or a single user accepting something.
     * </pre>
     *
     * <code>.event_logging.v4.ApprovalComplexType approval = 23 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexTypeOrBuilder getApprovalOrBuilder() {
      return approval_ == null ? event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexType.getDefaultInstance() : approval_;
    }

    public static final int UNKNOWN_FIELD_NUMBER = 24;
    private event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType unknown_;
    /**
     * <pre>
     * This element should be used were the type of the event cannot be described by any of the other event actions, or the event type is unknown.
     * </pre>
     *
     * <code>.event_logging.v4.EventDetailComplexType.UnknownType unknown = 24 [(.buf.validate.field) = { ... }</code>
     * @return Whether the unknown field is set.
     */
    @java.lang.Override
    public boolean hasUnknown() {
      return ((bitField0_ & 0x00200000) != 0);
    }
    /**
     * <pre>
     * This element should be used were the type of the event cannot be described by any of the other event actions, or the event type is unknown.
     * </pre>
     *
     * <code>.event_logging.v4.EventDetailComplexType.UnknownType unknown = 24 [(.buf.validate.field) = { ... }</code>
     * @return The unknown.
     */
    @java.lang.Override
    public event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType getUnknown() {
      return unknown_ == null ? event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType.getDefaultInstance() : unknown_;
    }
    /**
     * <pre>
     * This element should be used were the type of the event cannot be described by any of the other event actions, or the event type is unknown.
     * </pre>
     *
     * <code>.event_logging.v4.EventDetailComplexType.UnknownType unknown = 24 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownTypeOrBuilder getUnknownOrBuilder() {
      return unknown_ == null ? event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType.getDefaultInstance() : unknown_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(typeId_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, typeId_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(description_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, description_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(3, getPurpose());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(4, getAuthenticate());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(5, getAuthorise());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(6, getSearch());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeMessage(7, getCopy());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeMessage(8, getMove());
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeMessage(9, getCreate());
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeMessage(10, getView());
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeMessage(11, getImportField());
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeMessage(12, getExport());
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeMessage(13, getUpdate());
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeMessage(14, getDelete());
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeMessage(15, getProcess());
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeMessage(16, getPrint());
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeMessage(17, getInstall());
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        output.writeMessage(18, getUninstall());
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        output.writeMessage(19, getNetwork());
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        output.writeMessage(20, getAlert());
      }
      if (((bitField0_ & 0x00040000) != 0)) {
        output.writeMessage(21, getSend());
      }
      if (((bitField0_ & 0x00080000) != 0)) {
        output.writeMessage(22, getReceive());
      }
      if (((bitField0_ & 0x00100000) != 0)) {
        output.writeMessage(23, getApproval());
      }
      if (((bitField0_ & 0x00200000) != 0)) {
        output.writeMessage(24, getUnknown());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(typeId_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, typeId_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(description_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, description_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getPurpose());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getAuthenticate());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getAuthorise());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getSearch());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCopy());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getMove());
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getCreate());
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getView());
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getImportField());
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getExport());
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getUpdate());
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getDelete());
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getProcess());
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, getPrint());
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, getInstall());
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, getUninstall());
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, getNetwork());
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getAlert());
      }
      if (((bitField0_ & 0x00040000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getSend());
      }
      if (((bitField0_ & 0x00080000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, getReceive());
      }
      if (((bitField0_ & 0x00100000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, getApproval());
      }
      if (((bitField0_ & 0x00200000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, getUnknown());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType)) {
        return super.equals(obj);
      }
      event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType other = (event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType) obj;

      if (!getTypeId()
          .equals(other.getTypeId())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (hasPurpose() != other.hasPurpose()) return false;
      if (hasPurpose()) {
        if (!getPurpose()
            .equals(other.getPurpose())) return false;
      }
      if (hasAuthenticate() != other.hasAuthenticate()) return false;
      if (hasAuthenticate()) {
        if (!getAuthenticate()
            .equals(other.getAuthenticate())) return false;
      }
      if (hasAuthorise() != other.hasAuthorise()) return false;
      if (hasAuthorise()) {
        if (!getAuthorise()
            .equals(other.getAuthorise())) return false;
      }
      if (hasSearch() != other.hasSearch()) return false;
      if (hasSearch()) {
        if (!getSearch()
            .equals(other.getSearch())) return false;
      }
      if (hasCopy() != other.hasCopy()) return false;
      if (hasCopy()) {
        if (!getCopy()
            .equals(other.getCopy())) return false;
      }
      if (hasMove() != other.hasMove()) return false;
      if (hasMove()) {
        if (!getMove()
            .equals(other.getMove())) return false;
      }
      if (hasCreate() != other.hasCreate()) return false;
      if (hasCreate()) {
        if (!getCreate()
            .equals(other.getCreate())) return false;
      }
      if (hasView() != other.hasView()) return false;
      if (hasView()) {
        if (!getView()
            .equals(other.getView())) return false;
      }
      if (hasImportField() != other.hasImportField()) return false;
      if (hasImportField()) {
        if (!getImportField()
            .equals(other.getImportField())) return false;
      }
      if (hasExport() != other.hasExport()) return false;
      if (hasExport()) {
        if (!getExport()
            .equals(other.getExport())) return false;
      }
      if (hasUpdate() != other.hasUpdate()) return false;
      if (hasUpdate()) {
        if (!getUpdate()
            .equals(other.getUpdate())) return false;
      }
      if (hasDelete() != other.hasDelete()) return false;
      if (hasDelete()) {
        if (!getDelete()
            .equals(other.getDelete())) return false;
      }
      if (hasProcess() != other.hasProcess()) return false;
      if (hasProcess()) {
        if (!getProcess()
            .equals(other.getProcess())) return false;
      }
      if (hasPrint() != other.hasPrint()) return false;
      if (hasPrint()) {
        if (!getPrint()
            .equals(other.getPrint())) return false;
      }
      if (hasInstall() != other.hasInstall()) return false;
      if (hasInstall()) {
        if (!getInstall()
            .equals(other.getInstall())) return false;
      }
      if (hasUninstall() != other.hasUninstall()) return false;
      if (hasUninstall()) {
        if (!getUninstall()
            .equals(other.getUninstall())) return false;
      }
      if (hasNetwork() != other.hasNetwork()) return false;
      if (hasNetwork()) {
        if (!getNetwork()
            .equals(other.getNetwork())) return false;
      }
      if (hasAlert() != other.hasAlert()) return false;
      if (hasAlert()) {
        if (!getAlert()
            .equals(other.getAlert())) return false;
      }
      if (hasSend() != other.hasSend()) return false;
      if (hasSend()) {
        if (!getSend()
            .equals(other.getSend())) return false;
      }
      if (hasReceive() != other.hasReceive()) return false;
      if (hasReceive()) {
        if (!getReceive()
            .equals(other.getReceive())) return false;
      }
      if (hasApproval() != other.hasApproval()) return false;
      if (hasApproval()) {
        if (!getApproval()
            .equals(other.getApproval())) return false;
      }
      if (hasUnknown() != other.hasUnknown()) return false;
      if (hasUnknown()) {
        if (!getUnknown()
            .equals(other.getUnknown())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTypeId().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      if (hasPurpose()) {
        hash = (37 * hash) + PURPOSE_FIELD_NUMBER;
        hash = (53 * hash) + getPurpose().hashCode();
      }
      if (hasAuthenticate()) {
        hash = (37 * hash) + AUTHENTICATE_FIELD_NUMBER;
        hash = (53 * hash) + getAuthenticate().hashCode();
      }
      if (hasAuthorise()) {
        hash = (37 * hash) + AUTHORISE_FIELD_NUMBER;
        hash = (53 * hash) + getAuthorise().hashCode();
      }
      if (hasSearch()) {
        hash = (37 * hash) + SEARCH_FIELD_NUMBER;
        hash = (53 * hash) + getSearch().hashCode();
      }
      if (hasCopy()) {
        hash = (37 * hash) + COPY_FIELD_NUMBER;
        hash = (53 * hash) + getCopy().hashCode();
      }
      if (hasMove()) {
        hash = (37 * hash) + MOVE_FIELD_NUMBER;
        hash = (53 * hash) + getMove().hashCode();
      }
      if (hasCreate()) {
        hash = (37 * hash) + CREATE_FIELD_NUMBER;
        hash = (53 * hash) + getCreate().hashCode();
      }
      if (hasView()) {
        hash = (37 * hash) + VIEW_FIELD_NUMBER;
        hash = (53 * hash) + getView().hashCode();
      }
      if (hasImportField()) {
        hash = (37 * hash) + IMPORT_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + getImportField().hashCode();
      }
      if (hasExport()) {
        hash = (37 * hash) + EXPORT_FIELD_NUMBER;
        hash = (53 * hash) + getExport().hashCode();
      }
      if (hasUpdate()) {
        hash = (37 * hash) + UPDATE_FIELD_NUMBER;
        hash = (53 * hash) + getUpdate().hashCode();
      }
      if (hasDelete()) {
        hash = (37 * hash) + DELETE_FIELD_NUMBER;
        hash = (53 * hash) + getDelete().hashCode();
      }
      if (hasProcess()) {
        hash = (37 * hash) + PROCESS_FIELD_NUMBER;
        hash = (53 * hash) + getProcess().hashCode();
      }
      if (hasPrint()) {
        hash = (37 * hash) + PRINT_FIELD_NUMBER;
        hash = (53 * hash) + getPrint().hashCode();
      }
      if (hasInstall()) {
        hash = (37 * hash) + INSTALL_FIELD_NUMBER;
        hash = (53 * hash) + getInstall().hashCode();
      }
      if (hasUninstall()) {
        hash = (37 * hash) + UNINSTALL_FIELD_NUMBER;
        hash = (53 * hash) + getUninstall().hashCode();
      }
      if (hasNetwork()) {
        hash = (37 * hash) + NETWORK_FIELD_NUMBER;
        hash = (53 * hash) + getNetwork().hashCode();
      }
      if (hasAlert()) {
        hash = (37 * hash) + ALERT_FIELD_NUMBER;
        hash = (53 * hash) + getAlert().hashCode();
      }
      if (hasSend()) {
        hash = (37 * hash) + SEND_FIELD_NUMBER;
        hash = (53 * hash) + getSend().hashCode();
      }
      if (hasReceive()) {
        hash = (37 * hash) + RECEIVE_FIELD_NUMBER;
        hash = (53 * hash) + getReceive().hashCode();
      }
      if (hasApproval()) {
        hash = (37 * hash) + APPROVAL_FIELD_NUMBER;
        hash = (53 * hash) + getApproval().hashCode();
      }
      if (hasUnknown()) {
        hash = (37 * hash) + UNKNOWN_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * This type describes the details of what happened in the event: the type of the event, why it happened and the event action.
     * </pre>
     *
     * Protobuf type {@code event_logging.v4.EventDetailComplexType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_logging.v4.EventDetailComplexType)
        event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_logging.v4.EventDetailComplexTypeOuterClass.internal_static_event_logging_v4_EventDetailComplexType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_logging.v4.EventDetailComplexTypeOuterClass.internal_static_event_logging_v4_EventDetailComplexType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.class, event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.Builder.class);
      }

      // Construct using event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getPurposeFieldBuilder();
          getAuthenticateFieldBuilder();
          getAuthoriseFieldBuilder();
          getSearchFieldBuilder();
          getCopyFieldBuilder();
          getMoveFieldBuilder();
          getCreateFieldBuilder();
          getViewFieldBuilder();
          getImportFieldFieldBuilder();
          getExportFieldBuilder();
          getUpdateFieldBuilder();
          getDeleteFieldBuilder();
          getProcessFieldBuilder();
          getPrintFieldBuilder();
          getInstallFieldBuilder();
          getUninstallFieldBuilder();
          getNetworkFieldBuilder();
          getAlertFieldBuilder();
          getSendFieldBuilder();
          getReceiveFieldBuilder();
          getApprovalFieldBuilder();
          getUnknownFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        typeId_ = "";
        description_ = "";
        purpose_ = null;
        if (purposeBuilder_ != null) {
          purposeBuilder_.dispose();
          purposeBuilder_ = null;
        }
        authenticate_ = null;
        if (authenticateBuilder_ != null) {
          authenticateBuilder_.dispose();
          authenticateBuilder_ = null;
        }
        authorise_ = null;
        if (authoriseBuilder_ != null) {
          authoriseBuilder_.dispose();
          authoriseBuilder_ = null;
        }
        search_ = null;
        if (searchBuilder_ != null) {
          searchBuilder_.dispose();
          searchBuilder_ = null;
        }
        copy_ = null;
        if (copyBuilder_ != null) {
          copyBuilder_.dispose();
          copyBuilder_ = null;
        }
        move_ = null;
        if (moveBuilder_ != null) {
          moveBuilder_.dispose();
          moveBuilder_ = null;
        }
        create_ = null;
        if (createBuilder_ != null) {
          createBuilder_.dispose();
          createBuilder_ = null;
        }
        view_ = null;
        if (viewBuilder_ != null) {
          viewBuilder_.dispose();
          viewBuilder_ = null;
        }
        importField_ = null;
        if (importFieldBuilder_ != null) {
          importFieldBuilder_.dispose();
          importFieldBuilder_ = null;
        }
        export_ = null;
        if (exportBuilder_ != null) {
          exportBuilder_.dispose();
          exportBuilder_ = null;
        }
        update_ = null;
        if (updateBuilder_ != null) {
          updateBuilder_.dispose();
          updateBuilder_ = null;
        }
        delete_ = null;
        if (deleteBuilder_ != null) {
          deleteBuilder_.dispose();
          deleteBuilder_ = null;
        }
        process_ = null;
        if (processBuilder_ != null) {
          processBuilder_.dispose();
          processBuilder_ = null;
        }
        print_ = null;
        if (printBuilder_ != null) {
          printBuilder_.dispose();
          printBuilder_ = null;
        }
        install_ = null;
        if (installBuilder_ != null) {
          installBuilder_.dispose();
          installBuilder_ = null;
        }
        uninstall_ = null;
        if (uninstallBuilder_ != null) {
          uninstallBuilder_.dispose();
          uninstallBuilder_ = null;
        }
        network_ = null;
        if (networkBuilder_ != null) {
          networkBuilder_.dispose();
          networkBuilder_ = null;
        }
        alert_ = null;
        if (alertBuilder_ != null) {
          alertBuilder_.dispose();
          alertBuilder_ = null;
        }
        send_ = null;
        if (sendBuilder_ != null) {
          sendBuilder_.dispose();
          sendBuilder_ = null;
        }
        receive_ = null;
        if (receiveBuilder_ != null) {
          receiveBuilder_.dispose();
          receiveBuilder_ = null;
        }
        approval_ = null;
        if (approvalBuilder_ != null) {
          approvalBuilder_.dispose();
          approvalBuilder_ = null;
        }
        unknown_ = null;
        if (unknownBuilder_ != null) {
          unknownBuilder_.dispose();
          unknownBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return event_logging.v4.EventDetailComplexTypeOuterClass.internal_static_event_logging_v4_EventDetailComplexType_descriptor;
      }

      @java.lang.Override
      public event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType getDefaultInstanceForType() {
        return event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.getDefaultInstance();
      }

      @java.lang.Override
      public event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType build() {
        event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType buildPartial() {
        event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType result = new event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.typeId_ = typeId_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.description_ = description_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.purpose_ = purposeBuilder_ == null
              ? purpose_
              : purposeBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.authenticate_ = authenticateBuilder_ == null
              ? authenticate_
              : authenticateBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.authorise_ = authoriseBuilder_ == null
              ? authorise_
              : authoriseBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.search_ = searchBuilder_ == null
              ? search_
              : searchBuilder_.build();
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.copy_ = copyBuilder_ == null
              ? copy_
              : copyBuilder_.build();
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.move_ = moveBuilder_ == null
              ? move_
              : moveBuilder_.build();
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.create_ = createBuilder_ == null
              ? create_
              : createBuilder_.build();
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.view_ = viewBuilder_ == null
              ? view_
              : viewBuilder_.build();
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.importField_ = importFieldBuilder_ == null
              ? importField_
              : importFieldBuilder_.build();
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.export_ = exportBuilder_ == null
              ? export_
              : exportBuilder_.build();
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.update_ = updateBuilder_ == null
              ? update_
              : updateBuilder_.build();
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.delete_ = deleteBuilder_ == null
              ? delete_
              : deleteBuilder_.build();
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.process_ = processBuilder_ == null
              ? process_
              : processBuilder_.build();
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.print_ = printBuilder_ == null
              ? print_
              : printBuilder_.build();
          to_bitField0_ |= 0x00002000;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.install_ = installBuilder_ == null
              ? install_
              : installBuilder_.build();
          to_bitField0_ |= 0x00004000;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.uninstall_ = uninstallBuilder_ == null
              ? uninstall_
              : uninstallBuilder_.build();
          to_bitField0_ |= 0x00008000;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.network_ = networkBuilder_ == null
              ? network_
              : networkBuilder_.build();
          to_bitField0_ |= 0x00010000;
        }
        if (((from_bitField0_ & 0x00080000) != 0)) {
          result.alert_ = alertBuilder_ == null
              ? alert_
              : alertBuilder_.build();
          to_bitField0_ |= 0x00020000;
        }
        if (((from_bitField0_ & 0x00100000) != 0)) {
          result.send_ = sendBuilder_ == null
              ? send_
              : sendBuilder_.build();
          to_bitField0_ |= 0x00040000;
        }
        if (((from_bitField0_ & 0x00200000) != 0)) {
          result.receive_ = receiveBuilder_ == null
              ? receive_
              : receiveBuilder_.build();
          to_bitField0_ |= 0x00080000;
        }
        if (((from_bitField0_ & 0x00400000) != 0)) {
          result.approval_ = approvalBuilder_ == null
              ? approval_
              : approvalBuilder_.build();
          to_bitField0_ |= 0x00100000;
        }
        if (((from_bitField0_ & 0x00800000) != 0)) {
          result.unknown_ = unknownBuilder_ == null
              ? unknown_
              : unknownBuilder_.build();
          to_bitField0_ |= 0x00200000;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType) {
          return mergeFrom((event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType other) {
        if (other == event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.getDefaultInstance()) return this;
        if (!other.getTypeId().isEmpty()) {
          typeId_ = other.typeId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasPurpose()) {
          mergePurpose(other.getPurpose());
        }
        if (other.hasAuthenticate()) {
          mergeAuthenticate(other.getAuthenticate());
        }
        if (other.hasAuthorise()) {
          mergeAuthorise(other.getAuthorise());
        }
        if (other.hasSearch()) {
          mergeSearch(other.getSearch());
        }
        if (other.hasCopy()) {
          mergeCopy(other.getCopy());
        }
        if (other.hasMove()) {
          mergeMove(other.getMove());
        }
        if (other.hasCreate()) {
          mergeCreate(other.getCreate());
        }
        if (other.hasView()) {
          mergeView(other.getView());
        }
        if (other.hasImportField()) {
          mergeImportField(other.getImportField());
        }
        if (other.hasExport()) {
          mergeExport(other.getExport());
        }
        if (other.hasUpdate()) {
          mergeUpdate(other.getUpdate());
        }
        if (other.hasDelete()) {
          mergeDelete(other.getDelete());
        }
        if (other.hasProcess()) {
          mergeProcess(other.getProcess());
        }
        if (other.hasPrint()) {
          mergePrint(other.getPrint());
        }
        if (other.hasInstall()) {
          mergeInstall(other.getInstall());
        }
        if (other.hasUninstall()) {
          mergeUninstall(other.getUninstall());
        }
        if (other.hasNetwork()) {
          mergeNetwork(other.getNetwork());
        }
        if (other.hasAlert()) {
          mergeAlert(other.getAlert());
        }
        if (other.hasSend()) {
          mergeSend(other.getSend());
        }
        if (other.hasReceive()) {
          mergeReceive(other.getReceive());
        }
        if (other.hasApproval()) {
          mergeApproval(other.getApproval());
        }
        if (other.hasUnknown()) {
          mergeUnknown(other.getUnknown());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                typeId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                description_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getPurposeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getAuthenticateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getAuthoriseFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 50: {
                input.readMessage(
                    getSearchFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              case 58: {
                input.readMessage(
                    getCopyFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              case 66: {
                input.readMessage(
                    getMoveFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              case 74: {
                input.readMessage(
                    getCreateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000100;
                break;
              } // case 74
              case 82: {
                input.readMessage(
                    getViewFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000200;
                break;
              } // case 82
              case 90: {
                input.readMessage(
                    getImportFieldFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000400;
                break;
              } // case 90
              case 98: {
                input.readMessage(
                    getExportFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000800;
                break;
              } // case 98
              case 106: {
                input.readMessage(
                    getUpdateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00001000;
                break;
              } // case 106
              case 114: {
                input.readMessage(
                    getDeleteFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00002000;
                break;
              } // case 114
              case 122: {
                input.readMessage(
                    getProcessFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00004000;
                break;
              } // case 122
              case 130: {
                input.readMessage(
                    getPrintFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00008000;
                break;
              } // case 130
              case 138: {
                input.readMessage(
                    getInstallFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00010000;
                break;
              } // case 138
              case 146: {
                input.readMessage(
                    getUninstallFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00020000;
                break;
              } // case 146
              case 154: {
                input.readMessage(
                    getNetworkFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00040000;
                break;
              } // case 154
              case 162: {
                input.readMessage(
                    getAlertFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00080000;
                break;
              } // case 162
              case 170: {
                input.readMessage(
                    getSendFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00100000;
                break;
              } // case 170
              case 178: {
                input.readMessage(
                    getReceiveFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00200000;
                break;
              } // case 178
              case 186: {
                input.readMessage(
                    getApprovalFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00400000;
                break;
              } // case 186
              case 194: {
                input.readMessage(
                    getUnknownFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00800000;
                break;
              } // case 194
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object typeId_ = "";
      /**
       * <pre>
       * A name/code/ID to uniquely identify the logical event type within the service providing the events. E.g. a Windows eventId (i.e. representing 'Failed logon', 'Change password attempt', etc.) or for application logging: SaveRecord, ViewUserRecord, ViewSearchResults, etc. The granularity will depend on the application. Typically, the number of unique TypeIds will be in the 10s. Note, the values of the TypeId are not meant to be globally consistent, they will only be relevant within that service providing the events.
       * </pre>
       *
       * <code>string type_id = 1 [(.buf.validate.field) = { ... }</code>
       * @return The typeId.
       */
      public java.lang.String getTypeId() {
        java.lang.Object ref = typeId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          typeId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A name/code/ID to uniquely identify the logical event type within the service providing the events. E.g. a Windows eventId (i.e. representing 'Failed logon', 'Change password attempt', etc.) or for application logging: SaveRecord, ViewUserRecord, ViewSearchResults, etc. The granularity will depend on the application. Typically, the number of unique TypeIds will be in the 10s. Note, the values of the TypeId are not meant to be globally consistent, they will only be relevant within that service providing the events.
       * </pre>
       *
       * <code>string type_id = 1 [(.buf.validate.field) = { ... }</code>
       * @return The bytes for typeId.
       */
      public com.google.protobuf.ByteString
          getTypeIdBytes() {
        java.lang.Object ref = typeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          typeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A name/code/ID to uniquely identify the logical event type within the service providing the events. E.g. a Windows eventId (i.e. representing 'Failed logon', 'Change password attempt', etc.) or for application logging: SaveRecord, ViewUserRecord, ViewSearchResults, etc. The granularity will depend on the application. Typically, the number of unique TypeIds will be in the 10s. Note, the values of the TypeId are not meant to be globally consistent, they will only be relevant within that service providing the events.
       * </pre>
       *
       * <code>string type_id = 1 [(.buf.validate.field) = { ... }</code>
       * @param value The typeId to set.
       * @return This builder for chaining.
       */
      public Builder setTypeId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        typeId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A name/code/ID to uniquely identify the logical event type within the service providing the events. E.g. a Windows eventId (i.e. representing 'Failed logon', 'Change password attempt', etc.) or for application logging: SaveRecord, ViewUserRecord, ViewSearchResults, etc. The granularity will depend on the application. Typically, the number of unique TypeIds will be in the 10s. Note, the values of the TypeId are not meant to be globally consistent, they will only be relevant within that service providing the events.
       * </pre>
       *
       * <code>string type_id = 1 [(.buf.validate.field) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeId() {
        typeId_ = getDefaultInstance().getTypeId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A name/code/ID to uniquely identify the logical event type within the service providing the events. E.g. a Windows eventId (i.e. representing 'Failed logon', 'Change password attempt', etc.) or for application logging: SaveRecord, ViewUserRecord, ViewSearchResults, etc. The granularity will depend on the application. Typically, the number of unique TypeIds will be in the 10s. Note, the values of the TypeId are not meant to be globally consistent, they will only be relevant within that service providing the events.
       * </pre>
       *
       * <code>string type_id = 1 [(.buf.validate.field) = { ... }</code>
       * @param value The bytes for typeId to set.
       * @return This builder for chaining.
       */
      public Builder setTypeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        typeId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * Some human-readable descriptive text for the event type.
       * </pre>
       *
       * <code>string description = 2;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Some human-readable descriptive text for the event type.
       * </pre>
       *
       * <code>string description = 2;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Some human-readable descriptive text for the event type.
       * </pre>
       *
       * <code>string description = 2;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        description_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Some human-readable descriptive text for the event type.
       * </pre>
       *
       * <code>string description = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        description_ = getDefaultInstance().getDescription();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Some human-readable descriptive text for the event type.
       * </pre>
       *
       * <code>string description = 2;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        description_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexType purpose_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexType, event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexType.Builder, event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexTypeOrBuilder> purposeBuilder_;
      /**
       * <pre>
       * The purpose/justification assigned to this event for user actions that are required to be justified for reasons of corporate policy, e.g. transferring data to removable media, viewing personnel records or making a high value payment.
       * </pre>
       *
       * <code>.event_logging.v4.PurposeComplexType purpose = 3;</code>
       * @return Whether the purpose field is set.
       */
      public boolean hasPurpose() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The purpose/justification assigned to this event for user actions that are required to be justified for reasons of corporate policy, e.g. transferring data to removable media, viewing personnel records or making a high value payment.
       * </pre>
       *
       * <code>.event_logging.v4.PurposeComplexType purpose = 3;</code>
       * @return The purpose.
       */
      public event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexType getPurpose() {
        if (purposeBuilder_ == null) {
          return purpose_ == null ? event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexType.getDefaultInstance() : purpose_;
        } else {
          return purposeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The purpose/justification assigned to this event for user actions that are required to be justified for reasons of corporate policy, e.g. transferring data to removable media, viewing personnel records or making a high value payment.
       * </pre>
       *
       * <code>.event_logging.v4.PurposeComplexType purpose = 3;</code>
       */
      public Builder setPurpose(event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexType value) {
        if (purposeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          purpose_ = value;
        } else {
          purposeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The purpose/justification assigned to this event for user actions that are required to be justified for reasons of corporate policy, e.g. transferring data to removable media, viewing personnel records or making a high value payment.
       * </pre>
       *
       * <code>.event_logging.v4.PurposeComplexType purpose = 3;</code>
       */
      public Builder setPurpose(
          event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexType.Builder builderForValue) {
        if (purposeBuilder_ == null) {
          purpose_ = builderForValue.build();
        } else {
          purposeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The purpose/justification assigned to this event for user actions that are required to be justified for reasons of corporate policy, e.g. transferring data to removable media, viewing personnel records or making a high value payment.
       * </pre>
       *
       * <code>.event_logging.v4.PurposeComplexType purpose = 3;</code>
       */
      public Builder mergePurpose(event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexType value) {
        if (purposeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            purpose_ != null &&
            purpose_ != event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexType.getDefaultInstance()) {
            getPurposeBuilder().mergeFrom(value);
          } else {
            purpose_ = value;
          }
        } else {
          purposeBuilder_.mergeFrom(value);
        }
        if (purpose_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The purpose/justification assigned to this event for user actions that are required to be justified for reasons of corporate policy, e.g. transferring data to removable media, viewing personnel records or making a high value payment.
       * </pre>
       *
       * <code>.event_logging.v4.PurposeComplexType purpose = 3;</code>
       */
      public Builder clearPurpose() {
        bitField0_ = (bitField0_ & ~0x00000004);
        purpose_ = null;
        if (purposeBuilder_ != null) {
          purposeBuilder_.dispose();
          purposeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The purpose/justification assigned to this event for user actions that are required to be justified for reasons of corporate policy, e.g. transferring data to removable media, viewing personnel records or making a high value payment.
       * </pre>
       *
       * <code>.event_logging.v4.PurposeComplexType purpose = 3;</code>
       */
      public event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexType.Builder getPurposeBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getPurposeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The purpose/justification assigned to this event for user actions that are required to be justified for reasons of corporate policy, e.g. transferring data to removable media, viewing personnel records or making a high value payment.
       * </pre>
       *
       * <code>.event_logging.v4.PurposeComplexType purpose = 3;</code>
       */
      public event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexTypeOrBuilder getPurposeOrBuilder() {
        if (purposeBuilder_ != null) {
          return purposeBuilder_.getMessageOrBuilder();
        } else {
          return purpose_ == null ?
              event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexType.getDefaultInstance() : purpose_;
        }
      }
      /**
       * <pre>
       * The purpose/justification assigned to this event for user actions that are required to be justified for reasons of corporate policy, e.g. transferring data to removable media, viewing personnel records or making a high value payment.
       * </pre>
       *
       * <code>.event_logging.v4.PurposeComplexType purpose = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexType, event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexType.Builder, event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexTypeOrBuilder> 
          getPurposeFieldBuilder() {
        if (purposeBuilder_ == null) {
          purposeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexType, event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexType.Builder, event_logging.v4.PurposeComplexTypeOuterClass.PurposeComplexTypeOrBuilder>(
                  getPurpose(),
                  getParentForChildren(),
                  isClean());
          purpose_ = null;
        }
        return purposeBuilder_;
      }

      private event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType authenticate_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType, event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType.Builder, event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexTypeOrBuilder> authenticateBuilder_;
      /**
       * <pre>
       * Used to record authentication events such as logon and logoff. Also used for recording authentication by physical access controls, e.g. doors/turnstiles. All authentication events that originate from a client device should record details of the client device in the event source.
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateComplexType authenticate = 4 [(.buf.validate.field) = { ... }</code>
       * @return Whether the authenticate field is set.
       */
      public boolean hasAuthenticate() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Used to record authentication events such as logon and logoff. Also used for recording authentication by physical access controls, e.g. doors/turnstiles. All authentication events that originate from a client device should record details of the client device in the event source.
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateComplexType authenticate = 4 [(.buf.validate.field) = { ... }</code>
       * @return The authenticate.
       */
      public event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType getAuthenticate() {
        if (authenticateBuilder_ == null) {
          return authenticate_ == null ? event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType.getDefaultInstance() : authenticate_;
        } else {
          return authenticateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Used to record authentication events such as logon and logoff. Also used for recording authentication by physical access controls, e.g. doors/turnstiles. All authentication events that originate from a client device should record details of the client device in the event source.
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateComplexType authenticate = 4 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setAuthenticate(event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType value) {
        if (authenticateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          authenticate_ = value;
        } else {
          authenticateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used to record authentication events such as logon and logoff. Also used for recording authentication by physical access controls, e.g. doors/turnstiles. All authentication events that originate from a client device should record details of the client device in the event source.
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateComplexType authenticate = 4 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setAuthenticate(
          event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType.Builder builderForValue) {
        if (authenticateBuilder_ == null) {
          authenticate_ = builderForValue.build();
        } else {
          authenticateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used to record authentication events such as logon and logoff. Also used for recording authentication by physical access controls, e.g. doors/turnstiles. All authentication events that originate from a client device should record details of the client device in the event source.
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateComplexType authenticate = 4 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeAuthenticate(event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType value) {
        if (authenticateBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            authenticate_ != null &&
            authenticate_ != event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType.getDefaultInstance()) {
            getAuthenticateBuilder().mergeFrom(value);
          } else {
            authenticate_ = value;
          }
        } else {
          authenticateBuilder_.mergeFrom(value);
        }
        if (authenticate_ != null) {
          bitField0_ |= 0x00000008;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Used to record authentication events such as logon and logoff. Also used for recording authentication by physical access controls, e.g. doors/turnstiles. All authentication events that originate from a client device should record details of the client device in the event source.
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateComplexType authenticate = 4 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearAuthenticate() {
        bitField0_ = (bitField0_ & ~0x00000008);
        authenticate_ = null;
        if (authenticateBuilder_ != null) {
          authenticateBuilder_.dispose();
          authenticateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used to record authentication events such as logon and logoff. Also used for recording authentication by physical access controls, e.g. doors/turnstiles. All authentication events that originate from a client device should record details of the client device in the event source.
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateComplexType authenticate = 4 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType.Builder getAuthenticateBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getAuthenticateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Used to record authentication events such as logon and logoff. Also used for recording authentication by physical access controls, e.g. doors/turnstiles. All authentication events that originate from a client device should record details of the client device in the event source.
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateComplexType authenticate = 4 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexTypeOrBuilder getAuthenticateOrBuilder() {
        if (authenticateBuilder_ != null) {
          return authenticateBuilder_.getMessageOrBuilder();
        } else {
          return authenticate_ == null ?
              event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType.getDefaultInstance() : authenticate_;
        }
      }
      /**
       * <pre>
       * Used to record authentication events such as logon and logoff. Also used for recording authentication by physical access controls, e.g. doors/turnstiles. All authentication events that originate from a client device should record details of the client device in the event source.
       * </pre>
       *
       * <code>.event_logging.v4.AuthenticateComplexType authenticate = 4 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType, event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType.Builder, event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexTypeOrBuilder> 
          getAuthenticateFieldBuilder() {
        if (authenticateBuilder_ == null) {
          authenticateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType, event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexType.Builder, event_logging.v4.AuthenticateComplexTypeOuterClass.AuthenticateComplexTypeOrBuilder>(
                  getAuthenticate(),
                  getParentForChildren(),
                  isClean());
          authenticate_ = null;
        }
        return authenticateBuilder_;
      }

      private event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexType authorise_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexType, event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexType.Builder, event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexTypeOrBuilder> authoriseBuilder_;
      /**
       * <pre>
       * All events related to account management such as adding and removing user and system accounts.
       * </pre>
       *
       * <code>.event_logging.v4.AuthoriseComplexType authorise = 5 [(.buf.validate.field) = { ... }</code>
       * @return Whether the authorise field is set.
       */
      public boolean hasAuthorise() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * All events related to account management such as adding and removing user and system accounts.
       * </pre>
       *
       * <code>.event_logging.v4.AuthoriseComplexType authorise = 5 [(.buf.validate.field) = { ... }</code>
       * @return The authorise.
       */
      public event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexType getAuthorise() {
        if (authoriseBuilder_ == null) {
          return authorise_ == null ? event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexType.getDefaultInstance() : authorise_;
        } else {
          return authoriseBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * All events related to account management such as adding and removing user and system accounts.
       * </pre>
       *
       * <code>.event_logging.v4.AuthoriseComplexType authorise = 5 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setAuthorise(event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexType value) {
        if (authoriseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          authorise_ = value;
        } else {
          authoriseBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to account management such as adding and removing user and system accounts.
       * </pre>
       *
       * <code>.event_logging.v4.AuthoriseComplexType authorise = 5 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setAuthorise(
          event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexType.Builder builderForValue) {
        if (authoriseBuilder_ == null) {
          authorise_ = builderForValue.build();
        } else {
          authoriseBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to account management such as adding and removing user and system accounts.
       * </pre>
       *
       * <code>.event_logging.v4.AuthoriseComplexType authorise = 5 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeAuthorise(event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexType value) {
        if (authoriseBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            authorise_ != null &&
            authorise_ != event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexType.getDefaultInstance()) {
            getAuthoriseBuilder().mergeFrom(value);
          } else {
            authorise_ = value;
          }
        } else {
          authoriseBuilder_.mergeFrom(value);
        }
        if (authorise_ != null) {
          bitField0_ |= 0x00000010;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * All events related to account management such as adding and removing user and system accounts.
       * </pre>
       *
       * <code>.event_logging.v4.AuthoriseComplexType authorise = 5 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearAuthorise() {
        bitField0_ = (bitField0_ & ~0x00000010);
        authorise_ = null;
        if (authoriseBuilder_ != null) {
          authoriseBuilder_.dispose();
          authoriseBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to account management such as adding and removing user and system accounts.
       * </pre>
       *
       * <code>.event_logging.v4.AuthoriseComplexType authorise = 5 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexType.Builder getAuthoriseBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getAuthoriseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * All events related to account management such as adding and removing user and system accounts.
       * </pre>
       *
       * <code>.event_logging.v4.AuthoriseComplexType authorise = 5 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexTypeOrBuilder getAuthoriseOrBuilder() {
        if (authoriseBuilder_ != null) {
          return authoriseBuilder_.getMessageOrBuilder();
        } else {
          return authorise_ == null ?
              event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexType.getDefaultInstance() : authorise_;
        }
      }
      /**
       * <pre>
       * All events related to account management such as adding and removing user and system accounts.
       * </pre>
       *
       * <code>.event_logging.v4.AuthoriseComplexType authorise = 5 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexType, event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexType.Builder, event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexTypeOrBuilder> 
          getAuthoriseFieldBuilder() {
        if (authoriseBuilder_ == null) {
          authoriseBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexType, event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexType.Builder, event_logging.v4.AuthoriseComplexTypeOuterClass.AuthoriseComplexTypeOrBuilder>(
                  getAuthorise(),
                  getParentForChildren(),
                  isClean());
          authorise_ = null;
        }
        return authoriseBuilder_;
      }

      private event_logging.v4.SearchComplexTypeOuterClass.SearchComplexType search_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.SearchComplexTypeOuterClass.SearchComplexType, event_logging.v4.SearchComplexTypeOuterClass.SearchComplexType.Builder, event_logging.v4.SearchComplexTypeOuterClass.SearchComplexTypeOrBuilder> searchBuilder_;
      /**
       * <pre>
       * Any events related to searching for data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.SearchComplexType search = 6 [(.buf.validate.field) = { ... }</code>
       * @return Whether the search field is set.
       */
      public boolean hasSearch() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Any events related to searching for data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.SearchComplexType search = 6 [(.buf.validate.field) = { ... }</code>
       * @return The search.
       */
      public event_logging.v4.SearchComplexTypeOuterClass.SearchComplexType getSearch() {
        if (searchBuilder_ == null) {
          return search_ == null ? event_logging.v4.SearchComplexTypeOuterClass.SearchComplexType.getDefaultInstance() : search_;
        } else {
          return searchBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Any events related to searching for data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.SearchComplexType search = 6 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setSearch(event_logging.v4.SearchComplexTypeOuterClass.SearchComplexType value) {
        if (searchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          search_ = value;
        } else {
          searchBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any events related to searching for data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.SearchComplexType search = 6 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setSearch(
          event_logging.v4.SearchComplexTypeOuterClass.SearchComplexType.Builder builderForValue) {
        if (searchBuilder_ == null) {
          search_ = builderForValue.build();
        } else {
          searchBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any events related to searching for data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.SearchComplexType search = 6 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeSearch(event_logging.v4.SearchComplexTypeOuterClass.SearchComplexType value) {
        if (searchBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            search_ != null &&
            search_ != event_logging.v4.SearchComplexTypeOuterClass.SearchComplexType.getDefaultInstance()) {
            getSearchBuilder().mergeFrom(value);
          } else {
            search_ = value;
          }
        } else {
          searchBuilder_.mergeFrom(value);
        }
        if (search_ != null) {
          bitField0_ |= 0x00000020;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Any events related to searching for data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.SearchComplexType search = 6 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearSearch() {
        bitField0_ = (bitField0_ & ~0x00000020);
        search_ = null;
        if (searchBuilder_ != null) {
          searchBuilder_.dispose();
          searchBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any events related to searching for data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.SearchComplexType search = 6 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.SearchComplexTypeOuterClass.SearchComplexType.Builder getSearchBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getSearchFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Any events related to searching for data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.SearchComplexType search = 6 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.SearchComplexTypeOuterClass.SearchComplexTypeOrBuilder getSearchOrBuilder() {
        if (searchBuilder_ != null) {
          return searchBuilder_.getMessageOrBuilder();
        } else {
          return search_ == null ?
              event_logging.v4.SearchComplexTypeOuterClass.SearchComplexType.getDefaultInstance() : search_;
        }
      }
      /**
       * <pre>
       * Any events related to searching for data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.SearchComplexType search = 6 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.SearchComplexTypeOuterClass.SearchComplexType, event_logging.v4.SearchComplexTypeOuterClass.SearchComplexType.Builder, event_logging.v4.SearchComplexTypeOuterClass.SearchComplexTypeOrBuilder> 
          getSearchFieldBuilder() {
        if (searchBuilder_ == null) {
          searchBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.SearchComplexTypeOuterClass.SearchComplexType, event_logging.v4.SearchComplexTypeOuterClass.SearchComplexType.Builder, event_logging.v4.SearchComplexTypeOuterClass.SearchComplexTypeOrBuilder>(
                  getSearch(),
                  getParentForChildren(),
                  isClean());
          search_ = null;
        }
        return searchBuilder_;
      }

      private event_logging.v4.CopyComplexTypeOuterClass.CopyComplexType copy_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.CopyComplexTypeOuterClass.CopyComplexType, event_logging.v4.CopyComplexTypeOuterClass.CopyComplexType.Builder, event_logging.v4.CopyComplexTypeOuterClass.CopyComplexTypeOrBuilder> copyBuilder_;
      /**
       * <pre>
       * All events related to copying data, files, documents, etc. should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.CopyComplexType copy = 7 [(.buf.validate.field) = { ... }</code>
       * @return Whether the copy field is set.
       */
      public boolean hasCopy() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * All events related to copying data, files, documents, etc. should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.CopyComplexType copy = 7 [(.buf.validate.field) = { ... }</code>
       * @return The copy.
       */
      public event_logging.v4.CopyComplexTypeOuterClass.CopyComplexType getCopy() {
        if (copyBuilder_ == null) {
          return copy_ == null ? event_logging.v4.CopyComplexTypeOuterClass.CopyComplexType.getDefaultInstance() : copy_;
        } else {
          return copyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * All events related to copying data, files, documents, etc. should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.CopyComplexType copy = 7 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setCopy(event_logging.v4.CopyComplexTypeOuterClass.CopyComplexType value) {
        if (copyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          copy_ = value;
        } else {
          copyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to copying data, files, documents, etc. should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.CopyComplexType copy = 7 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setCopy(
          event_logging.v4.CopyComplexTypeOuterClass.CopyComplexType.Builder builderForValue) {
        if (copyBuilder_ == null) {
          copy_ = builderForValue.build();
        } else {
          copyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to copying data, files, documents, etc. should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.CopyComplexType copy = 7 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeCopy(event_logging.v4.CopyComplexTypeOuterClass.CopyComplexType value) {
        if (copyBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0) &&
            copy_ != null &&
            copy_ != event_logging.v4.CopyComplexTypeOuterClass.CopyComplexType.getDefaultInstance()) {
            getCopyBuilder().mergeFrom(value);
          } else {
            copy_ = value;
          }
        } else {
          copyBuilder_.mergeFrom(value);
        }
        if (copy_ != null) {
          bitField0_ |= 0x00000040;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * All events related to copying data, files, documents, etc. should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.CopyComplexType copy = 7 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearCopy() {
        bitField0_ = (bitField0_ & ~0x00000040);
        copy_ = null;
        if (copyBuilder_ != null) {
          copyBuilder_.dispose();
          copyBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to copying data, files, documents, etc. should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.CopyComplexType copy = 7 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.CopyComplexTypeOuterClass.CopyComplexType.Builder getCopyBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getCopyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * All events related to copying data, files, documents, etc. should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.CopyComplexType copy = 7 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.CopyComplexTypeOuterClass.CopyComplexTypeOrBuilder getCopyOrBuilder() {
        if (copyBuilder_ != null) {
          return copyBuilder_.getMessageOrBuilder();
        } else {
          return copy_ == null ?
              event_logging.v4.CopyComplexTypeOuterClass.CopyComplexType.getDefaultInstance() : copy_;
        }
      }
      /**
       * <pre>
       * All events related to copying data, files, documents, etc. should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.CopyComplexType copy = 7 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.CopyComplexTypeOuterClass.CopyComplexType, event_logging.v4.CopyComplexTypeOuterClass.CopyComplexType.Builder, event_logging.v4.CopyComplexTypeOuterClass.CopyComplexTypeOrBuilder> 
          getCopyFieldBuilder() {
        if (copyBuilder_ == null) {
          copyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.CopyComplexTypeOuterClass.CopyComplexType, event_logging.v4.CopyComplexTypeOuterClass.CopyComplexType.Builder, event_logging.v4.CopyComplexTypeOuterClass.CopyComplexTypeOrBuilder>(
                  getCopy(),
                  getParentForChildren(),
                  isClean());
          copy_ = null;
        }
        return copyBuilder_;
      }

      private event_logging.v4.MoveComplexTypeOuterClass.MoveComplexType move_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.MoveComplexTypeOuterClass.MoveComplexType, event_logging.v4.MoveComplexTypeOuterClass.MoveComplexType.Builder, event_logging.v4.MoveComplexTypeOuterClass.MoveComplexTypeOrBuilder> moveBuilder_;
      /**
       * <pre>
       * All events related to moving data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.MoveComplexType move = 8 [(.buf.validate.field) = { ... }</code>
       * @return Whether the move field is set.
       */
      public boolean hasMove() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * All events related to moving data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.MoveComplexType move = 8 [(.buf.validate.field) = { ... }</code>
       * @return The move.
       */
      public event_logging.v4.MoveComplexTypeOuterClass.MoveComplexType getMove() {
        if (moveBuilder_ == null) {
          return move_ == null ? event_logging.v4.MoveComplexTypeOuterClass.MoveComplexType.getDefaultInstance() : move_;
        } else {
          return moveBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * All events related to moving data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.MoveComplexType move = 8 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setMove(event_logging.v4.MoveComplexTypeOuterClass.MoveComplexType value) {
        if (moveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          move_ = value;
        } else {
          moveBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to moving data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.MoveComplexType move = 8 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setMove(
          event_logging.v4.MoveComplexTypeOuterClass.MoveComplexType.Builder builderForValue) {
        if (moveBuilder_ == null) {
          move_ = builderForValue.build();
        } else {
          moveBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to moving data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.MoveComplexType move = 8 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeMove(event_logging.v4.MoveComplexTypeOuterClass.MoveComplexType value) {
        if (moveBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0) &&
            move_ != null &&
            move_ != event_logging.v4.MoveComplexTypeOuterClass.MoveComplexType.getDefaultInstance()) {
            getMoveBuilder().mergeFrom(value);
          } else {
            move_ = value;
          }
        } else {
          moveBuilder_.mergeFrom(value);
        }
        if (move_ != null) {
          bitField0_ |= 0x00000080;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * All events related to moving data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.MoveComplexType move = 8 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearMove() {
        bitField0_ = (bitField0_ & ~0x00000080);
        move_ = null;
        if (moveBuilder_ != null) {
          moveBuilder_.dispose();
          moveBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to moving data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.MoveComplexType move = 8 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.MoveComplexTypeOuterClass.MoveComplexType.Builder getMoveBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getMoveFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * All events related to moving data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.MoveComplexType move = 8 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.MoveComplexTypeOuterClass.MoveComplexTypeOrBuilder getMoveOrBuilder() {
        if (moveBuilder_ != null) {
          return moveBuilder_.getMessageOrBuilder();
        } else {
          return move_ == null ?
              event_logging.v4.MoveComplexTypeOuterClass.MoveComplexType.getDefaultInstance() : move_;
        }
      }
      /**
       * <pre>
       * All events related to moving data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.MoveComplexType move = 8 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.MoveComplexTypeOuterClass.MoveComplexType, event_logging.v4.MoveComplexTypeOuterClass.MoveComplexType.Builder, event_logging.v4.MoveComplexTypeOuterClass.MoveComplexTypeOrBuilder> 
          getMoveFieldBuilder() {
        if (moveBuilder_ == null) {
          moveBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.MoveComplexTypeOuterClass.MoveComplexType, event_logging.v4.MoveComplexTypeOuterClass.MoveComplexType.Builder, event_logging.v4.MoveComplexTypeOuterClass.MoveComplexTypeOrBuilder>(
                  getMove(),
                  getParentForChildren(),
                  isClean());
          move_ = null;
        }
        return moveBuilder_;
      }

      private event_logging.v4.CreateComplexTypeOuterClass.CreateComplexType create_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.CreateComplexTypeOuterClass.CreateComplexType, event_logging.v4.CreateComplexTypeOuterClass.CreateComplexType.Builder, event_logging.v4.CreateComplexTypeOuterClass.CreateComplexTypeOrBuilder> createBuilder_;
      /**
       * <pre>
       * All events related to creating data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.CreateComplexType create = 9 [(.buf.validate.field) = { ... }</code>
       * @return Whether the create field is set.
       */
      public boolean hasCreate() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * All events related to creating data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.CreateComplexType create = 9 [(.buf.validate.field) = { ... }</code>
       * @return The create.
       */
      public event_logging.v4.CreateComplexTypeOuterClass.CreateComplexType getCreate() {
        if (createBuilder_ == null) {
          return create_ == null ? event_logging.v4.CreateComplexTypeOuterClass.CreateComplexType.getDefaultInstance() : create_;
        } else {
          return createBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * All events related to creating data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.CreateComplexType create = 9 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setCreate(event_logging.v4.CreateComplexTypeOuterClass.CreateComplexType value) {
        if (createBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          create_ = value;
        } else {
          createBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to creating data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.CreateComplexType create = 9 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setCreate(
          event_logging.v4.CreateComplexTypeOuterClass.CreateComplexType.Builder builderForValue) {
        if (createBuilder_ == null) {
          create_ = builderForValue.build();
        } else {
          createBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to creating data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.CreateComplexType create = 9 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeCreate(event_logging.v4.CreateComplexTypeOuterClass.CreateComplexType value) {
        if (createBuilder_ == null) {
          if (((bitField0_ & 0x00000100) != 0) &&
            create_ != null &&
            create_ != event_logging.v4.CreateComplexTypeOuterClass.CreateComplexType.getDefaultInstance()) {
            getCreateBuilder().mergeFrom(value);
          } else {
            create_ = value;
          }
        } else {
          createBuilder_.mergeFrom(value);
        }
        if (create_ != null) {
          bitField0_ |= 0x00000100;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * All events related to creating data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.CreateComplexType create = 9 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearCreate() {
        bitField0_ = (bitField0_ & ~0x00000100);
        create_ = null;
        if (createBuilder_ != null) {
          createBuilder_.dispose();
          createBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to creating data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.CreateComplexType create = 9 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.CreateComplexTypeOuterClass.CreateComplexType.Builder getCreateBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getCreateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * All events related to creating data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.CreateComplexType create = 9 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.CreateComplexTypeOuterClass.CreateComplexTypeOrBuilder getCreateOrBuilder() {
        if (createBuilder_ != null) {
          return createBuilder_.getMessageOrBuilder();
        } else {
          return create_ == null ?
              event_logging.v4.CreateComplexTypeOuterClass.CreateComplexType.getDefaultInstance() : create_;
        }
      }
      /**
       * <pre>
       * All events related to creating data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.CreateComplexType create = 9 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.CreateComplexTypeOuterClass.CreateComplexType, event_logging.v4.CreateComplexTypeOuterClass.CreateComplexType.Builder, event_logging.v4.CreateComplexTypeOuterClass.CreateComplexTypeOrBuilder> 
          getCreateFieldBuilder() {
        if (createBuilder_ == null) {
          createBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.CreateComplexTypeOuterClass.CreateComplexType, event_logging.v4.CreateComplexTypeOuterClass.CreateComplexType.Builder, event_logging.v4.CreateComplexTypeOuterClass.CreateComplexTypeOrBuilder>(
                  getCreate(),
                  getParentForChildren(),
                  isClean());
          create_ = null;
        }
        return createBuilder_;
      }

      private event_logging.v4.ViewComplexTypeOuterClass.ViewComplexType view_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.ViewComplexTypeOuterClass.ViewComplexType, event_logging.v4.ViewComplexTypeOuterClass.ViewComplexType.Builder, event_logging.v4.ViewComplexTypeOuterClass.ViewComplexTypeOrBuilder> viewBuilder_;
      /**
       * <pre>
       * All events related to viewing data should use this element. Note that viewing data is subtly different from reading data. This event is to be used when data is displayed to an end user and not for data read by an application.
       * </pre>
       *
       * <code>.event_logging.v4.ViewComplexType view = 10 [(.buf.validate.field) = { ... }</code>
       * @return Whether the view field is set.
       */
      public boolean hasView() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * All events related to viewing data should use this element. Note that viewing data is subtly different from reading data. This event is to be used when data is displayed to an end user and not for data read by an application.
       * </pre>
       *
       * <code>.event_logging.v4.ViewComplexType view = 10 [(.buf.validate.field) = { ... }</code>
       * @return The view.
       */
      public event_logging.v4.ViewComplexTypeOuterClass.ViewComplexType getView() {
        if (viewBuilder_ == null) {
          return view_ == null ? event_logging.v4.ViewComplexTypeOuterClass.ViewComplexType.getDefaultInstance() : view_;
        } else {
          return viewBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * All events related to viewing data should use this element. Note that viewing data is subtly different from reading data. This event is to be used when data is displayed to an end user and not for data read by an application.
       * </pre>
       *
       * <code>.event_logging.v4.ViewComplexType view = 10 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setView(event_logging.v4.ViewComplexTypeOuterClass.ViewComplexType value) {
        if (viewBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          view_ = value;
        } else {
          viewBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to viewing data should use this element. Note that viewing data is subtly different from reading data. This event is to be used when data is displayed to an end user and not for data read by an application.
       * </pre>
       *
       * <code>.event_logging.v4.ViewComplexType view = 10 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setView(
          event_logging.v4.ViewComplexTypeOuterClass.ViewComplexType.Builder builderForValue) {
        if (viewBuilder_ == null) {
          view_ = builderForValue.build();
        } else {
          viewBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to viewing data should use this element. Note that viewing data is subtly different from reading data. This event is to be used when data is displayed to an end user and not for data read by an application.
       * </pre>
       *
       * <code>.event_logging.v4.ViewComplexType view = 10 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeView(event_logging.v4.ViewComplexTypeOuterClass.ViewComplexType value) {
        if (viewBuilder_ == null) {
          if (((bitField0_ & 0x00000200) != 0) &&
            view_ != null &&
            view_ != event_logging.v4.ViewComplexTypeOuterClass.ViewComplexType.getDefaultInstance()) {
            getViewBuilder().mergeFrom(value);
          } else {
            view_ = value;
          }
        } else {
          viewBuilder_.mergeFrom(value);
        }
        if (view_ != null) {
          bitField0_ |= 0x00000200;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * All events related to viewing data should use this element. Note that viewing data is subtly different from reading data. This event is to be used when data is displayed to an end user and not for data read by an application.
       * </pre>
       *
       * <code>.event_logging.v4.ViewComplexType view = 10 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearView() {
        bitField0_ = (bitField0_ & ~0x00000200);
        view_ = null;
        if (viewBuilder_ != null) {
          viewBuilder_.dispose();
          viewBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to viewing data should use this element. Note that viewing data is subtly different from reading data. This event is to be used when data is displayed to an end user and not for data read by an application.
       * </pre>
       *
       * <code>.event_logging.v4.ViewComplexType view = 10 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.ViewComplexTypeOuterClass.ViewComplexType.Builder getViewBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getViewFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * All events related to viewing data should use this element. Note that viewing data is subtly different from reading data. This event is to be used when data is displayed to an end user and not for data read by an application.
       * </pre>
       *
       * <code>.event_logging.v4.ViewComplexType view = 10 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.ViewComplexTypeOuterClass.ViewComplexTypeOrBuilder getViewOrBuilder() {
        if (viewBuilder_ != null) {
          return viewBuilder_.getMessageOrBuilder();
        } else {
          return view_ == null ?
              event_logging.v4.ViewComplexTypeOuterClass.ViewComplexType.getDefaultInstance() : view_;
        }
      }
      /**
       * <pre>
       * All events related to viewing data should use this element. Note that viewing data is subtly different from reading data. This event is to be used when data is displayed to an end user and not for data read by an application.
       * </pre>
       *
       * <code>.event_logging.v4.ViewComplexType view = 10 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.ViewComplexTypeOuterClass.ViewComplexType, event_logging.v4.ViewComplexTypeOuterClass.ViewComplexType.Builder, event_logging.v4.ViewComplexTypeOuterClass.ViewComplexTypeOrBuilder> 
          getViewFieldBuilder() {
        if (viewBuilder_ == null) {
          viewBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.ViewComplexTypeOuterClass.ViewComplexType, event_logging.v4.ViewComplexTypeOuterClass.ViewComplexType.Builder, event_logging.v4.ViewComplexTypeOuterClass.ViewComplexTypeOrBuilder>(
                  getView(),
                  getParentForChildren(),
                  isClean());
          view_ = null;
        }
        return viewBuilder_;
      }

      private event_logging.v4.ImportComplexTypeOuterClass.ImportComplexType importField_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.ImportComplexTypeOuterClass.ImportComplexType, event_logging.v4.ImportComplexTypeOuterClass.ImportComplexType.Builder, event_logging.v4.ImportComplexTypeOuterClass.ImportComplexTypeOrBuilder> importFieldBuilder_;
      /**
       * <pre>
       * All events related to importing data should use this element. An import could include any batch insert of data from an external source or uploading a file.
       * </pre>
       *
       * <code>.event_logging.v4.ImportComplexType import_field = 11 [(.buf.validate.field) = { ... }</code>
       * @return Whether the importField field is set.
       */
      public boolean hasImportField() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * All events related to importing data should use this element. An import could include any batch insert of data from an external source or uploading a file.
       * </pre>
       *
       * <code>.event_logging.v4.ImportComplexType import_field = 11 [(.buf.validate.field) = { ... }</code>
       * @return The importField.
       */
      public event_logging.v4.ImportComplexTypeOuterClass.ImportComplexType getImportField() {
        if (importFieldBuilder_ == null) {
          return importField_ == null ? event_logging.v4.ImportComplexTypeOuterClass.ImportComplexType.getDefaultInstance() : importField_;
        } else {
          return importFieldBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * All events related to importing data should use this element. An import could include any batch insert of data from an external source or uploading a file.
       * </pre>
       *
       * <code>.event_logging.v4.ImportComplexType import_field = 11 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setImportField(event_logging.v4.ImportComplexTypeOuterClass.ImportComplexType value) {
        if (importFieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          importField_ = value;
        } else {
          importFieldBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to importing data should use this element. An import could include any batch insert of data from an external source or uploading a file.
       * </pre>
       *
       * <code>.event_logging.v4.ImportComplexType import_field = 11 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setImportField(
          event_logging.v4.ImportComplexTypeOuterClass.ImportComplexType.Builder builderForValue) {
        if (importFieldBuilder_ == null) {
          importField_ = builderForValue.build();
        } else {
          importFieldBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to importing data should use this element. An import could include any batch insert of data from an external source or uploading a file.
       * </pre>
       *
       * <code>.event_logging.v4.ImportComplexType import_field = 11 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeImportField(event_logging.v4.ImportComplexTypeOuterClass.ImportComplexType value) {
        if (importFieldBuilder_ == null) {
          if (((bitField0_ & 0x00000400) != 0) &&
            importField_ != null &&
            importField_ != event_logging.v4.ImportComplexTypeOuterClass.ImportComplexType.getDefaultInstance()) {
            getImportFieldBuilder().mergeFrom(value);
          } else {
            importField_ = value;
          }
        } else {
          importFieldBuilder_.mergeFrom(value);
        }
        if (importField_ != null) {
          bitField0_ |= 0x00000400;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * All events related to importing data should use this element. An import could include any batch insert of data from an external source or uploading a file.
       * </pre>
       *
       * <code>.event_logging.v4.ImportComplexType import_field = 11 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearImportField() {
        bitField0_ = (bitField0_ & ~0x00000400);
        importField_ = null;
        if (importFieldBuilder_ != null) {
          importFieldBuilder_.dispose();
          importFieldBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to importing data should use this element. An import could include any batch insert of data from an external source or uploading a file.
       * </pre>
       *
       * <code>.event_logging.v4.ImportComplexType import_field = 11 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.ImportComplexTypeOuterClass.ImportComplexType.Builder getImportFieldBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getImportFieldFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * All events related to importing data should use this element. An import could include any batch insert of data from an external source or uploading a file.
       * </pre>
       *
       * <code>.event_logging.v4.ImportComplexType import_field = 11 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.ImportComplexTypeOuterClass.ImportComplexTypeOrBuilder getImportFieldOrBuilder() {
        if (importFieldBuilder_ != null) {
          return importFieldBuilder_.getMessageOrBuilder();
        } else {
          return importField_ == null ?
              event_logging.v4.ImportComplexTypeOuterClass.ImportComplexType.getDefaultInstance() : importField_;
        }
      }
      /**
       * <pre>
       * All events related to importing data should use this element. An import could include any batch insert of data from an external source or uploading a file.
       * </pre>
       *
       * <code>.event_logging.v4.ImportComplexType import_field = 11 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.ImportComplexTypeOuterClass.ImportComplexType, event_logging.v4.ImportComplexTypeOuterClass.ImportComplexType.Builder, event_logging.v4.ImportComplexTypeOuterClass.ImportComplexTypeOrBuilder> 
          getImportFieldFieldBuilder() {
        if (importFieldBuilder_ == null) {
          importFieldBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.ImportComplexTypeOuterClass.ImportComplexType, event_logging.v4.ImportComplexTypeOuterClass.ImportComplexType.Builder, event_logging.v4.ImportComplexTypeOuterClass.ImportComplexTypeOrBuilder>(
                  getImportField(),
                  getParentForChildren(),
                  isClean());
          importField_ = null;
        }
        return importFieldBuilder_;
      }

      private event_logging.v4.ExportComplexTypeOuterClass.ExportComplexType export_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.ExportComplexTypeOuterClass.ExportComplexType, event_logging.v4.ExportComplexTypeOuterClass.ExportComplexType.Builder, event_logging.v4.ExportComplexTypeOuterClass.ExportComplexTypeOrBuilder> exportBuilder_;
      /**
       * <pre>
       * All events related to exporting data should use this element. An export could include activities such as downloading data from an application or generating a report.
       * </pre>
       *
       * <code>.event_logging.v4.ExportComplexType export = 12 [(.buf.validate.field) = { ... }</code>
       * @return Whether the export field is set.
       */
      public boolean hasExport() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       * All events related to exporting data should use this element. An export could include activities such as downloading data from an application or generating a report.
       * </pre>
       *
       * <code>.event_logging.v4.ExportComplexType export = 12 [(.buf.validate.field) = { ... }</code>
       * @return The export.
       */
      public event_logging.v4.ExportComplexTypeOuterClass.ExportComplexType getExport() {
        if (exportBuilder_ == null) {
          return export_ == null ? event_logging.v4.ExportComplexTypeOuterClass.ExportComplexType.getDefaultInstance() : export_;
        } else {
          return exportBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * All events related to exporting data should use this element. An export could include activities such as downloading data from an application or generating a report.
       * </pre>
       *
       * <code>.event_logging.v4.ExportComplexType export = 12 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setExport(event_logging.v4.ExportComplexTypeOuterClass.ExportComplexType value) {
        if (exportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          export_ = value;
        } else {
          exportBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to exporting data should use this element. An export could include activities such as downloading data from an application or generating a report.
       * </pre>
       *
       * <code>.event_logging.v4.ExportComplexType export = 12 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setExport(
          event_logging.v4.ExportComplexTypeOuterClass.ExportComplexType.Builder builderForValue) {
        if (exportBuilder_ == null) {
          export_ = builderForValue.build();
        } else {
          exportBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to exporting data should use this element. An export could include activities such as downloading data from an application or generating a report.
       * </pre>
       *
       * <code>.event_logging.v4.ExportComplexType export = 12 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeExport(event_logging.v4.ExportComplexTypeOuterClass.ExportComplexType value) {
        if (exportBuilder_ == null) {
          if (((bitField0_ & 0x00000800) != 0) &&
            export_ != null &&
            export_ != event_logging.v4.ExportComplexTypeOuterClass.ExportComplexType.getDefaultInstance()) {
            getExportBuilder().mergeFrom(value);
          } else {
            export_ = value;
          }
        } else {
          exportBuilder_.mergeFrom(value);
        }
        if (export_ != null) {
          bitField0_ |= 0x00000800;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * All events related to exporting data should use this element. An export could include activities such as downloading data from an application or generating a report.
       * </pre>
       *
       * <code>.event_logging.v4.ExportComplexType export = 12 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearExport() {
        bitField0_ = (bitField0_ & ~0x00000800);
        export_ = null;
        if (exportBuilder_ != null) {
          exportBuilder_.dispose();
          exportBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to exporting data should use this element. An export could include activities such as downloading data from an application or generating a report.
       * </pre>
       *
       * <code>.event_logging.v4.ExportComplexType export = 12 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.ExportComplexTypeOuterClass.ExportComplexType.Builder getExportBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getExportFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * All events related to exporting data should use this element. An export could include activities such as downloading data from an application or generating a report.
       * </pre>
       *
       * <code>.event_logging.v4.ExportComplexType export = 12 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.ExportComplexTypeOuterClass.ExportComplexTypeOrBuilder getExportOrBuilder() {
        if (exportBuilder_ != null) {
          return exportBuilder_.getMessageOrBuilder();
        } else {
          return export_ == null ?
              event_logging.v4.ExportComplexTypeOuterClass.ExportComplexType.getDefaultInstance() : export_;
        }
      }
      /**
       * <pre>
       * All events related to exporting data should use this element. An export could include activities such as downloading data from an application or generating a report.
       * </pre>
       *
       * <code>.event_logging.v4.ExportComplexType export = 12 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.ExportComplexTypeOuterClass.ExportComplexType, event_logging.v4.ExportComplexTypeOuterClass.ExportComplexType.Builder, event_logging.v4.ExportComplexTypeOuterClass.ExportComplexTypeOrBuilder> 
          getExportFieldBuilder() {
        if (exportBuilder_ == null) {
          exportBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.ExportComplexTypeOuterClass.ExportComplexType, event_logging.v4.ExportComplexTypeOuterClass.ExportComplexType.Builder, event_logging.v4.ExportComplexTypeOuterClass.ExportComplexTypeOrBuilder>(
                  getExport(),
                  getParentForChildren(),
                  isClean());
          export_ = null;
        }
        return exportBuilder_;
      }

      private event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType update_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType, event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType.Builder, event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexTypeOrBuilder> updateBuilder_;
      /**
       * <pre>
       * All events related to updating data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.UpdateComplexType update = 13 [(.buf.validate.field) = { ... }</code>
       * @return Whether the update field is set.
       */
      public boolean hasUpdate() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <pre>
       * All events related to updating data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.UpdateComplexType update = 13 [(.buf.validate.field) = { ... }</code>
       * @return The update.
       */
      public event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType getUpdate() {
        if (updateBuilder_ == null) {
          return update_ == null ? event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType.getDefaultInstance() : update_;
        } else {
          return updateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * All events related to updating data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.UpdateComplexType update = 13 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setUpdate(event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType value) {
        if (updateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          update_ = value;
        } else {
          updateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to updating data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.UpdateComplexType update = 13 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setUpdate(
          event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType.Builder builderForValue) {
        if (updateBuilder_ == null) {
          update_ = builderForValue.build();
        } else {
          updateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to updating data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.UpdateComplexType update = 13 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeUpdate(event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType value) {
        if (updateBuilder_ == null) {
          if (((bitField0_ & 0x00001000) != 0) &&
            update_ != null &&
            update_ != event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType.getDefaultInstance()) {
            getUpdateBuilder().mergeFrom(value);
          } else {
            update_ = value;
          }
        } else {
          updateBuilder_.mergeFrom(value);
        }
        if (update_ != null) {
          bitField0_ |= 0x00001000;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * All events related to updating data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.UpdateComplexType update = 13 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearUpdate() {
        bitField0_ = (bitField0_ & ~0x00001000);
        update_ = null;
        if (updateBuilder_ != null) {
          updateBuilder_.dispose();
          updateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to updating data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.UpdateComplexType update = 13 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType.Builder getUpdateBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getUpdateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * All events related to updating data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.UpdateComplexType update = 13 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexTypeOrBuilder getUpdateOrBuilder() {
        if (updateBuilder_ != null) {
          return updateBuilder_.getMessageOrBuilder();
        } else {
          return update_ == null ?
              event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType.getDefaultInstance() : update_;
        }
      }
      /**
       * <pre>
       * All events related to updating data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.UpdateComplexType update = 13 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType, event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType.Builder, event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexTypeOrBuilder> 
          getUpdateFieldBuilder() {
        if (updateBuilder_ == null) {
          updateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType, event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType.Builder, event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexTypeOrBuilder>(
                  getUpdate(),
                  getParentForChildren(),
                  isClean());
          update_ = null;
        }
        return updateBuilder_;
      }

      private event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexType delete_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexType, event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexType.Builder, event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexTypeOrBuilder> deleteBuilder_;
      /**
       * <pre>
       * All events related to deleting data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.DeleteComplexType delete = 14 [(.buf.validate.field) = { ... }</code>
       * @return Whether the delete field is set.
       */
      public boolean hasDelete() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <pre>
       * All events related to deleting data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.DeleteComplexType delete = 14 [(.buf.validate.field) = { ... }</code>
       * @return The delete.
       */
      public event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexType getDelete() {
        if (deleteBuilder_ == null) {
          return delete_ == null ? event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexType.getDefaultInstance() : delete_;
        } else {
          return deleteBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * All events related to deleting data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.DeleteComplexType delete = 14 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setDelete(event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexType value) {
        if (deleteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          delete_ = value;
        } else {
          deleteBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to deleting data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.DeleteComplexType delete = 14 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setDelete(
          event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexType.Builder builderForValue) {
        if (deleteBuilder_ == null) {
          delete_ = builderForValue.build();
        } else {
          deleteBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to deleting data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.DeleteComplexType delete = 14 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeDelete(event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexType value) {
        if (deleteBuilder_ == null) {
          if (((bitField0_ & 0x00002000) != 0) &&
            delete_ != null &&
            delete_ != event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexType.getDefaultInstance()) {
            getDeleteBuilder().mergeFrom(value);
          } else {
            delete_ = value;
          }
        } else {
          deleteBuilder_.mergeFrom(value);
        }
        if (delete_ != null) {
          bitField0_ |= 0x00002000;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * All events related to deleting data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.DeleteComplexType delete = 14 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearDelete() {
        bitField0_ = (bitField0_ & ~0x00002000);
        delete_ = null;
        if (deleteBuilder_ != null) {
          deleteBuilder_.dispose();
          deleteBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to deleting data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.DeleteComplexType delete = 14 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexType.Builder getDeleteBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getDeleteFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * All events related to deleting data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.DeleteComplexType delete = 14 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexTypeOrBuilder getDeleteOrBuilder() {
        if (deleteBuilder_ != null) {
          return deleteBuilder_.getMessageOrBuilder();
        } else {
          return delete_ == null ?
              event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexType.getDefaultInstance() : delete_;
        }
      }
      /**
       * <pre>
       * All events related to deleting data should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.DeleteComplexType delete = 14 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexType, event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexType.Builder, event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexTypeOrBuilder> 
          getDeleteFieldBuilder() {
        if (deleteBuilder_ == null) {
          deleteBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexType, event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexType.Builder, event_logging.v4.DeleteComplexTypeOuterClass.DeleteComplexTypeOrBuilder>(
                  getDelete(),
                  getParentForChildren(),
                  isClean());
          delete_ = null;
        }
        return deleteBuilder_;
      }

      private event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType process_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType, event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType.Builder, event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexTypeOrBuilder> processBuilder_;
      /**
       * <pre>
       * Whenever processes such as applications or services are started, stopped etc., this should be recorded in this element. It also covers the running of batch processes or jobs.
       * </pre>
       *
       * <code>.event_logging.v4.ProcessComplexType process = 15 [(.buf.validate.field) = { ... }</code>
       * @return Whether the process field is set.
       */
      public boolean hasProcess() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <pre>
       * Whenever processes such as applications or services are started, stopped etc., this should be recorded in this element. It also covers the running of batch processes or jobs.
       * </pre>
       *
       * <code>.event_logging.v4.ProcessComplexType process = 15 [(.buf.validate.field) = { ... }</code>
       * @return The process.
       */
      public event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType getProcess() {
        if (processBuilder_ == null) {
          return process_ == null ? event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType.getDefaultInstance() : process_;
        } else {
          return processBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Whenever processes such as applications or services are started, stopped etc., this should be recorded in this element. It also covers the running of batch processes or jobs.
       * </pre>
       *
       * <code>.event_logging.v4.ProcessComplexType process = 15 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setProcess(event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType value) {
        if (processBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          process_ = value;
        } else {
          processBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whenever processes such as applications or services are started, stopped etc., this should be recorded in this element. It also covers the running of batch processes or jobs.
       * </pre>
       *
       * <code>.event_logging.v4.ProcessComplexType process = 15 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setProcess(
          event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType.Builder builderForValue) {
        if (processBuilder_ == null) {
          process_ = builderForValue.build();
        } else {
          processBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whenever processes such as applications or services are started, stopped etc., this should be recorded in this element. It also covers the running of batch processes or jobs.
       * </pre>
       *
       * <code>.event_logging.v4.ProcessComplexType process = 15 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeProcess(event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType value) {
        if (processBuilder_ == null) {
          if (((bitField0_ & 0x00004000) != 0) &&
            process_ != null &&
            process_ != event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType.getDefaultInstance()) {
            getProcessBuilder().mergeFrom(value);
          } else {
            process_ = value;
          }
        } else {
          processBuilder_.mergeFrom(value);
        }
        if (process_ != null) {
          bitField0_ |= 0x00004000;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Whenever processes such as applications or services are started, stopped etc., this should be recorded in this element. It also covers the running of batch processes or jobs.
       * </pre>
       *
       * <code>.event_logging.v4.ProcessComplexType process = 15 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearProcess() {
        bitField0_ = (bitField0_ & ~0x00004000);
        process_ = null;
        if (processBuilder_ != null) {
          processBuilder_.dispose();
          processBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whenever processes such as applications or services are started, stopped etc., this should be recorded in this element. It also covers the running of batch processes or jobs.
       * </pre>
       *
       * <code>.event_logging.v4.ProcessComplexType process = 15 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType.Builder getProcessBuilder() {
        bitField0_ |= 0x00004000;
        onChanged();
        return getProcessFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Whenever processes such as applications or services are started, stopped etc., this should be recorded in this element. It also covers the running of batch processes or jobs.
       * </pre>
       *
       * <code>.event_logging.v4.ProcessComplexType process = 15 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexTypeOrBuilder getProcessOrBuilder() {
        if (processBuilder_ != null) {
          return processBuilder_.getMessageOrBuilder();
        } else {
          return process_ == null ?
              event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType.getDefaultInstance() : process_;
        }
      }
      /**
       * <pre>
       * Whenever processes such as applications or services are started, stopped etc., this should be recorded in this element. It also covers the running of batch processes or jobs.
       * </pre>
       *
       * <code>.event_logging.v4.ProcessComplexType process = 15 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType, event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType.Builder, event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexTypeOrBuilder> 
          getProcessFieldBuilder() {
        if (processBuilder_ == null) {
          processBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType, event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexType.Builder, event_logging.v4.ProcessComplexTypeOuterClass.ProcessComplexTypeOrBuilder>(
                  getProcess(),
                  getParentForChildren(),
                  isClean());
          process_ = null;
        }
        return processBuilder_;
      }

      private event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType print_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.Builder, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexTypeOrBuilder> printBuilder_;
      /**
       * <pre>
       * All events related to printing should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType print = 16 [(.buf.validate.field) = { ... }</code>
       * @return Whether the print field is set.
       */
      public boolean hasPrint() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <pre>
       * All events related to printing should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType print = 16 [(.buf.validate.field) = { ... }</code>
       * @return The print.
       */
      public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType getPrint() {
        if (printBuilder_ == null) {
          return print_ == null ? event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.getDefaultInstance() : print_;
        } else {
          return printBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * All events related to printing should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType print = 16 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setPrint(event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType value) {
        if (printBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          print_ = value;
        } else {
          printBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to printing should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType print = 16 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setPrint(
          event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.Builder builderForValue) {
        if (printBuilder_ == null) {
          print_ = builderForValue.build();
        } else {
          printBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to printing should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType print = 16 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergePrint(event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType value) {
        if (printBuilder_ == null) {
          if (((bitField0_ & 0x00008000) != 0) &&
            print_ != null &&
            print_ != event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.getDefaultInstance()) {
            getPrintBuilder().mergeFrom(value);
          } else {
            print_ = value;
          }
        } else {
          printBuilder_.mergeFrom(value);
        }
        if (print_ != null) {
          bitField0_ |= 0x00008000;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * All events related to printing should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType print = 16 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearPrint() {
        bitField0_ = (bitField0_ & ~0x00008000);
        print_ = null;
        if (printBuilder_ != null) {
          printBuilder_.dispose();
          printBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All events related to printing should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType print = 16 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.Builder getPrintBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getPrintFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * All events related to printing should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType print = 16 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.PrintComplexTypeOuterClass.PrintComplexTypeOrBuilder getPrintOrBuilder() {
        if (printBuilder_ != null) {
          return printBuilder_.getMessageOrBuilder();
        } else {
          return print_ == null ?
              event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.getDefaultInstance() : print_;
        }
      }
      /**
       * <pre>
       * All events related to printing should use this element.
       * </pre>
       *
       * <code>.event_logging.v4.PrintComplexType print = 16 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.Builder, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexTypeOrBuilder> 
          getPrintFieldBuilder() {
        if (printBuilder_ == null) {
          printBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexType.Builder, event_logging.v4.PrintComplexTypeOuterClass.PrintComplexTypeOrBuilder>(
                  getPrint(),
                  getParentForChildren(),
                  isClean());
          print_ = null;
        }
        return printBuilder_;
      }

      private event_logging.v4.InstallComplexTypeOuterClass.InstallComplexType install_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.InstallComplexTypeOuterClass.InstallComplexType, event_logging.v4.InstallComplexTypeOuterClass.InstallComplexType.Builder, event_logging.v4.InstallComplexTypeOuterClass.InstallComplexTypeOrBuilder> installBuilder_;
      /**
       * <pre>
       * Details about installation of either hardware or software.
       * </pre>
       *
       * <code>.event_logging.v4.InstallComplexType install = 17 [(.buf.validate.field) = { ... }</code>
       * @return Whether the install field is set.
       */
      public boolean hasInstall() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <pre>
       * Details about installation of either hardware or software.
       * </pre>
       *
       * <code>.event_logging.v4.InstallComplexType install = 17 [(.buf.validate.field) = { ... }</code>
       * @return The install.
       */
      public event_logging.v4.InstallComplexTypeOuterClass.InstallComplexType getInstall() {
        if (installBuilder_ == null) {
          return install_ == null ? event_logging.v4.InstallComplexTypeOuterClass.InstallComplexType.getDefaultInstance() : install_;
        } else {
          return installBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Details about installation of either hardware or software.
       * </pre>
       *
       * <code>.event_logging.v4.InstallComplexType install = 17 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setInstall(event_logging.v4.InstallComplexTypeOuterClass.InstallComplexType value) {
        if (installBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          install_ = value;
        } else {
          installBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Details about installation of either hardware or software.
       * </pre>
       *
       * <code>.event_logging.v4.InstallComplexType install = 17 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setInstall(
          event_logging.v4.InstallComplexTypeOuterClass.InstallComplexType.Builder builderForValue) {
        if (installBuilder_ == null) {
          install_ = builderForValue.build();
        } else {
          installBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Details about installation of either hardware or software.
       * </pre>
       *
       * <code>.event_logging.v4.InstallComplexType install = 17 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeInstall(event_logging.v4.InstallComplexTypeOuterClass.InstallComplexType value) {
        if (installBuilder_ == null) {
          if (((bitField0_ & 0x00010000) != 0) &&
            install_ != null &&
            install_ != event_logging.v4.InstallComplexTypeOuterClass.InstallComplexType.getDefaultInstance()) {
            getInstallBuilder().mergeFrom(value);
          } else {
            install_ = value;
          }
        } else {
          installBuilder_.mergeFrom(value);
        }
        if (install_ != null) {
          bitField0_ |= 0x00010000;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Details about installation of either hardware or software.
       * </pre>
       *
       * <code>.event_logging.v4.InstallComplexType install = 17 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearInstall() {
        bitField0_ = (bitField0_ & ~0x00010000);
        install_ = null;
        if (installBuilder_ != null) {
          installBuilder_.dispose();
          installBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Details about installation of either hardware or software.
       * </pre>
       *
       * <code>.event_logging.v4.InstallComplexType install = 17 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.InstallComplexTypeOuterClass.InstallComplexType.Builder getInstallBuilder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getInstallFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Details about installation of either hardware or software.
       * </pre>
       *
       * <code>.event_logging.v4.InstallComplexType install = 17 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.InstallComplexTypeOuterClass.InstallComplexTypeOrBuilder getInstallOrBuilder() {
        if (installBuilder_ != null) {
          return installBuilder_.getMessageOrBuilder();
        } else {
          return install_ == null ?
              event_logging.v4.InstallComplexTypeOuterClass.InstallComplexType.getDefaultInstance() : install_;
        }
      }
      /**
       * <pre>
       * Details about installation of either hardware or software.
       * </pre>
       *
       * <code>.event_logging.v4.InstallComplexType install = 17 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.InstallComplexTypeOuterClass.InstallComplexType, event_logging.v4.InstallComplexTypeOuterClass.InstallComplexType.Builder, event_logging.v4.InstallComplexTypeOuterClass.InstallComplexTypeOrBuilder> 
          getInstallFieldBuilder() {
        if (installBuilder_ == null) {
          installBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.InstallComplexTypeOuterClass.InstallComplexType, event_logging.v4.InstallComplexTypeOuterClass.InstallComplexType.Builder, event_logging.v4.InstallComplexTypeOuterClass.InstallComplexTypeOrBuilder>(
                  getInstall(),
                  getParentForChildren(),
                  isClean());
          install_ = null;
        }
        return installBuilder_;
      }

      private event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexType uninstall_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexType, event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexType.Builder, event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexTypeOrBuilder> uninstallBuilder_;
      /**
       * <pre>
       * Details about removal of either hardware or software.
       * </pre>
       *
       * <code>.event_logging.v4.UninstallComplexType uninstall = 18 [(.buf.validate.field) = { ... }</code>
       * @return Whether the uninstall field is set.
       */
      public boolean hasUninstall() {
        return ((bitField0_ & 0x00020000) != 0);
      }
      /**
       * <pre>
       * Details about removal of either hardware or software.
       * </pre>
       *
       * <code>.event_logging.v4.UninstallComplexType uninstall = 18 [(.buf.validate.field) = { ... }</code>
       * @return The uninstall.
       */
      public event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexType getUninstall() {
        if (uninstallBuilder_ == null) {
          return uninstall_ == null ? event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexType.getDefaultInstance() : uninstall_;
        } else {
          return uninstallBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Details about removal of either hardware or software.
       * </pre>
       *
       * <code>.event_logging.v4.UninstallComplexType uninstall = 18 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setUninstall(event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexType value) {
        if (uninstallBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          uninstall_ = value;
        } else {
          uninstallBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Details about removal of either hardware or software.
       * </pre>
       *
       * <code>.event_logging.v4.UninstallComplexType uninstall = 18 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setUninstall(
          event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexType.Builder builderForValue) {
        if (uninstallBuilder_ == null) {
          uninstall_ = builderForValue.build();
        } else {
          uninstallBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Details about removal of either hardware or software.
       * </pre>
       *
       * <code>.event_logging.v4.UninstallComplexType uninstall = 18 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeUninstall(event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexType value) {
        if (uninstallBuilder_ == null) {
          if (((bitField0_ & 0x00020000) != 0) &&
            uninstall_ != null &&
            uninstall_ != event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexType.getDefaultInstance()) {
            getUninstallBuilder().mergeFrom(value);
          } else {
            uninstall_ = value;
          }
        } else {
          uninstallBuilder_.mergeFrom(value);
        }
        if (uninstall_ != null) {
          bitField0_ |= 0x00020000;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Details about removal of either hardware or software.
       * </pre>
       *
       * <code>.event_logging.v4.UninstallComplexType uninstall = 18 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearUninstall() {
        bitField0_ = (bitField0_ & ~0x00020000);
        uninstall_ = null;
        if (uninstallBuilder_ != null) {
          uninstallBuilder_.dispose();
          uninstallBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Details about removal of either hardware or software.
       * </pre>
       *
       * <code>.event_logging.v4.UninstallComplexType uninstall = 18 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexType.Builder getUninstallBuilder() {
        bitField0_ |= 0x00020000;
        onChanged();
        return getUninstallFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Details about removal of either hardware or software.
       * </pre>
       *
       * <code>.event_logging.v4.UninstallComplexType uninstall = 18 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexTypeOrBuilder getUninstallOrBuilder() {
        if (uninstallBuilder_ != null) {
          return uninstallBuilder_.getMessageOrBuilder();
        } else {
          return uninstall_ == null ?
              event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexType.getDefaultInstance() : uninstall_;
        }
      }
      /**
       * <pre>
       * Details about removal of either hardware or software.
       * </pre>
       *
       * <code>.event_logging.v4.UninstallComplexType uninstall = 18 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexType, event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexType.Builder, event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexTypeOrBuilder> 
          getUninstallFieldBuilder() {
        if (uninstallBuilder_ == null) {
          uninstallBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexType, event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexType.Builder, event_logging.v4.UninstallComplexTypeOuterClass.UninstallComplexTypeOrBuilder>(
                  getUninstall(),
                  getParentForChildren(),
                  isClean());
          uninstall_ = null;
        }
        return uninstallBuilder_;
      }

      private event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexType network_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexType, event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexType.Builder, event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexTypeOrBuilder> networkBuilder_;
      /**
       * <pre>
       * Any events related to network traffic, filtering or access should be recorded using this element.
       * </pre>
       *
       * <code>.event_logging.v4.NetworkEventActionComplexType network = 19 [(.buf.validate.field) = { ... }</code>
       * @return Whether the network field is set.
       */
      public boolean hasNetwork() {
        return ((bitField0_ & 0x00040000) != 0);
      }
      /**
       * <pre>
       * Any events related to network traffic, filtering or access should be recorded using this element.
       * </pre>
       *
       * <code>.event_logging.v4.NetworkEventActionComplexType network = 19 [(.buf.validate.field) = { ... }</code>
       * @return The network.
       */
      public event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexType getNetwork() {
        if (networkBuilder_ == null) {
          return network_ == null ? event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexType.getDefaultInstance() : network_;
        } else {
          return networkBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Any events related to network traffic, filtering or access should be recorded using this element.
       * </pre>
       *
       * <code>.event_logging.v4.NetworkEventActionComplexType network = 19 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setNetwork(event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexType value) {
        if (networkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          network_ = value;
        } else {
          networkBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any events related to network traffic, filtering or access should be recorded using this element.
       * </pre>
       *
       * <code>.event_logging.v4.NetworkEventActionComplexType network = 19 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setNetwork(
          event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexType.Builder builderForValue) {
        if (networkBuilder_ == null) {
          network_ = builderForValue.build();
        } else {
          networkBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any events related to network traffic, filtering or access should be recorded using this element.
       * </pre>
       *
       * <code>.event_logging.v4.NetworkEventActionComplexType network = 19 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeNetwork(event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexType value) {
        if (networkBuilder_ == null) {
          if (((bitField0_ & 0x00040000) != 0) &&
            network_ != null &&
            network_ != event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexType.getDefaultInstance()) {
            getNetworkBuilder().mergeFrom(value);
          } else {
            network_ = value;
          }
        } else {
          networkBuilder_.mergeFrom(value);
        }
        if (network_ != null) {
          bitField0_ |= 0x00040000;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Any events related to network traffic, filtering or access should be recorded using this element.
       * </pre>
       *
       * <code>.event_logging.v4.NetworkEventActionComplexType network = 19 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearNetwork() {
        bitField0_ = (bitField0_ & ~0x00040000);
        network_ = null;
        if (networkBuilder_ != null) {
          networkBuilder_.dispose();
          networkBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any events related to network traffic, filtering or access should be recorded using this element.
       * </pre>
       *
       * <code>.event_logging.v4.NetworkEventActionComplexType network = 19 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexType.Builder getNetworkBuilder() {
        bitField0_ |= 0x00040000;
        onChanged();
        return getNetworkFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Any events related to network traffic, filtering or access should be recorded using this element.
       * </pre>
       *
       * <code>.event_logging.v4.NetworkEventActionComplexType network = 19 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexTypeOrBuilder getNetworkOrBuilder() {
        if (networkBuilder_ != null) {
          return networkBuilder_.getMessageOrBuilder();
        } else {
          return network_ == null ?
              event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexType.getDefaultInstance() : network_;
        }
      }
      /**
       * <pre>
       * Any events related to network traffic, filtering or access should be recorded using this element.
       * </pre>
       *
       * <code>.event_logging.v4.NetworkEventActionComplexType network = 19 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexType, event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexType.Builder, event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexTypeOrBuilder> 
          getNetworkFieldBuilder() {
        if (networkBuilder_ == null) {
          networkBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexType, event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexType.Builder, event_logging.v4.NetworkEventActionComplexTypeOuterClass.NetworkEventActionComplexTypeOrBuilder>(
                  getNetwork(),
                  getParentForChildren(),
                  isClean());
          network_ = null;
        }
        return networkBuilder_;
      }

      private event_logging.v4.AlertComplexTypeOuterClass.AlertComplexType alert_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.AlertComplexTypeOuterClass.AlertComplexType, event_logging.v4.AlertComplexTypeOuterClass.AlertComplexType.Builder, event_logging.v4.AlertComplexTypeOuterClass.AlertComplexTypeOrBuilder> alertBuilder_;
      /**
       * <pre>
       * An alert event according to the system producing the event, e.g. an event raised when an anti-malware system finds malware.
       * </pre>
       *
       * <code>.event_logging.v4.AlertComplexType alert = 20 [(.buf.validate.field) = { ... }</code>
       * @return Whether the alert field is set.
       */
      public boolean hasAlert() {
        return ((bitField0_ & 0x00080000) != 0);
      }
      /**
       * <pre>
       * An alert event according to the system producing the event, e.g. an event raised when an anti-malware system finds malware.
       * </pre>
       *
       * <code>.event_logging.v4.AlertComplexType alert = 20 [(.buf.validate.field) = { ... }</code>
       * @return The alert.
       */
      public event_logging.v4.AlertComplexTypeOuterClass.AlertComplexType getAlert() {
        if (alertBuilder_ == null) {
          return alert_ == null ? event_logging.v4.AlertComplexTypeOuterClass.AlertComplexType.getDefaultInstance() : alert_;
        } else {
          return alertBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * An alert event according to the system producing the event, e.g. an event raised when an anti-malware system finds malware.
       * </pre>
       *
       * <code>.event_logging.v4.AlertComplexType alert = 20 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setAlert(event_logging.v4.AlertComplexTypeOuterClass.AlertComplexType value) {
        if (alertBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          alert_ = value;
        } else {
          alertBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An alert event according to the system producing the event, e.g. an event raised when an anti-malware system finds malware.
       * </pre>
       *
       * <code>.event_logging.v4.AlertComplexType alert = 20 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setAlert(
          event_logging.v4.AlertComplexTypeOuterClass.AlertComplexType.Builder builderForValue) {
        if (alertBuilder_ == null) {
          alert_ = builderForValue.build();
        } else {
          alertBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An alert event according to the system producing the event, e.g. an event raised when an anti-malware system finds malware.
       * </pre>
       *
       * <code>.event_logging.v4.AlertComplexType alert = 20 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeAlert(event_logging.v4.AlertComplexTypeOuterClass.AlertComplexType value) {
        if (alertBuilder_ == null) {
          if (((bitField0_ & 0x00080000) != 0) &&
            alert_ != null &&
            alert_ != event_logging.v4.AlertComplexTypeOuterClass.AlertComplexType.getDefaultInstance()) {
            getAlertBuilder().mergeFrom(value);
          } else {
            alert_ = value;
          }
        } else {
          alertBuilder_.mergeFrom(value);
        }
        if (alert_ != null) {
          bitField0_ |= 0x00080000;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * An alert event according to the system producing the event, e.g. an event raised when an anti-malware system finds malware.
       * </pre>
       *
       * <code>.event_logging.v4.AlertComplexType alert = 20 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearAlert() {
        bitField0_ = (bitField0_ & ~0x00080000);
        alert_ = null;
        if (alertBuilder_ != null) {
          alertBuilder_.dispose();
          alertBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An alert event according to the system producing the event, e.g. an event raised when an anti-malware system finds malware.
       * </pre>
       *
       * <code>.event_logging.v4.AlertComplexType alert = 20 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.AlertComplexTypeOuterClass.AlertComplexType.Builder getAlertBuilder() {
        bitField0_ |= 0x00080000;
        onChanged();
        return getAlertFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * An alert event according to the system producing the event, e.g. an event raised when an anti-malware system finds malware.
       * </pre>
       *
       * <code>.event_logging.v4.AlertComplexType alert = 20 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.AlertComplexTypeOuterClass.AlertComplexTypeOrBuilder getAlertOrBuilder() {
        if (alertBuilder_ != null) {
          return alertBuilder_.getMessageOrBuilder();
        } else {
          return alert_ == null ?
              event_logging.v4.AlertComplexTypeOuterClass.AlertComplexType.getDefaultInstance() : alert_;
        }
      }
      /**
       * <pre>
       * An alert event according to the system producing the event, e.g. an event raised when an anti-malware system finds malware.
       * </pre>
       *
       * <code>.event_logging.v4.AlertComplexType alert = 20 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.AlertComplexTypeOuterClass.AlertComplexType, event_logging.v4.AlertComplexTypeOuterClass.AlertComplexType.Builder, event_logging.v4.AlertComplexTypeOuterClass.AlertComplexTypeOrBuilder> 
          getAlertFieldBuilder() {
        if (alertBuilder_ == null) {
          alertBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.AlertComplexTypeOuterClass.AlertComplexType, event_logging.v4.AlertComplexTypeOuterClass.AlertComplexType.Builder, event_logging.v4.AlertComplexTypeOuterClass.AlertComplexTypeOrBuilder>(
                  getAlert(),
                  getParentForChildren(),
                  isClean());
          alert_ = null;
        }
        return alertBuilder_;
      }

      private event_logging.v4.SendComplexTypeOuterClass.SendComplexType send_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.SendComplexTypeOuterClass.SendComplexType, event_logging.v4.SendComplexTypeOuterClass.SendComplexType.Builder, event_logging.v4.SendComplexTypeOuterClass.SendComplexTypeOrBuilder> sendBuilder_;
      /**
       * <pre>
       * Used for send events that are at a higher level than a network/send event, e.g. sending an email
       * </pre>
       *
       * <code>.event_logging.v4.SendComplexType send = 21 [(.buf.validate.field) = { ... }</code>
       * @return Whether the send field is set.
       */
      public boolean hasSend() {
        return ((bitField0_ & 0x00100000) != 0);
      }
      /**
       * <pre>
       * Used for send events that are at a higher level than a network/send event, e.g. sending an email
       * </pre>
       *
       * <code>.event_logging.v4.SendComplexType send = 21 [(.buf.validate.field) = { ... }</code>
       * @return The send.
       */
      public event_logging.v4.SendComplexTypeOuterClass.SendComplexType getSend() {
        if (sendBuilder_ == null) {
          return send_ == null ? event_logging.v4.SendComplexTypeOuterClass.SendComplexType.getDefaultInstance() : send_;
        } else {
          return sendBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Used for send events that are at a higher level than a network/send event, e.g. sending an email
       * </pre>
       *
       * <code>.event_logging.v4.SendComplexType send = 21 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setSend(event_logging.v4.SendComplexTypeOuterClass.SendComplexType value) {
        if (sendBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          send_ = value;
        } else {
          sendBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for send events that are at a higher level than a network/send event, e.g. sending an email
       * </pre>
       *
       * <code>.event_logging.v4.SendComplexType send = 21 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setSend(
          event_logging.v4.SendComplexTypeOuterClass.SendComplexType.Builder builderForValue) {
        if (sendBuilder_ == null) {
          send_ = builderForValue.build();
        } else {
          sendBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for send events that are at a higher level than a network/send event, e.g. sending an email
       * </pre>
       *
       * <code>.event_logging.v4.SendComplexType send = 21 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeSend(event_logging.v4.SendComplexTypeOuterClass.SendComplexType value) {
        if (sendBuilder_ == null) {
          if (((bitField0_ & 0x00100000) != 0) &&
            send_ != null &&
            send_ != event_logging.v4.SendComplexTypeOuterClass.SendComplexType.getDefaultInstance()) {
            getSendBuilder().mergeFrom(value);
          } else {
            send_ = value;
          }
        } else {
          sendBuilder_.mergeFrom(value);
        }
        if (send_ != null) {
          bitField0_ |= 0x00100000;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Used for send events that are at a higher level than a network/send event, e.g. sending an email
       * </pre>
       *
       * <code>.event_logging.v4.SendComplexType send = 21 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearSend() {
        bitField0_ = (bitField0_ & ~0x00100000);
        send_ = null;
        if (sendBuilder_ != null) {
          sendBuilder_.dispose();
          sendBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for send events that are at a higher level than a network/send event, e.g. sending an email
       * </pre>
       *
       * <code>.event_logging.v4.SendComplexType send = 21 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.SendComplexTypeOuterClass.SendComplexType.Builder getSendBuilder() {
        bitField0_ |= 0x00100000;
        onChanged();
        return getSendFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Used for send events that are at a higher level than a network/send event, e.g. sending an email
       * </pre>
       *
       * <code>.event_logging.v4.SendComplexType send = 21 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.SendComplexTypeOuterClass.SendComplexTypeOrBuilder getSendOrBuilder() {
        if (sendBuilder_ != null) {
          return sendBuilder_.getMessageOrBuilder();
        } else {
          return send_ == null ?
              event_logging.v4.SendComplexTypeOuterClass.SendComplexType.getDefaultInstance() : send_;
        }
      }
      /**
       * <pre>
       * Used for send events that are at a higher level than a network/send event, e.g. sending an email
       * </pre>
       *
       * <code>.event_logging.v4.SendComplexType send = 21 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.SendComplexTypeOuterClass.SendComplexType, event_logging.v4.SendComplexTypeOuterClass.SendComplexType.Builder, event_logging.v4.SendComplexTypeOuterClass.SendComplexTypeOrBuilder> 
          getSendFieldBuilder() {
        if (sendBuilder_ == null) {
          sendBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.SendComplexTypeOuterClass.SendComplexType, event_logging.v4.SendComplexTypeOuterClass.SendComplexType.Builder, event_logging.v4.SendComplexTypeOuterClass.SendComplexTypeOrBuilder>(
                  getSend(),
                  getParentForChildren(),
                  isClean());
          send_ = null;
        }
        return sendBuilder_;
      }

      private event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexType receive_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexType, event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexType.Builder, event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexTypeOrBuilder> receiveBuilder_;
      /**
       * <pre>
       * Used for receive events that are at a higher level than a network/receive event, e.g. receiving an email
       * </pre>
       *
       * <code>.event_logging.v4.ReceiveComplexType receive = 22 [(.buf.validate.field) = { ... }</code>
       * @return Whether the receive field is set.
       */
      public boolean hasReceive() {
        return ((bitField0_ & 0x00200000) != 0);
      }
      /**
       * <pre>
       * Used for receive events that are at a higher level than a network/receive event, e.g. receiving an email
       * </pre>
       *
       * <code>.event_logging.v4.ReceiveComplexType receive = 22 [(.buf.validate.field) = { ... }</code>
       * @return The receive.
       */
      public event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexType getReceive() {
        if (receiveBuilder_ == null) {
          return receive_ == null ? event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexType.getDefaultInstance() : receive_;
        } else {
          return receiveBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Used for receive events that are at a higher level than a network/receive event, e.g. receiving an email
       * </pre>
       *
       * <code>.event_logging.v4.ReceiveComplexType receive = 22 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setReceive(event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexType value) {
        if (receiveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          receive_ = value;
        } else {
          receiveBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for receive events that are at a higher level than a network/receive event, e.g. receiving an email
       * </pre>
       *
       * <code>.event_logging.v4.ReceiveComplexType receive = 22 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setReceive(
          event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexType.Builder builderForValue) {
        if (receiveBuilder_ == null) {
          receive_ = builderForValue.build();
        } else {
          receiveBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for receive events that are at a higher level than a network/receive event, e.g. receiving an email
       * </pre>
       *
       * <code>.event_logging.v4.ReceiveComplexType receive = 22 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeReceive(event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexType value) {
        if (receiveBuilder_ == null) {
          if (((bitField0_ & 0x00200000) != 0) &&
            receive_ != null &&
            receive_ != event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexType.getDefaultInstance()) {
            getReceiveBuilder().mergeFrom(value);
          } else {
            receive_ = value;
          }
        } else {
          receiveBuilder_.mergeFrom(value);
        }
        if (receive_ != null) {
          bitField0_ |= 0x00200000;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Used for receive events that are at a higher level than a network/receive event, e.g. receiving an email
       * </pre>
       *
       * <code>.event_logging.v4.ReceiveComplexType receive = 22 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearReceive() {
        bitField0_ = (bitField0_ & ~0x00200000);
        receive_ = null;
        if (receiveBuilder_ != null) {
          receiveBuilder_.dispose();
          receiveBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used for receive events that are at a higher level than a network/receive event, e.g. receiving an email
       * </pre>
       *
       * <code>.event_logging.v4.ReceiveComplexType receive = 22 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexType.Builder getReceiveBuilder() {
        bitField0_ |= 0x00200000;
        onChanged();
        return getReceiveFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Used for receive events that are at a higher level than a network/receive event, e.g. receiving an email
       * </pre>
       *
       * <code>.event_logging.v4.ReceiveComplexType receive = 22 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexTypeOrBuilder getReceiveOrBuilder() {
        if (receiveBuilder_ != null) {
          return receiveBuilder_.getMessageOrBuilder();
        } else {
          return receive_ == null ?
              event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexType.getDefaultInstance() : receive_;
        }
      }
      /**
       * <pre>
       * Used for receive events that are at a higher level than a network/receive event, e.g. receiving an email
       * </pre>
       *
       * <code>.event_logging.v4.ReceiveComplexType receive = 22 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexType, event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexType.Builder, event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexTypeOrBuilder> 
          getReceiveFieldBuilder() {
        if (receiveBuilder_ == null) {
          receiveBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexType, event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexType.Builder, event_logging.v4.ReceiveComplexTypeOuterClass.ReceiveComplexTypeOrBuilder>(
                  getReceive(),
                  getParentForChildren(),
                  isClean());
          receive_ = null;
        }
        return receiveBuilder_;
      }

      private event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexType approval_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexType, event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexType.Builder, event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexTypeOrBuilder> approvalBuilder_;
      /**
       * <pre>
       * Any events relating to the action of approving/accepting or rejecting something, e.g. an approval step in a workflow, accepting a license agreement, or acceptable use policy. The event may relate to one user approving the work/action of another user or a single user accepting something.
       * </pre>
       *
       * <code>.event_logging.v4.ApprovalComplexType approval = 23 [(.buf.validate.field) = { ... }</code>
       * @return Whether the approval field is set.
       */
      public boolean hasApproval() {
        return ((bitField0_ & 0x00400000) != 0);
      }
      /**
       * <pre>
       * Any events relating to the action of approving/accepting or rejecting something, e.g. an approval step in a workflow, accepting a license agreement, or acceptable use policy. The event may relate to one user approving the work/action of another user or a single user accepting something.
       * </pre>
       *
       * <code>.event_logging.v4.ApprovalComplexType approval = 23 [(.buf.validate.field) = { ... }</code>
       * @return The approval.
       */
      public event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexType getApproval() {
        if (approvalBuilder_ == null) {
          return approval_ == null ? event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexType.getDefaultInstance() : approval_;
        } else {
          return approvalBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Any events relating to the action of approving/accepting or rejecting something, e.g. an approval step in a workflow, accepting a license agreement, or acceptable use policy. The event may relate to one user approving the work/action of another user or a single user accepting something.
       * </pre>
       *
       * <code>.event_logging.v4.ApprovalComplexType approval = 23 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setApproval(event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexType value) {
        if (approvalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          approval_ = value;
        } else {
          approvalBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00400000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any events relating to the action of approving/accepting or rejecting something, e.g. an approval step in a workflow, accepting a license agreement, or acceptable use policy. The event may relate to one user approving the work/action of another user or a single user accepting something.
       * </pre>
       *
       * <code>.event_logging.v4.ApprovalComplexType approval = 23 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setApproval(
          event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexType.Builder builderForValue) {
        if (approvalBuilder_ == null) {
          approval_ = builderForValue.build();
        } else {
          approvalBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00400000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any events relating to the action of approving/accepting or rejecting something, e.g. an approval step in a workflow, accepting a license agreement, or acceptable use policy. The event may relate to one user approving the work/action of another user or a single user accepting something.
       * </pre>
       *
       * <code>.event_logging.v4.ApprovalComplexType approval = 23 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeApproval(event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexType value) {
        if (approvalBuilder_ == null) {
          if (((bitField0_ & 0x00400000) != 0) &&
            approval_ != null &&
            approval_ != event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexType.getDefaultInstance()) {
            getApprovalBuilder().mergeFrom(value);
          } else {
            approval_ = value;
          }
        } else {
          approvalBuilder_.mergeFrom(value);
        }
        if (approval_ != null) {
          bitField0_ |= 0x00400000;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Any events relating to the action of approving/accepting or rejecting something, e.g. an approval step in a workflow, accepting a license agreement, or acceptable use policy. The event may relate to one user approving the work/action of another user or a single user accepting something.
       * </pre>
       *
       * <code>.event_logging.v4.ApprovalComplexType approval = 23 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearApproval() {
        bitField0_ = (bitField0_ & ~0x00400000);
        approval_ = null;
        if (approvalBuilder_ != null) {
          approvalBuilder_.dispose();
          approvalBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Any events relating to the action of approving/accepting or rejecting something, e.g. an approval step in a workflow, accepting a license agreement, or acceptable use policy. The event may relate to one user approving the work/action of another user or a single user accepting something.
       * </pre>
       *
       * <code>.event_logging.v4.ApprovalComplexType approval = 23 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexType.Builder getApprovalBuilder() {
        bitField0_ |= 0x00400000;
        onChanged();
        return getApprovalFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Any events relating to the action of approving/accepting or rejecting something, e.g. an approval step in a workflow, accepting a license agreement, or acceptable use policy. The event may relate to one user approving the work/action of another user or a single user accepting something.
       * </pre>
       *
       * <code>.event_logging.v4.ApprovalComplexType approval = 23 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexTypeOrBuilder getApprovalOrBuilder() {
        if (approvalBuilder_ != null) {
          return approvalBuilder_.getMessageOrBuilder();
        } else {
          return approval_ == null ?
              event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexType.getDefaultInstance() : approval_;
        }
      }
      /**
       * <pre>
       * Any events relating to the action of approving/accepting or rejecting something, e.g. an approval step in a workflow, accepting a license agreement, or acceptable use policy. The event may relate to one user approving the work/action of another user or a single user accepting something.
       * </pre>
       *
       * <code>.event_logging.v4.ApprovalComplexType approval = 23 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexType, event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexType.Builder, event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexTypeOrBuilder> 
          getApprovalFieldBuilder() {
        if (approvalBuilder_ == null) {
          approvalBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexType, event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexType.Builder, event_logging.v4.ApprovalComplexTypeOuterClass.ApprovalComplexTypeOrBuilder>(
                  getApproval(),
                  getParentForChildren(),
                  isClean());
          approval_ = null;
        }
        return approvalBuilder_;
      }

      private event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType unknown_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType, event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType.Builder, event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownTypeOrBuilder> unknownBuilder_;
      /**
       * <pre>
       * This element should be used were the type of the event cannot be described by any of the other event actions, or the event type is unknown.
       * </pre>
       *
       * <code>.event_logging.v4.EventDetailComplexType.UnknownType unknown = 24 [(.buf.validate.field) = { ... }</code>
       * @return Whether the unknown field is set.
       */
      public boolean hasUnknown() {
        return ((bitField0_ & 0x00800000) != 0);
      }
      /**
       * <pre>
       * This element should be used were the type of the event cannot be described by any of the other event actions, or the event type is unknown.
       * </pre>
       *
       * <code>.event_logging.v4.EventDetailComplexType.UnknownType unknown = 24 [(.buf.validate.field) = { ... }</code>
       * @return The unknown.
       */
      public event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType getUnknown() {
        if (unknownBuilder_ == null) {
          return unknown_ == null ? event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType.getDefaultInstance() : unknown_;
        } else {
          return unknownBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * This element should be used were the type of the event cannot be described by any of the other event actions, or the event type is unknown.
       * </pre>
       *
       * <code>.event_logging.v4.EventDetailComplexType.UnknownType unknown = 24 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setUnknown(event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType value) {
        if (unknownBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          unknown_ = value;
        } else {
          unknownBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00800000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This element should be used were the type of the event cannot be described by any of the other event actions, or the event type is unknown.
       * </pre>
       *
       * <code>.event_logging.v4.EventDetailComplexType.UnknownType unknown = 24 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setUnknown(
          event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType.Builder builderForValue) {
        if (unknownBuilder_ == null) {
          unknown_ = builderForValue.build();
        } else {
          unknownBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00800000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This element should be used were the type of the event cannot be described by any of the other event actions, or the event type is unknown.
       * </pre>
       *
       * <code>.event_logging.v4.EventDetailComplexType.UnknownType unknown = 24 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeUnknown(event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType value) {
        if (unknownBuilder_ == null) {
          if (((bitField0_ & 0x00800000) != 0) &&
            unknown_ != null &&
            unknown_ != event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType.getDefaultInstance()) {
            getUnknownBuilder().mergeFrom(value);
          } else {
            unknown_ = value;
          }
        } else {
          unknownBuilder_.mergeFrom(value);
        }
        if (unknown_ != null) {
          bitField0_ |= 0x00800000;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * This element should be used were the type of the event cannot be described by any of the other event actions, or the event type is unknown.
       * </pre>
       *
       * <code>.event_logging.v4.EventDetailComplexType.UnknownType unknown = 24 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearUnknown() {
        bitField0_ = (bitField0_ & ~0x00800000);
        unknown_ = null;
        if (unknownBuilder_ != null) {
          unknownBuilder_.dispose();
          unknownBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This element should be used were the type of the event cannot be described by any of the other event actions, or the event type is unknown.
       * </pre>
       *
       * <code>.event_logging.v4.EventDetailComplexType.UnknownType unknown = 24 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType.Builder getUnknownBuilder() {
        bitField0_ |= 0x00800000;
        onChanged();
        return getUnknownFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * This element should be used were the type of the event cannot be described by any of the other event actions, or the event type is unknown.
       * </pre>
       *
       * <code>.event_logging.v4.EventDetailComplexType.UnknownType unknown = 24 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownTypeOrBuilder getUnknownOrBuilder() {
        if (unknownBuilder_ != null) {
          return unknownBuilder_.getMessageOrBuilder();
        } else {
          return unknown_ == null ?
              event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType.getDefaultInstance() : unknown_;
        }
      }
      /**
       * <pre>
       * This element should be used were the type of the event cannot be described by any of the other event actions, or the event type is unknown.
       * </pre>
       *
       * <code>.event_logging.v4.EventDetailComplexType.UnknownType unknown = 24 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType, event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType.Builder, event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownTypeOrBuilder> 
          getUnknownFieldBuilder() {
        if (unknownBuilder_ == null) {
          unknownBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType, event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownType.Builder, event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType.UnknownTypeOrBuilder>(
                  getUnknown(),
                  getParentForChildren(),
                  isClean());
          unknown_ = null;
        }
        return unknownBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:event_logging.v4.EventDetailComplexType)
    }

    // @@protoc_insertion_point(class_scope:event_logging.v4.EventDetailComplexType)
    private static final event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType();
    }

    public static event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventDetailComplexType>
        PARSER = new com.google.protobuf.AbstractParser<EventDetailComplexType>() {
      @java.lang.Override
      public EventDetailComplexType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<EventDetailComplexType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventDetailComplexType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public event_logging.v4.EventDetailComplexTypeOuterClass.EventDetailComplexType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_logging_v4_EventDetailComplexType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_event_logging_v4_EventDetailComplexType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_logging_v4_EventDetailComplexType_UnknownType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_event_logging_v4_EventDetailComplexType_UnknownType_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n0event_logging/v4/event_detail_complex_" +
      "type.proto\022\020event_logging.v4\032)event_logg" +
      "ing/v4/alert_complex_type.proto\032,event_l" +
      "ogging/v4/approval_complex_type.proto\0320e" +
      "vent_logging/v4/authenticate_complex_typ" +
      "e.proto\032-event_logging/v4/authorise_comp" +
      "lex_type.proto\032(event_logging/v4/copy_co" +
      "mplex_type.proto\032*event_logging/v4/creat" +
      "e_complex_type.proto\032(event_logging/v4/d" +
      "ata_complex_type.proto\032*event_logging/v4" +
      "/delete_complex_type.proto\032*event_loggin" +
      "g/v4/export_complex_type.proto\032*event_lo" +
      "gging/v4/import_complex_type.proto\032+even" +
      "t_logging/v4/install_complex_type.proto\032" +
      "(event_logging/v4/move_complex_type.prot" +
      "o\0328event_logging/v4/network_event_action" +
      "_complex_type.proto\032)event_logging/v4/pr" +
      "int_complex_type.proto\032+event_logging/v4" +
      "/process_complex_type.proto\032+event_loggi" +
      "ng/v4/purpose_complex_type.proto\032+event_" +
      "logging/v4/receive_complex_type.proto\032*e" +
      "vent_logging/v4/search_complex_type.prot" +
      "o\032(event_logging/v4/send_complex_type.pr" +
      "oto\032-event_logging/v4/uninstall_complex_" +
      "type.proto\032*event_logging/v4/update_comp" +
      "lex_type.proto\032(event_logging/v4/view_co" +
      "mplex_type.proto\032\033buf/validate/validate." +
      "proto\"\371\013\n\026EventDetailComplexType\022\027\n\007type" +
      "_id\030\001 \001(\tB\006\272H\003\310\001\001\022\023\n\013description\030\002 \001(\t\0225" +
      "\n\007purpose\030\003 \001(\0132$.event_logging.v4.Purpo" +
      "seComplexType\022G\n\014authenticate\030\004 \001(\0132).ev" +
      "ent_logging.v4.AuthenticateComplexTypeB\006" +
      "\272H\003\310\001\001\022A\n\tauthorise\030\005 \001(\0132&.event_loggin" +
      "g.v4.AuthoriseComplexTypeB\006\272H\003\310\001\001\022;\n\006sea" +
      "rch\030\006 \001(\0132#.event_logging.v4.SearchCompl" +
      "exTypeB\006\272H\003\310\001\001\0227\n\004copy\030\007 \001(\0132!.event_log" +
      "ging.v4.CopyComplexTypeB\006\272H\003\310\001\001\0227\n\004move\030" +
      "\010 \001(\0132!.event_logging.v4.MoveComplexType" +
      "B\006\272H\003\310\001\001\022;\n\006create\030\t \001(\0132#.event_logging" +
      ".v4.CreateComplexTypeB\006\272H\003\310\001\001\0227\n\004view\030\n " +
      "\001(\0132!.event_logging.v4.ViewComplexTypeB\006" +
      "\272H\003\310\001\001\022A\n\014import_field\030\013 \001(\0132#.event_log" +
      "ging.v4.ImportComplexTypeB\006\272H\003\310\001\001\022;\n\006exp" +
      "ort\030\014 \001(\0132#.event_logging.v4.ExportCompl" +
      "exTypeB\006\272H\003\310\001\001\022;\n\006update\030\r \001(\0132#.event_l" +
      "ogging.v4.UpdateComplexTypeB\006\272H\003\310\001\001\022;\n\006d" +
      "elete\030\016 \001(\0132#.event_logging.v4.DeleteCom" +
      "plexTypeB\006\272H\003\310\001\001\022=\n\007process\030\017 \001(\0132$.even" +
      "t_logging.v4.ProcessComplexTypeB\006\272H\003\310\001\001\022" +
      "9\n\005print\030\020 \001(\0132\".event_logging.v4.PrintC" +
      "omplexTypeB\006\272H\003\310\001\001\022=\n\007install\030\021 \001(\0132$.ev" +
      "ent_logging.v4.InstallComplexTypeB\006\272H\003\310\001" +
      "\001\022A\n\tuninstall\030\022 \001(\0132&.event_logging.v4." +
      "UninstallComplexTypeB\006\272H\003\310\001\001\022H\n\007network\030" +
      "\023 \001(\0132/.event_logging.v4.NetworkEventAct" +
      "ionComplexTypeB\006\272H\003\310\001\001\0229\n\005alert\030\024 \001(\0132\"." +
      "event_logging.v4.AlertComplexTypeB\006\272H\003\310\001" +
      "\001\0227\n\004send\030\025 \001(\0132!.event_logging.v4.SendC" +
      "omplexTypeB\006\272H\003\310\001\001\022=\n\007receive\030\026 \001(\0132$.ev" +
      "ent_logging.v4.ReceiveComplexTypeB\006\272H\003\310\001" +
      "\001\022?\n\010approval\030\027 \001(\0132%.event_logging.v4.A" +
      "pprovalComplexTypeB\006\272H\003\310\001\001\022M\n\007unknown\030\030 " +
      "\001(\01324.event_logging.v4.EventDetailComple" +
      "xType.UnknownTypeB\006\272H\003\310\001\001\032F\n\013UnknownType" +
      "\0227\n\004data\030\001 \003(\0132!.event_logging.v4.DataCo" +
      "mplexTypeB\006\272H\003\222\001\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          event_logging.v4.AlertComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.ApprovalComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.AuthenticateComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.AuthoriseComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.CopyComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.CreateComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.DataComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.DeleteComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.ExportComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.ImportComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.InstallComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.MoveComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.NetworkEventActionComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.PrintComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.ProcessComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.PurposeComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.ReceiveComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.SearchComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.SendComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.UninstallComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.UpdateComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.ViewComplexTypeOuterClass.getDescriptor(),
          build.buf.validate.ValidateProto.getDescriptor(),
        });
    internal_static_event_logging_v4_EventDetailComplexType_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_event_logging_v4_EventDetailComplexType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_event_logging_v4_EventDetailComplexType_descriptor,
        new java.lang.String[] { "TypeId", "Description", "Purpose", "Authenticate", "Authorise", "Search", "Copy", "Move", "Create", "View", "ImportField", "Export", "Update", "Delete", "Process", "Print", "Install", "Uninstall", "Network", "Alert", "Send", "Receive", "Approval", "Unknown", });
    internal_static_event_logging_v4_EventDetailComplexType_UnknownType_descriptor =
      internal_static_event_logging_v4_EventDetailComplexType_descriptor.getNestedTypes().get(0);
    internal_static_event_logging_v4_EventDetailComplexType_UnknownType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_event_logging_v4_EventDetailComplexType_UnknownType_descriptor,
        new java.lang.String[] { "Data", });
    descriptor.resolveAllFeaturesImmutable();
    event_logging.v4.AlertComplexTypeOuterClass.getDescriptor();
    event_logging.v4.ApprovalComplexTypeOuterClass.getDescriptor();
    event_logging.v4.AuthenticateComplexTypeOuterClass.getDescriptor();
    event_logging.v4.AuthoriseComplexTypeOuterClass.getDescriptor();
    event_logging.v4.CopyComplexTypeOuterClass.getDescriptor();
    event_logging.v4.CreateComplexTypeOuterClass.getDescriptor();
    event_logging.v4.DataComplexTypeOuterClass.getDescriptor();
    event_logging.v4.DeleteComplexTypeOuterClass.getDescriptor();
    event_logging.v4.ExportComplexTypeOuterClass.getDescriptor();
    event_logging.v4.ImportComplexTypeOuterClass.getDescriptor();
    event_logging.v4.InstallComplexTypeOuterClass.getDescriptor();
    event_logging.v4.MoveComplexTypeOuterClass.getDescriptor();
    event_logging.v4.NetworkEventActionComplexTypeOuterClass.getDescriptor();
    event_logging.v4.PrintComplexTypeOuterClass.getDescriptor();
    event_logging.v4.ProcessComplexTypeOuterClass.getDescriptor();
    event_logging.v4.PurposeComplexTypeOuterClass.getDescriptor();
    event_logging.v4.ReceiveComplexTypeOuterClass.getDescriptor();
    event_logging.v4.SearchComplexTypeOuterClass.getDescriptor();
    event_logging.v4.SendComplexTypeOuterClass.getDescriptor();
    event_logging.v4.UninstallComplexTypeOuterClass.getDescriptor();
    event_logging.v4.UpdateComplexTypeOuterClass.getDescriptor();
    event_logging.v4.ViewComplexTypeOuterClass.getDescriptor();
    build.buf.validate.ValidateProto.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(build.buf.validate.ValidateProto.field);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
