// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event_logging/v4/update_complex_type.proto
// Protobuf Java Version: 4.26.1

package event_logging.v4;

public final class UpdateComplexTypeOuterClass {
  private UpdateComplexTypeOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      UpdateComplexTypeOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface UpdateComplexTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:event_logging.v4.UpdateComplexType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Describes the state of one or more object properties before it was changed.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType before = 1;</code>
     * @return Whether the before field is set.
     */
    boolean hasBefore();
    /**
     * <pre>
     * Describes the state of one or more object properties before it was changed.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType before = 1;</code>
     * @return The before.
     */
    event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType getBefore();
    /**
     * <pre>
     * Describes the state of one or more object properties before it was changed.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType before = 1;</code>
     */
    event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder getBeforeOrBuilder();

    /**
     * <pre>
     * Describes the state of one or more object properties after it was changed.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType after = 2 [(.buf.validate.field) = { ... }</code>
     * @return Whether the after field is set.
     */
    boolean hasAfter();
    /**
     * <pre>
     * Describes the state of one or more object properties after it was changed.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType after = 2 [(.buf.validate.field) = { ... }</code>
     * @return The after.
     */
    event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType getAfter();
    /**
     * <pre>
     * Describes the state of one or more object properties after it was changed.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType after = 2 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder getAfterOrBuilder();

    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 3;</code>
     * @return Whether the outcome field is set.
     */
    boolean hasOutcome();
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 3;</code>
     * @return The outcome.
     */
    event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType getOutcome();
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 3;</code>
     */
    event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexTypeOrBuilder getOutcomeOrBuilder();

    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
     */
    java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> 
        getDataList();
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index);
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
     */
    int getDataCount();
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
     */
    java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
        getDataOrBuilderList();
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
     */
    event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Describes the update/modification/change to a file, object, entity, piece of data, etc.
   * </pre>
   *
   * Protobuf type {@code event_logging.v4.UpdateComplexType}
   */
  public static final class UpdateComplexType extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:event_logging.v4.UpdateComplexType)
      UpdateComplexTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        UpdateComplexType.class.getName());
    }
    // Use UpdateComplexType.newBuilder() to construct.
    private UpdateComplexType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private UpdateComplexType() {
      data_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return event_logging.v4.UpdateComplexTypeOuterClass.internal_static_event_logging_v4_UpdateComplexType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return event_logging.v4.UpdateComplexTypeOuterClass.internal_static_event_logging_v4_UpdateComplexType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType.class, event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType.Builder.class);
    }

    private int bitField0_;
    public static final int BEFORE_FIELD_NUMBER = 1;
    private event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType before_;
    /**
     * <pre>
     * Describes the state of one or more object properties before it was changed.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType before = 1;</code>
     * @return Whether the before field is set.
     */
    @java.lang.Override
    public boolean hasBefore() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Describes the state of one or more object properties before it was changed.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType before = 1;</code>
     * @return The before.
     */
    @java.lang.Override
    public event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType getBefore() {
      return before_ == null ? event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.getDefaultInstance() : before_;
    }
    /**
     * <pre>
     * Describes the state of one or more object properties before it was changed.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType before = 1;</code>
     */
    @java.lang.Override
    public event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder getBeforeOrBuilder() {
      return before_ == null ? event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.getDefaultInstance() : before_;
    }

    public static final int AFTER_FIELD_NUMBER = 2;
    private event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType after_;
    /**
     * <pre>
     * Describes the state of one or more object properties after it was changed.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType after = 2 [(.buf.validate.field) = { ... }</code>
     * @return Whether the after field is set.
     */
    @java.lang.Override
    public boolean hasAfter() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Describes the state of one or more object properties after it was changed.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType after = 2 [(.buf.validate.field) = { ... }</code>
     * @return The after.
     */
    @java.lang.Override
    public event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType getAfter() {
      return after_ == null ? event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.getDefaultInstance() : after_;
    }
    /**
     * <pre>
     * Describes the state of one or more object properties after it was changed.
     * </pre>
     *
     * <code>.event_logging.v4.MultiObjectComplexType after = 2 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder getAfterOrBuilder() {
      return after_ == null ? event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.getDefaultInstance() : after_;
    }

    public static final int OUTCOME_FIELD_NUMBER = 3;
    private event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType outcome_;
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 3;</code>
     * @return Whether the outcome field is set.
     */
    @java.lang.Override
    public boolean hasOutcome() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 3;</code>
     * @return The outcome.
     */
    @java.lang.Override
    public event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType getOutcome() {
      return outcome_ == null ? event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.getDefaultInstance() : outcome_;
    }
    /**
     * <pre>
     * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
     * </pre>
     *
     * <code>.event_logging.v4.OutcomeComplexType outcome = 3;</code>
     */
    @java.lang.Override
    public event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexTypeOrBuilder getOutcomeOrBuilder() {
      return outcome_ == null ? event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.getDefaultInstance() : outcome_;
    }

    public static final int DATA_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> data_;
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> getDataList() {
      return data_;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
        getDataOrBuilderList() {
      return data_;
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index) {
      return data_.get(index);
    }
    /**
     * <pre>
     * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
     * </pre>
     *
     * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
     */
    @java.lang.Override
    public event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
        int index) {
      return data_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getBefore());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getAfter());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getOutcome());
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeMessage(4, data_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBefore());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAfter());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getOutcome());
      }
      for (int i = 0; i < data_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, data_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType)) {
        return super.equals(obj);
      }
      event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType other = (event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType) obj;

      if (hasBefore() != other.hasBefore()) return false;
      if (hasBefore()) {
        if (!getBefore()
            .equals(other.getBefore())) return false;
      }
      if (hasAfter() != other.hasAfter()) return false;
      if (hasAfter()) {
        if (!getAfter()
            .equals(other.getAfter())) return false;
      }
      if (hasOutcome() != other.hasOutcome()) return false;
      if (hasOutcome()) {
        if (!getOutcome()
            .equals(other.getOutcome())) return false;
      }
      if (!getDataList()
          .equals(other.getDataList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBefore()) {
        hash = (37 * hash) + BEFORE_FIELD_NUMBER;
        hash = (53 * hash) + getBefore().hashCode();
      }
      if (hasAfter()) {
        hash = (37 * hash) + AFTER_FIELD_NUMBER;
        hash = (53 * hash) + getAfter().hashCode();
      }
      if (hasOutcome()) {
        hash = (37 * hash) + OUTCOME_FIELD_NUMBER;
        hash = (53 * hash) + getOutcome().hashCode();
      }
      if (getDataCount() > 0) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDataList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes the update/modification/change to a file, object, entity, piece of data, etc.
     * </pre>
     *
     * Protobuf type {@code event_logging.v4.UpdateComplexType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:event_logging.v4.UpdateComplexType)
        event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return event_logging.v4.UpdateComplexTypeOuterClass.internal_static_event_logging_v4_UpdateComplexType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return event_logging.v4.UpdateComplexTypeOuterClass.internal_static_event_logging_v4_UpdateComplexType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType.class, event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType.Builder.class);
      }

      // Construct using event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getBeforeFieldBuilder();
          getAfterFieldBuilder();
          getOutcomeFieldBuilder();
          getDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        before_ = null;
        if (beforeBuilder_ != null) {
          beforeBuilder_.dispose();
          beforeBuilder_ = null;
        }
        after_ = null;
        if (afterBuilder_ != null) {
          afterBuilder_.dispose();
          afterBuilder_ = null;
        }
        outcome_ = null;
        if (outcomeBuilder_ != null) {
          outcomeBuilder_.dispose();
          outcomeBuilder_ = null;
        }
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
        } else {
          data_ = null;
          dataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return event_logging.v4.UpdateComplexTypeOuterClass.internal_static_event_logging_v4_UpdateComplexType_descriptor;
      }

      @java.lang.Override
      public event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType getDefaultInstanceForType() {
        return event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType.getDefaultInstance();
      }

      @java.lang.Override
      public event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType build() {
        event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType buildPartial() {
        event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType result = new event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType result) {
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
      }

      private void buildPartial0(event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.before_ = beforeBuilder_ == null
              ? before_
              : beforeBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.after_ = afterBuilder_ == null
              ? after_
              : afterBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.outcome_ = outcomeBuilder_ == null
              ? outcome_
              : outcomeBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType) {
          return mergeFrom((event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType other) {
        if (other == event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType.getDefaultInstance()) return this;
        if (other.hasBefore()) {
          mergeBefore(other.getBefore());
        }
        if (other.hasAfter()) {
          mergeAfter(other.getAfter());
        }
        if (other.hasOutcome()) {
          mergeOutcome(other.getOutcome());
        }
        if (dataBuilder_ == null) {
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
        } else {
          if (!other.data_.isEmpty()) {
            if (dataBuilder_.isEmpty()) {
              dataBuilder_.dispose();
              dataBuilder_ = null;
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000008);
              dataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDataFieldBuilder() : null;
            } else {
              dataBuilder_.addAllMessages(other.data_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getBeforeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getAfterFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getOutcomeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                event_logging.v4.DataComplexTypeOuterClass.DataComplexType m =
                    input.readMessage(
                        event_logging.v4.DataComplexTypeOuterClass.DataComplexType.parser(),
                        extensionRegistry);
                if (dataBuilder_ == null) {
                  ensureDataIsMutable();
                  data_.add(m);
                } else {
                  dataBuilder_.addMessage(m);
                }
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType before_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.Builder, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder> beforeBuilder_;
      /**
       * <pre>
       * Describes the state of one or more object properties before it was changed.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType before = 1;</code>
       * @return Whether the before field is set.
       */
      public boolean hasBefore() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Describes the state of one or more object properties before it was changed.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType before = 1;</code>
       * @return The before.
       */
      public event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType getBefore() {
        if (beforeBuilder_ == null) {
          return before_ == null ? event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.getDefaultInstance() : before_;
        } else {
          return beforeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Describes the state of one or more object properties before it was changed.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType before = 1;</code>
       */
      public Builder setBefore(event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType value) {
        if (beforeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          before_ = value;
        } else {
          beforeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes the state of one or more object properties before it was changed.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType before = 1;</code>
       */
      public Builder setBefore(
          event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.Builder builderForValue) {
        if (beforeBuilder_ == null) {
          before_ = builderForValue.build();
        } else {
          beforeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes the state of one or more object properties before it was changed.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType before = 1;</code>
       */
      public Builder mergeBefore(event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType value) {
        if (beforeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            before_ != null &&
            before_ != event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.getDefaultInstance()) {
            getBeforeBuilder().mergeFrom(value);
          } else {
            before_ = value;
          }
        } else {
          beforeBuilder_.mergeFrom(value);
        }
        if (before_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Describes the state of one or more object properties before it was changed.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType before = 1;</code>
       */
      public Builder clearBefore() {
        bitField0_ = (bitField0_ & ~0x00000001);
        before_ = null;
        if (beforeBuilder_ != null) {
          beforeBuilder_.dispose();
          beforeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes the state of one or more object properties before it was changed.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType before = 1;</code>
       */
      public event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.Builder getBeforeBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getBeforeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Describes the state of one or more object properties before it was changed.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType before = 1;</code>
       */
      public event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder getBeforeOrBuilder() {
        if (beforeBuilder_ != null) {
          return beforeBuilder_.getMessageOrBuilder();
        } else {
          return before_ == null ?
              event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.getDefaultInstance() : before_;
        }
      }
      /**
       * <pre>
       * Describes the state of one or more object properties before it was changed.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType before = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.Builder, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder> 
          getBeforeFieldBuilder() {
        if (beforeBuilder_ == null) {
          beforeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.Builder, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder>(
                  getBefore(),
                  getParentForChildren(),
                  isClean());
          before_ = null;
        }
        return beforeBuilder_;
      }

      private event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType after_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.Builder, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder> afterBuilder_;
      /**
       * <pre>
       * Describes the state of one or more object properties after it was changed.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType after = 2 [(.buf.validate.field) = { ... }</code>
       * @return Whether the after field is set.
       */
      public boolean hasAfter() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Describes the state of one or more object properties after it was changed.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType after = 2 [(.buf.validate.field) = { ... }</code>
       * @return The after.
       */
      public event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType getAfter() {
        if (afterBuilder_ == null) {
          return after_ == null ? event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.getDefaultInstance() : after_;
        } else {
          return afterBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Describes the state of one or more object properties after it was changed.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType after = 2 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setAfter(event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType value) {
        if (afterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          after_ = value;
        } else {
          afterBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes the state of one or more object properties after it was changed.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType after = 2 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setAfter(
          event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.Builder builderForValue) {
        if (afterBuilder_ == null) {
          after_ = builderForValue.build();
        } else {
          afterBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes the state of one or more object properties after it was changed.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType after = 2 [(.buf.validate.field) = { ... }</code>
       */
      public Builder mergeAfter(event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType value) {
        if (afterBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            after_ != null &&
            after_ != event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.getDefaultInstance()) {
            getAfterBuilder().mergeFrom(value);
          } else {
            after_ = value;
          }
        } else {
          afterBuilder_.mergeFrom(value);
        }
        if (after_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Describes the state of one or more object properties after it was changed.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType after = 2 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearAfter() {
        bitField0_ = (bitField0_ & ~0x00000002);
        after_ = null;
        if (afterBuilder_ != null) {
          afterBuilder_.dispose();
          afterBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Describes the state of one or more object properties after it was changed.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType after = 2 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.Builder getAfterBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getAfterFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Describes the state of one or more object properties after it was changed.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType after = 2 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder getAfterOrBuilder() {
        if (afterBuilder_ != null) {
          return afterBuilder_.getMessageOrBuilder();
        } else {
          return after_ == null ?
              event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.getDefaultInstance() : after_;
        }
      }
      /**
       * <pre>
       * Describes the state of one or more object properties after it was changed.
       * </pre>
       *
       * <code>.event_logging.v4.MultiObjectComplexType after = 2 [(.buf.validate.field) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.Builder, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder> 
          getAfterFieldBuilder() {
        if (afterBuilder_ == null) {
          afterBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexType.Builder, event_logging.v4.MultiObjectComplexTypeOuterClass.MultiObjectComplexTypeOrBuilder>(
                  getAfter(),
                  getParentForChildren(),
                  isClean());
          after_ = null;
        }
        return afterBuilder_;
      }

      private event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType outcome_;
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType, event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.Builder, event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexTypeOrBuilder> outcomeBuilder_;
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 3;</code>
       * @return Whether the outcome field is set.
       */
      public boolean hasOutcome() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 3;</code>
       * @return The outcome.
       */
      public event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType getOutcome() {
        if (outcomeBuilder_ == null) {
          return outcome_ == null ? event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.getDefaultInstance() : outcome_;
        } else {
          return outcomeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 3;</code>
       */
      public Builder setOutcome(event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType value) {
        if (outcomeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          outcome_ = value;
        } else {
          outcomeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 3;</code>
       */
      public Builder setOutcome(
          event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.Builder builderForValue) {
        if (outcomeBuilder_ == null) {
          outcome_ = builderForValue.build();
        } else {
          outcomeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 3;</code>
       */
      public Builder mergeOutcome(event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType value) {
        if (outcomeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            outcome_ != null &&
            outcome_ != event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.getDefaultInstance()) {
            getOutcomeBuilder().mergeFrom(value);
          } else {
            outcome_ = value;
          }
        } else {
          outcomeBuilder_.mergeFrom(value);
        }
        if (outcome_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 3;</code>
       */
      public Builder clearOutcome() {
        bitField0_ = (bitField0_ & ~0x00000004);
        outcome_ = null;
        if (outcomeBuilder_ != null) {
          outcomeBuilder_.dispose();
          outcomeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 3;</code>
       */
      public event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.Builder getOutcomeBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getOutcomeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 3;</code>
       */
      public event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexTypeOrBuilder getOutcomeOrBuilder() {
        if (outcomeBuilder_ != null) {
          return outcomeBuilder_.getMessageOrBuilder();
        } else {
          return outcome_ == null ?
              event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.getDefaultInstance() : outcome_;
        }
      }
      /**
       * <pre>
       * Used to determine if the action was successful. If omitted it is assumed that the event was successful and was permitted.
       * </pre>
       *
       * <code>.event_logging.v4.OutcomeComplexType outcome = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType, event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.Builder, event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexTypeOrBuilder> 
          getOutcomeFieldBuilder() {
        if (outcomeBuilder_ == null) {
          outcomeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType, event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexType.Builder, event_logging.v4.OutcomeComplexTypeOuterClass.OutcomeComplexTypeOrBuilder>(
                  getOutcome(),
                  getParentForChildren(),
                  isClean());
          outcome_ = null;
        }
        return outcomeBuilder_;
      }

      private java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> data_ =
        java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          data_ = new java.util.ArrayList<event_logging.v4.DataComplexTypeOuterClass.DataComplexType>(data_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> dataBuilder_;

      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType> getDataList() {
        if (dataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(data_);
        } else {
          return dataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
       */
      public int getDataCount() {
        if (dataBuilder_ == null) {
          return data_.size();
        } else {
          return dataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType getData(int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);
        } else {
          return dataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
        } else {
          dataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
       */
      public Builder setData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
        } else {
          dataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(index, value);
          onChanged();
        } else {
          dataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(
          event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addData(
          int index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexType> values) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, data_);
          onChanged();
        } else {
          dataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
       */
      public Builder removeData(int index) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.remove(index);
          onChanged();
        } else {
          dataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder getDataBuilder(
          int index) {
        return getDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder getDataOrBuilder(
          int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);  } else {
          return dataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<? extends event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
           getDataOrBuilderList() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(data_);
        }
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder addDataBuilder() {
        return getDataFieldBuilder().addBuilder(
            event_logging.v4.DataComplexTypeOuterClass.DataComplexType.getDefaultInstance());
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
       */
      public event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder addDataBuilder(
          int index) {
        return getDataFieldBuilder().addBuilder(
            index, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.getDefaultInstance());
      }
      /**
       * <pre>
       * Any other event data that does not fit into a schema element but may be useful for the purpose of audit.
       * </pre>
       *
       * <code>repeated .event_logging.v4.DataComplexType data = 4 [(.buf.validate.field) = { ... }</code>
       */
      public java.util.List<event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder> 
           getDataBuilderList() {
        return getDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              event_logging.v4.DataComplexTypeOuterClass.DataComplexType, event_logging.v4.DataComplexTypeOuterClass.DataComplexType.Builder, event_logging.v4.DataComplexTypeOuterClass.DataComplexTypeOrBuilder>(
                  data_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:event_logging.v4.UpdateComplexType)
    }

    // @@protoc_insertion_point(class_scope:event_logging.v4.UpdateComplexType)
    private static final event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType();
    }

    public static event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UpdateComplexType>
        PARSER = new com.google.protobuf.AbstractParser<UpdateComplexType>() {
      @java.lang.Override
      public UpdateComplexType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<UpdateComplexType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UpdateComplexType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public event_logging.v4.UpdateComplexTypeOuterClass.UpdateComplexType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_event_logging_v4_UpdateComplexType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_event_logging_v4_UpdateComplexType_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n*event_logging/v4/update_complex_type.p" +
      "roto\022\020event_logging.v4\032(event_logging/v4" +
      "/data_complex_type.proto\0320event_logging/" +
      "v4/multi_object_complex_type.proto\032+even" +
      "t_logging/v4/outcome_complex_type.proto\032" +
      "\033buf/validate/validate.proto\"\376\001\n\021UpdateC" +
      "omplexType\0228\n\006before\030\001 \001(\0132(.event_loggi" +
      "ng.v4.MultiObjectComplexType\022?\n\005after\030\002 " +
      "\001(\0132(.event_logging.v4.MultiObjectComple" +
      "xTypeB\006\272H\003\310\001\001\0225\n\007outcome\030\003 \001(\0132$.event_l" +
      "ogging.v4.OutcomeComplexType\0227\n\004data\030\004 \003" +
      "(\0132!.event_logging.v4.DataComplexTypeB\006\272" +
      "H\003\222\001\000b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          event_logging.v4.DataComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.MultiObjectComplexTypeOuterClass.getDescriptor(),
          event_logging.v4.OutcomeComplexTypeOuterClass.getDescriptor(),
          build.buf.validate.ValidateProto.getDescriptor(),
        });
    internal_static_event_logging_v4_UpdateComplexType_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_event_logging_v4_UpdateComplexType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_event_logging_v4_UpdateComplexType_descriptor,
        new java.lang.String[] { "Before", "After", "Outcome", "Data", });
    descriptor.resolveAllFeaturesImmutable();
    event_logging.v4.DataComplexTypeOuterClass.getDescriptor();
    event_logging.v4.MultiObjectComplexTypeOuterClass.getDescriptor();
    event_logging.v4.OutcomeComplexTypeOuterClass.getDescriptor();
    build.buf.validate.ValidateProto.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(build.buf.validate.ValidateProto.field);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
